
#define FUTHARK_CUDA
#define FUTHARK_F64_ENABLED

typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef uint8_t uchar;
typedef uint16_t ushort;
typedef uint32_t uint;
typedef uint64_t ulong;
#define __kernel extern "C" __global__ __launch_bounds__(MAX_THREADS_PER_BLOCK)
#define __global
#define __local
#define __private
#define __constant
#define __write_only
#define __read_only

static inline int get_group_id_fn(int block_dim0, int block_dim1, int block_dim2, int d) {
  switch (d) {
    case 0: d = block_dim0; break;
    case 1: d = block_dim1; break;
    case 2: d = block_dim2; break;
  }
  switch (d) {
    case 0: return blockIdx.x;
    case 1: return blockIdx.y;
    case 2: return blockIdx.z;
    default: return 0;
  }
}
#define get_group_id(d) get_group_id_fn(block_dim0, block_dim1, block_dim2, d)

static inline int get_num_groups_fn(int block_dim0, int block_dim1, int block_dim2, int d) {
  switch (d) {
    case 0: d = block_dim0; break;
    case 1: d = block_dim1; break;
    case 2: d = block_dim2; break;
  }
  switch(d) {
    case 0: return gridDim.x;
    case 1: return gridDim.y;
    case 2: return gridDim.z;
    default: return 0;
  }
}
#define get_num_groups(d) get_num_groups_fn(block_dim0, block_dim1, block_dim2, d)

static inline int get_local_id(int d) {
  switch (d) {
    case 0: return threadIdx.x;
    case 1: return threadIdx.y;
    case 2: return threadIdx.z;
    default: return 0;
  }
}

static inline int get_local_size(int d) {
  switch (d) {
    case 0: return blockDim.x;
    case 1: return blockDim.y;
    case 2: return blockDim.z;
    default: return 0;
  }
}

static inline int get_global_id_fn(int block_dim0, int block_dim1, int block_dim2, int d) {
  return get_group_id(d) * get_local_size(d) + get_local_id(d);
}
#define get_global_id(d) get_global_id_fn(block_dim0, block_dim1, block_dim2, d)

static inline int get_global_size(int block_dim0, int block_dim1, int block_dim2, int d) {
  return get_num_groups(d) * get_local_size(d);
}

#define CLK_LOCAL_MEM_FENCE 1
#define CLK_GLOBAL_MEM_FENCE 2
static inline void barrier(int x) {
  __syncthreads();
}
static inline void mem_fence_local() {
  __threadfence_block();
}
static inline void mem_fence_global() {
  __threadfence();
}

#define NAN (0.0/0.0)
#define INFINITY (1.0/0.0)
extern volatile __shared__ unsigned char shared_mem[];
// Start of half.h.

// Conversion functions are from http://half.sourceforge.net/, but
// translated to C.
//
// Copyright (c) 2012-2021 Christian Rau
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

#ifndef __OPENCL_VERSION__
#define __constant
#endif

__constant static const uint16_t base_table[512] = {
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x0002, 0x0004, 0x0008, 0x0010, 0x0020, 0x0040, 0x0080, 0x0100,
  0x0200, 0x0400, 0x0800, 0x0C00, 0x1000, 0x1400, 0x1800, 0x1C00, 0x2000, 0x2400, 0x2800, 0x2C00, 0x3000, 0x3400, 0x3800, 0x3C00,
  0x4000, 0x4400, 0x4800, 0x4C00, 0x5000, 0x5400, 0x5800, 0x5C00, 0x6000, 0x6400, 0x6800, 0x6C00, 0x7000, 0x7400, 0x7800, 0x7C00,
  0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00,
  0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00,
  0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00,
  0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00,
  0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00,
  0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00,
  0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00, 0x7C00,
  0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
  0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
  0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
  0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
  0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
  0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000,
  0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8000, 0x8001, 0x8002, 0x8004, 0x8008, 0x8010, 0x8020, 0x8040, 0x8080, 0x8100,
  0x8200, 0x8400, 0x8800, 0x8C00, 0x9000, 0x9400, 0x9800, 0x9C00, 0xA000, 0xA400, 0xA800, 0xAC00, 0xB000, 0xB400, 0xB800, 0xBC00,
  0xC000, 0xC400, 0xC800, 0xCC00, 0xD000, 0xD400, 0xD800, 0xDC00, 0xE000, 0xE400, 0xE800, 0xEC00, 0xF000, 0xF400, 0xF800, 0xFC00,
  0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00,
  0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00,
  0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00,
  0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00,
  0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00,
  0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00,
  0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00, 0xFC00 };

__constant static const unsigned char shift_table[512] = {
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
  13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 13,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
  13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 13 };

__constant static const uint32_t mantissa_table[2048] = {
  0x00000000, 0x33800000, 0x34000000, 0x34400000, 0x34800000, 0x34A00000, 0x34C00000, 0x34E00000, 0x35000000, 0x35100000, 0x35200000, 0x35300000, 0x35400000, 0x35500000, 0x35600000, 0x35700000,
  0x35800000, 0x35880000, 0x35900000, 0x35980000, 0x35A00000, 0x35A80000, 0x35B00000, 0x35B80000, 0x35C00000, 0x35C80000, 0x35D00000, 0x35D80000, 0x35E00000, 0x35E80000, 0x35F00000, 0x35F80000,
  0x36000000, 0x36040000, 0x36080000, 0x360C0000, 0x36100000, 0x36140000, 0x36180000, 0x361C0000, 0x36200000, 0x36240000, 0x36280000, 0x362C0000, 0x36300000, 0x36340000, 0x36380000, 0x363C0000,
  0x36400000, 0x36440000, 0x36480000, 0x364C0000, 0x36500000, 0x36540000, 0x36580000, 0x365C0000, 0x36600000, 0x36640000, 0x36680000, 0x366C0000, 0x36700000, 0x36740000, 0x36780000, 0x367C0000,
  0x36800000, 0x36820000, 0x36840000, 0x36860000, 0x36880000, 0x368A0000, 0x368C0000, 0x368E0000, 0x36900000, 0x36920000, 0x36940000, 0x36960000, 0x36980000, 0x369A0000, 0x369C0000, 0x369E0000,
  0x36A00000, 0x36A20000, 0x36A40000, 0x36A60000, 0x36A80000, 0x36AA0000, 0x36AC0000, 0x36AE0000, 0x36B00000, 0x36B20000, 0x36B40000, 0x36B60000, 0x36B80000, 0x36BA0000, 0x36BC0000, 0x36BE0000,
  0x36C00000, 0x36C20000, 0x36C40000, 0x36C60000, 0x36C80000, 0x36CA0000, 0x36CC0000, 0x36CE0000, 0x36D00000, 0x36D20000, 0x36D40000, 0x36D60000, 0x36D80000, 0x36DA0000, 0x36DC0000, 0x36DE0000,
  0x36E00000, 0x36E20000, 0x36E40000, 0x36E60000, 0x36E80000, 0x36EA0000, 0x36EC0000, 0x36EE0000, 0x36F00000, 0x36F20000, 0x36F40000, 0x36F60000, 0x36F80000, 0x36FA0000, 0x36FC0000, 0x36FE0000,
  0x37000000, 0x37010000, 0x37020000, 0x37030000, 0x37040000, 0x37050000, 0x37060000, 0x37070000, 0x37080000, 0x37090000, 0x370A0000, 0x370B0000, 0x370C0000, 0x370D0000, 0x370E0000, 0x370F0000,
  0x37100000, 0x37110000, 0x37120000, 0x37130000, 0x37140000, 0x37150000, 0x37160000, 0x37170000, 0x37180000, 0x37190000, 0x371A0000, 0x371B0000, 0x371C0000, 0x371D0000, 0x371E0000, 0x371F0000,
  0x37200000, 0x37210000, 0x37220000, 0x37230000, 0x37240000, 0x37250000, 0x37260000, 0x37270000, 0x37280000, 0x37290000, 0x372A0000, 0x372B0000, 0x372C0000, 0x372D0000, 0x372E0000, 0x372F0000,
  0x37300000, 0x37310000, 0x37320000, 0x37330000, 0x37340000, 0x37350000, 0x37360000, 0x37370000, 0x37380000, 0x37390000, 0x373A0000, 0x373B0000, 0x373C0000, 0x373D0000, 0x373E0000, 0x373F0000,
  0x37400000, 0x37410000, 0x37420000, 0x37430000, 0x37440000, 0x37450000, 0x37460000, 0x37470000, 0x37480000, 0x37490000, 0x374A0000, 0x374B0000, 0x374C0000, 0x374D0000, 0x374E0000, 0x374F0000,
  0x37500000, 0x37510000, 0x37520000, 0x37530000, 0x37540000, 0x37550000, 0x37560000, 0x37570000, 0x37580000, 0x37590000, 0x375A0000, 0x375B0000, 0x375C0000, 0x375D0000, 0x375E0000, 0x375F0000,
  0x37600000, 0x37610000, 0x37620000, 0x37630000, 0x37640000, 0x37650000, 0x37660000, 0x37670000, 0x37680000, 0x37690000, 0x376A0000, 0x376B0000, 0x376C0000, 0x376D0000, 0x376E0000, 0x376F0000,
  0x37700000, 0x37710000, 0x37720000, 0x37730000, 0x37740000, 0x37750000, 0x37760000, 0x37770000, 0x37780000, 0x37790000, 0x377A0000, 0x377B0000, 0x377C0000, 0x377D0000, 0x377E0000, 0x377F0000,
  0x37800000, 0x37808000, 0x37810000, 0x37818000, 0x37820000, 0x37828000, 0x37830000, 0x37838000, 0x37840000, 0x37848000, 0x37850000, 0x37858000, 0x37860000, 0x37868000, 0x37870000, 0x37878000,
  0x37880000, 0x37888000, 0x37890000, 0x37898000, 0x378A0000, 0x378A8000, 0x378B0000, 0x378B8000, 0x378C0000, 0x378C8000, 0x378D0000, 0x378D8000, 0x378E0000, 0x378E8000, 0x378F0000, 0x378F8000,
  0x37900000, 0x37908000, 0x37910000, 0x37918000, 0x37920000, 0x37928000, 0x37930000, 0x37938000, 0x37940000, 0x37948000, 0x37950000, 0x37958000, 0x37960000, 0x37968000, 0x37970000, 0x37978000,
  0x37980000, 0x37988000, 0x37990000, 0x37998000, 0x379A0000, 0x379A8000, 0x379B0000, 0x379B8000, 0x379C0000, 0x379C8000, 0x379D0000, 0x379D8000, 0x379E0000, 0x379E8000, 0x379F0000, 0x379F8000,
  0x37A00000, 0x37A08000, 0x37A10000, 0x37A18000, 0x37A20000, 0x37A28000, 0x37A30000, 0x37A38000, 0x37A40000, 0x37A48000, 0x37A50000, 0x37A58000, 0x37A60000, 0x37A68000, 0x37A70000, 0x37A78000,
  0x37A80000, 0x37A88000, 0x37A90000, 0x37A98000, 0x37AA0000, 0x37AA8000, 0x37AB0000, 0x37AB8000, 0x37AC0000, 0x37AC8000, 0x37AD0000, 0x37AD8000, 0x37AE0000, 0x37AE8000, 0x37AF0000, 0x37AF8000,
  0x37B00000, 0x37B08000, 0x37B10000, 0x37B18000, 0x37B20000, 0x37B28000, 0x37B30000, 0x37B38000, 0x37B40000, 0x37B48000, 0x37B50000, 0x37B58000, 0x37B60000, 0x37B68000, 0x37B70000, 0x37B78000,
  0x37B80000, 0x37B88000, 0x37B90000, 0x37B98000, 0x37BA0000, 0x37BA8000, 0x37BB0000, 0x37BB8000, 0x37BC0000, 0x37BC8000, 0x37BD0000, 0x37BD8000, 0x37BE0000, 0x37BE8000, 0x37BF0000, 0x37BF8000,
  0x37C00000, 0x37C08000, 0x37C10000, 0x37C18000, 0x37C20000, 0x37C28000, 0x37C30000, 0x37C38000, 0x37C40000, 0x37C48000, 0x37C50000, 0x37C58000, 0x37C60000, 0x37C68000, 0x37C70000, 0x37C78000,
  0x37C80000, 0x37C88000, 0x37C90000, 0x37C98000, 0x37CA0000, 0x37CA8000, 0x37CB0000, 0x37CB8000, 0x37CC0000, 0x37CC8000, 0x37CD0000, 0x37CD8000, 0x37CE0000, 0x37CE8000, 0x37CF0000, 0x37CF8000,
  0x37D00000, 0x37D08000, 0x37D10000, 0x37D18000, 0x37D20000, 0x37D28000, 0x37D30000, 0x37D38000, 0x37D40000, 0x37D48000, 0x37D50000, 0x37D58000, 0x37D60000, 0x37D68000, 0x37D70000, 0x37D78000,
  0x37D80000, 0x37D88000, 0x37D90000, 0x37D98000, 0x37DA0000, 0x37DA8000, 0x37DB0000, 0x37DB8000, 0x37DC0000, 0x37DC8000, 0x37DD0000, 0x37DD8000, 0x37DE0000, 0x37DE8000, 0x37DF0000, 0x37DF8000,
  0x37E00000, 0x37E08000, 0x37E10000, 0x37E18000, 0x37E20000, 0x37E28000, 0x37E30000, 0x37E38000, 0x37E40000, 0x37E48000, 0x37E50000, 0x37E58000, 0x37E60000, 0x37E68000, 0x37E70000, 0x37E78000,
  0x37E80000, 0x37E88000, 0x37E90000, 0x37E98000, 0x37EA0000, 0x37EA8000, 0x37EB0000, 0x37EB8000, 0x37EC0000, 0x37EC8000, 0x37ED0000, 0x37ED8000, 0x37EE0000, 0x37EE8000, 0x37EF0000, 0x37EF8000,
  0x37F00000, 0x37F08000, 0x37F10000, 0x37F18000, 0x37F20000, 0x37F28000, 0x37F30000, 0x37F38000, 0x37F40000, 0x37F48000, 0x37F50000, 0x37F58000, 0x37F60000, 0x37F68000, 0x37F70000, 0x37F78000,
  0x37F80000, 0x37F88000, 0x37F90000, 0x37F98000, 0x37FA0000, 0x37FA8000, 0x37FB0000, 0x37FB8000, 0x37FC0000, 0x37FC8000, 0x37FD0000, 0x37FD8000, 0x37FE0000, 0x37FE8000, 0x37FF0000, 0x37FF8000,
  0x38000000, 0x38004000, 0x38008000, 0x3800C000, 0x38010000, 0x38014000, 0x38018000, 0x3801C000, 0x38020000, 0x38024000, 0x38028000, 0x3802C000, 0x38030000, 0x38034000, 0x38038000, 0x3803C000,
  0x38040000, 0x38044000, 0x38048000, 0x3804C000, 0x38050000, 0x38054000, 0x38058000, 0x3805C000, 0x38060000, 0x38064000, 0x38068000, 0x3806C000, 0x38070000, 0x38074000, 0x38078000, 0x3807C000,
  0x38080000, 0x38084000, 0x38088000, 0x3808C000, 0x38090000, 0x38094000, 0x38098000, 0x3809C000, 0x380A0000, 0x380A4000, 0x380A8000, 0x380AC000, 0x380B0000, 0x380B4000, 0x380B8000, 0x380BC000,
  0x380C0000, 0x380C4000, 0x380C8000, 0x380CC000, 0x380D0000, 0x380D4000, 0x380D8000, 0x380DC000, 0x380E0000, 0x380E4000, 0x380E8000, 0x380EC000, 0x380F0000, 0x380F4000, 0x380F8000, 0x380FC000,
  0x38100000, 0x38104000, 0x38108000, 0x3810C000, 0x38110000, 0x38114000, 0x38118000, 0x3811C000, 0x38120000, 0x38124000, 0x38128000, 0x3812C000, 0x38130000, 0x38134000, 0x38138000, 0x3813C000,
  0x38140000, 0x38144000, 0x38148000, 0x3814C000, 0x38150000, 0x38154000, 0x38158000, 0x3815C000, 0x38160000, 0x38164000, 0x38168000, 0x3816C000, 0x38170000, 0x38174000, 0x38178000, 0x3817C000,
  0x38180000, 0x38184000, 0x38188000, 0x3818C000, 0x38190000, 0x38194000, 0x38198000, 0x3819C000, 0x381A0000, 0x381A4000, 0x381A8000, 0x381AC000, 0x381B0000, 0x381B4000, 0x381B8000, 0x381BC000,
  0x381C0000, 0x381C4000, 0x381C8000, 0x381CC000, 0x381D0000, 0x381D4000, 0x381D8000, 0x381DC000, 0x381E0000, 0x381E4000, 0x381E8000, 0x381EC000, 0x381F0000, 0x381F4000, 0x381F8000, 0x381FC000,
  0x38200000, 0x38204000, 0x38208000, 0x3820C000, 0x38210000, 0x38214000, 0x38218000, 0x3821C000, 0x38220000, 0x38224000, 0x38228000, 0x3822C000, 0x38230000, 0x38234000, 0x38238000, 0x3823C000,
  0x38240000, 0x38244000, 0x38248000, 0x3824C000, 0x38250000, 0x38254000, 0x38258000, 0x3825C000, 0x38260000, 0x38264000, 0x38268000, 0x3826C000, 0x38270000, 0x38274000, 0x38278000, 0x3827C000,
  0x38280000, 0x38284000, 0x38288000, 0x3828C000, 0x38290000, 0x38294000, 0x38298000, 0x3829C000, 0x382A0000, 0x382A4000, 0x382A8000, 0x382AC000, 0x382B0000, 0x382B4000, 0x382B8000, 0x382BC000,
  0x382C0000, 0x382C4000, 0x382C8000, 0x382CC000, 0x382D0000, 0x382D4000, 0x382D8000, 0x382DC000, 0x382E0000, 0x382E4000, 0x382E8000, 0x382EC000, 0x382F0000, 0x382F4000, 0x382F8000, 0x382FC000,
  0x38300000, 0x38304000, 0x38308000, 0x3830C000, 0x38310000, 0x38314000, 0x38318000, 0x3831C000, 0x38320000, 0x38324000, 0x38328000, 0x3832C000, 0x38330000, 0x38334000, 0x38338000, 0x3833C000,
  0x38340000, 0x38344000, 0x38348000, 0x3834C000, 0x38350000, 0x38354000, 0x38358000, 0x3835C000, 0x38360000, 0x38364000, 0x38368000, 0x3836C000, 0x38370000, 0x38374000, 0x38378000, 0x3837C000,
  0x38380000, 0x38384000, 0x38388000, 0x3838C000, 0x38390000, 0x38394000, 0x38398000, 0x3839C000, 0x383A0000, 0x383A4000, 0x383A8000, 0x383AC000, 0x383B0000, 0x383B4000, 0x383B8000, 0x383BC000,
  0x383C0000, 0x383C4000, 0x383C8000, 0x383CC000, 0x383D0000, 0x383D4000, 0x383D8000, 0x383DC000, 0x383E0000, 0x383E4000, 0x383E8000, 0x383EC000, 0x383F0000, 0x383F4000, 0x383F8000, 0x383FC000,
  0x38400000, 0x38404000, 0x38408000, 0x3840C000, 0x38410000, 0x38414000, 0x38418000, 0x3841C000, 0x38420000, 0x38424000, 0x38428000, 0x3842C000, 0x38430000, 0x38434000, 0x38438000, 0x3843C000,
  0x38440000, 0x38444000, 0x38448000, 0x3844C000, 0x38450000, 0x38454000, 0x38458000, 0x3845C000, 0x38460000, 0x38464000, 0x38468000, 0x3846C000, 0x38470000, 0x38474000, 0x38478000, 0x3847C000,
  0x38480000, 0x38484000, 0x38488000, 0x3848C000, 0x38490000, 0x38494000, 0x38498000, 0x3849C000, 0x384A0000, 0x384A4000, 0x384A8000, 0x384AC000, 0x384B0000, 0x384B4000, 0x384B8000, 0x384BC000,
  0x384C0000, 0x384C4000, 0x384C8000, 0x384CC000, 0x384D0000, 0x384D4000, 0x384D8000, 0x384DC000, 0x384E0000, 0x384E4000, 0x384E8000, 0x384EC000, 0x384F0000, 0x384F4000, 0x384F8000, 0x384FC000,
  0x38500000, 0x38504000, 0x38508000, 0x3850C000, 0x38510000, 0x38514000, 0x38518000, 0x3851C000, 0x38520000, 0x38524000, 0x38528000, 0x3852C000, 0x38530000, 0x38534000, 0x38538000, 0x3853C000,
  0x38540000, 0x38544000, 0x38548000, 0x3854C000, 0x38550000, 0x38554000, 0x38558000, 0x3855C000, 0x38560000, 0x38564000, 0x38568000, 0x3856C000, 0x38570000, 0x38574000, 0x38578000, 0x3857C000,
  0x38580000, 0x38584000, 0x38588000, 0x3858C000, 0x38590000, 0x38594000, 0x38598000, 0x3859C000, 0x385A0000, 0x385A4000, 0x385A8000, 0x385AC000, 0x385B0000, 0x385B4000, 0x385B8000, 0x385BC000,
  0x385C0000, 0x385C4000, 0x385C8000, 0x385CC000, 0x385D0000, 0x385D4000, 0x385D8000, 0x385DC000, 0x385E0000, 0x385E4000, 0x385E8000, 0x385EC000, 0x385F0000, 0x385F4000, 0x385F8000, 0x385FC000,
  0x38600000, 0x38604000, 0x38608000, 0x3860C000, 0x38610000, 0x38614000, 0x38618000, 0x3861C000, 0x38620000, 0x38624000, 0x38628000, 0x3862C000, 0x38630000, 0x38634000, 0x38638000, 0x3863C000,
  0x38640000, 0x38644000, 0x38648000, 0x3864C000, 0x38650000, 0x38654000, 0x38658000, 0x3865C000, 0x38660000, 0x38664000, 0x38668000, 0x3866C000, 0x38670000, 0x38674000, 0x38678000, 0x3867C000,
  0x38680000, 0x38684000, 0x38688000, 0x3868C000, 0x38690000, 0x38694000, 0x38698000, 0x3869C000, 0x386A0000, 0x386A4000, 0x386A8000, 0x386AC000, 0x386B0000, 0x386B4000, 0x386B8000, 0x386BC000,
  0x386C0000, 0x386C4000, 0x386C8000, 0x386CC000, 0x386D0000, 0x386D4000, 0x386D8000, 0x386DC000, 0x386E0000, 0x386E4000, 0x386E8000, 0x386EC000, 0x386F0000, 0x386F4000, 0x386F8000, 0x386FC000,
  0x38700000, 0x38704000, 0x38708000, 0x3870C000, 0x38710000, 0x38714000, 0x38718000, 0x3871C000, 0x38720000, 0x38724000, 0x38728000, 0x3872C000, 0x38730000, 0x38734000, 0x38738000, 0x3873C000,
  0x38740000, 0x38744000, 0x38748000, 0x3874C000, 0x38750000, 0x38754000, 0x38758000, 0x3875C000, 0x38760000, 0x38764000, 0x38768000, 0x3876C000, 0x38770000, 0x38774000, 0x38778000, 0x3877C000,
  0x38780000, 0x38784000, 0x38788000, 0x3878C000, 0x38790000, 0x38794000, 0x38798000, 0x3879C000, 0x387A0000, 0x387A4000, 0x387A8000, 0x387AC000, 0x387B0000, 0x387B4000, 0x387B8000, 0x387BC000,
  0x387C0000, 0x387C4000, 0x387C8000, 0x387CC000, 0x387D0000, 0x387D4000, 0x387D8000, 0x387DC000, 0x387E0000, 0x387E4000, 0x387E8000, 0x387EC000, 0x387F0000, 0x387F4000, 0x387F8000, 0x387FC000,
  0x38000000, 0x38002000, 0x38004000, 0x38006000, 0x38008000, 0x3800A000, 0x3800C000, 0x3800E000, 0x38010000, 0x38012000, 0x38014000, 0x38016000, 0x38018000, 0x3801A000, 0x3801C000, 0x3801E000,
  0x38020000, 0x38022000, 0x38024000, 0x38026000, 0x38028000, 0x3802A000, 0x3802C000, 0x3802E000, 0x38030000, 0x38032000, 0x38034000, 0x38036000, 0x38038000, 0x3803A000, 0x3803C000, 0x3803E000,
  0x38040000, 0x38042000, 0x38044000, 0x38046000, 0x38048000, 0x3804A000, 0x3804C000, 0x3804E000, 0x38050000, 0x38052000, 0x38054000, 0x38056000, 0x38058000, 0x3805A000, 0x3805C000, 0x3805E000,
  0x38060000, 0x38062000, 0x38064000, 0x38066000, 0x38068000, 0x3806A000, 0x3806C000, 0x3806E000, 0x38070000, 0x38072000, 0x38074000, 0x38076000, 0x38078000, 0x3807A000, 0x3807C000, 0x3807E000,
  0x38080000, 0x38082000, 0x38084000, 0x38086000, 0x38088000, 0x3808A000, 0x3808C000, 0x3808E000, 0x38090000, 0x38092000, 0x38094000, 0x38096000, 0x38098000, 0x3809A000, 0x3809C000, 0x3809E000,
  0x380A0000, 0x380A2000, 0x380A4000, 0x380A6000, 0x380A8000, 0x380AA000, 0x380AC000, 0x380AE000, 0x380B0000, 0x380B2000, 0x380B4000, 0x380B6000, 0x380B8000, 0x380BA000, 0x380BC000, 0x380BE000,
  0x380C0000, 0x380C2000, 0x380C4000, 0x380C6000, 0x380C8000, 0x380CA000, 0x380CC000, 0x380CE000, 0x380D0000, 0x380D2000, 0x380D4000, 0x380D6000, 0x380D8000, 0x380DA000, 0x380DC000, 0x380DE000,
  0x380E0000, 0x380E2000, 0x380E4000, 0x380E6000, 0x380E8000, 0x380EA000, 0x380EC000, 0x380EE000, 0x380F0000, 0x380F2000, 0x380F4000, 0x380F6000, 0x380F8000, 0x380FA000, 0x380FC000, 0x380FE000,
  0x38100000, 0x38102000, 0x38104000, 0x38106000, 0x38108000, 0x3810A000, 0x3810C000, 0x3810E000, 0x38110000, 0x38112000, 0x38114000, 0x38116000, 0x38118000, 0x3811A000, 0x3811C000, 0x3811E000,
  0x38120000, 0x38122000, 0x38124000, 0x38126000, 0x38128000, 0x3812A000, 0x3812C000, 0x3812E000, 0x38130000, 0x38132000, 0x38134000, 0x38136000, 0x38138000, 0x3813A000, 0x3813C000, 0x3813E000,
  0x38140000, 0x38142000, 0x38144000, 0x38146000, 0x38148000, 0x3814A000, 0x3814C000, 0x3814E000, 0x38150000, 0x38152000, 0x38154000, 0x38156000, 0x38158000, 0x3815A000, 0x3815C000, 0x3815E000,
  0x38160000, 0x38162000, 0x38164000, 0x38166000, 0x38168000, 0x3816A000, 0x3816C000, 0x3816E000, 0x38170000, 0x38172000, 0x38174000, 0x38176000, 0x38178000, 0x3817A000, 0x3817C000, 0x3817E000,
  0x38180000, 0x38182000, 0x38184000, 0x38186000, 0x38188000, 0x3818A000, 0x3818C000, 0x3818E000, 0x38190000, 0x38192000, 0x38194000, 0x38196000, 0x38198000, 0x3819A000, 0x3819C000, 0x3819E000,
  0x381A0000, 0x381A2000, 0x381A4000, 0x381A6000, 0x381A8000, 0x381AA000, 0x381AC000, 0x381AE000, 0x381B0000, 0x381B2000, 0x381B4000, 0x381B6000, 0x381B8000, 0x381BA000, 0x381BC000, 0x381BE000,
  0x381C0000, 0x381C2000, 0x381C4000, 0x381C6000, 0x381C8000, 0x381CA000, 0x381CC000, 0x381CE000, 0x381D0000, 0x381D2000, 0x381D4000, 0x381D6000, 0x381D8000, 0x381DA000, 0x381DC000, 0x381DE000,
  0x381E0000, 0x381E2000, 0x381E4000, 0x381E6000, 0x381E8000, 0x381EA000, 0x381EC000, 0x381EE000, 0x381F0000, 0x381F2000, 0x381F4000, 0x381F6000, 0x381F8000, 0x381FA000, 0x381FC000, 0x381FE000,
  0x38200000, 0x38202000, 0x38204000, 0x38206000, 0x38208000, 0x3820A000, 0x3820C000, 0x3820E000, 0x38210000, 0x38212000, 0x38214000, 0x38216000, 0x38218000, 0x3821A000, 0x3821C000, 0x3821E000,
  0x38220000, 0x38222000, 0x38224000, 0x38226000, 0x38228000, 0x3822A000, 0x3822C000, 0x3822E000, 0x38230000, 0x38232000, 0x38234000, 0x38236000, 0x38238000, 0x3823A000, 0x3823C000, 0x3823E000,
  0x38240000, 0x38242000, 0x38244000, 0x38246000, 0x38248000, 0x3824A000, 0x3824C000, 0x3824E000, 0x38250000, 0x38252000, 0x38254000, 0x38256000, 0x38258000, 0x3825A000, 0x3825C000, 0x3825E000,
  0x38260000, 0x38262000, 0x38264000, 0x38266000, 0x38268000, 0x3826A000, 0x3826C000, 0x3826E000, 0x38270000, 0x38272000, 0x38274000, 0x38276000, 0x38278000, 0x3827A000, 0x3827C000, 0x3827E000,
  0x38280000, 0x38282000, 0x38284000, 0x38286000, 0x38288000, 0x3828A000, 0x3828C000, 0x3828E000, 0x38290000, 0x38292000, 0x38294000, 0x38296000, 0x38298000, 0x3829A000, 0x3829C000, 0x3829E000,
  0x382A0000, 0x382A2000, 0x382A4000, 0x382A6000, 0x382A8000, 0x382AA000, 0x382AC000, 0x382AE000, 0x382B0000, 0x382B2000, 0x382B4000, 0x382B6000, 0x382B8000, 0x382BA000, 0x382BC000, 0x382BE000,
  0x382C0000, 0x382C2000, 0x382C4000, 0x382C6000, 0x382C8000, 0x382CA000, 0x382CC000, 0x382CE000, 0x382D0000, 0x382D2000, 0x382D4000, 0x382D6000, 0x382D8000, 0x382DA000, 0x382DC000, 0x382DE000,
  0x382E0000, 0x382E2000, 0x382E4000, 0x382E6000, 0x382E8000, 0x382EA000, 0x382EC000, 0x382EE000, 0x382F0000, 0x382F2000, 0x382F4000, 0x382F6000, 0x382F8000, 0x382FA000, 0x382FC000, 0x382FE000,
  0x38300000, 0x38302000, 0x38304000, 0x38306000, 0x38308000, 0x3830A000, 0x3830C000, 0x3830E000, 0x38310000, 0x38312000, 0x38314000, 0x38316000, 0x38318000, 0x3831A000, 0x3831C000, 0x3831E000,
  0x38320000, 0x38322000, 0x38324000, 0x38326000, 0x38328000, 0x3832A000, 0x3832C000, 0x3832E000, 0x38330000, 0x38332000, 0x38334000, 0x38336000, 0x38338000, 0x3833A000, 0x3833C000, 0x3833E000,
  0x38340000, 0x38342000, 0x38344000, 0x38346000, 0x38348000, 0x3834A000, 0x3834C000, 0x3834E000, 0x38350000, 0x38352000, 0x38354000, 0x38356000, 0x38358000, 0x3835A000, 0x3835C000, 0x3835E000,
  0x38360000, 0x38362000, 0x38364000, 0x38366000, 0x38368000, 0x3836A000, 0x3836C000, 0x3836E000, 0x38370000, 0x38372000, 0x38374000, 0x38376000, 0x38378000, 0x3837A000, 0x3837C000, 0x3837E000,
  0x38380000, 0x38382000, 0x38384000, 0x38386000, 0x38388000, 0x3838A000, 0x3838C000, 0x3838E000, 0x38390000, 0x38392000, 0x38394000, 0x38396000, 0x38398000, 0x3839A000, 0x3839C000, 0x3839E000,
  0x383A0000, 0x383A2000, 0x383A4000, 0x383A6000, 0x383A8000, 0x383AA000, 0x383AC000, 0x383AE000, 0x383B0000, 0x383B2000, 0x383B4000, 0x383B6000, 0x383B8000, 0x383BA000, 0x383BC000, 0x383BE000,
  0x383C0000, 0x383C2000, 0x383C4000, 0x383C6000, 0x383C8000, 0x383CA000, 0x383CC000, 0x383CE000, 0x383D0000, 0x383D2000, 0x383D4000, 0x383D6000, 0x383D8000, 0x383DA000, 0x383DC000, 0x383DE000,
  0x383E0000, 0x383E2000, 0x383E4000, 0x383E6000, 0x383E8000, 0x383EA000, 0x383EC000, 0x383EE000, 0x383F0000, 0x383F2000, 0x383F4000, 0x383F6000, 0x383F8000, 0x383FA000, 0x383FC000, 0x383FE000,
  0x38400000, 0x38402000, 0x38404000, 0x38406000, 0x38408000, 0x3840A000, 0x3840C000, 0x3840E000, 0x38410000, 0x38412000, 0x38414000, 0x38416000, 0x38418000, 0x3841A000, 0x3841C000, 0x3841E000,
  0x38420000, 0x38422000, 0x38424000, 0x38426000, 0x38428000, 0x3842A000, 0x3842C000, 0x3842E000, 0x38430000, 0x38432000, 0x38434000, 0x38436000, 0x38438000, 0x3843A000, 0x3843C000, 0x3843E000,
  0x38440000, 0x38442000, 0x38444000, 0x38446000, 0x38448000, 0x3844A000, 0x3844C000, 0x3844E000, 0x38450000, 0x38452000, 0x38454000, 0x38456000, 0x38458000, 0x3845A000, 0x3845C000, 0x3845E000,
  0x38460000, 0x38462000, 0x38464000, 0x38466000, 0x38468000, 0x3846A000, 0x3846C000, 0x3846E000, 0x38470000, 0x38472000, 0x38474000, 0x38476000, 0x38478000, 0x3847A000, 0x3847C000, 0x3847E000,
  0x38480000, 0x38482000, 0x38484000, 0x38486000, 0x38488000, 0x3848A000, 0x3848C000, 0x3848E000, 0x38490000, 0x38492000, 0x38494000, 0x38496000, 0x38498000, 0x3849A000, 0x3849C000, 0x3849E000,
  0x384A0000, 0x384A2000, 0x384A4000, 0x384A6000, 0x384A8000, 0x384AA000, 0x384AC000, 0x384AE000, 0x384B0000, 0x384B2000, 0x384B4000, 0x384B6000, 0x384B8000, 0x384BA000, 0x384BC000, 0x384BE000,
  0x384C0000, 0x384C2000, 0x384C4000, 0x384C6000, 0x384C8000, 0x384CA000, 0x384CC000, 0x384CE000, 0x384D0000, 0x384D2000, 0x384D4000, 0x384D6000, 0x384D8000, 0x384DA000, 0x384DC000, 0x384DE000,
  0x384E0000, 0x384E2000, 0x384E4000, 0x384E6000, 0x384E8000, 0x384EA000, 0x384EC000, 0x384EE000, 0x384F0000, 0x384F2000, 0x384F4000, 0x384F6000, 0x384F8000, 0x384FA000, 0x384FC000, 0x384FE000,
  0x38500000, 0x38502000, 0x38504000, 0x38506000, 0x38508000, 0x3850A000, 0x3850C000, 0x3850E000, 0x38510000, 0x38512000, 0x38514000, 0x38516000, 0x38518000, 0x3851A000, 0x3851C000, 0x3851E000,
  0x38520000, 0x38522000, 0x38524000, 0x38526000, 0x38528000, 0x3852A000, 0x3852C000, 0x3852E000, 0x38530000, 0x38532000, 0x38534000, 0x38536000, 0x38538000, 0x3853A000, 0x3853C000, 0x3853E000,
  0x38540000, 0x38542000, 0x38544000, 0x38546000, 0x38548000, 0x3854A000, 0x3854C000, 0x3854E000, 0x38550000, 0x38552000, 0x38554000, 0x38556000, 0x38558000, 0x3855A000, 0x3855C000, 0x3855E000,
  0x38560000, 0x38562000, 0x38564000, 0x38566000, 0x38568000, 0x3856A000, 0x3856C000, 0x3856E000, 0x38570000, 0x38572000, 0x38574000, 0x38576000, 0x38578000, 0x3857A000, 0x3857C000, 0x3857E000,
  0x38580000, 0x38582000, 0x38584000, 0x38586000, 0x38588000, 0x3858A000, 0x3858C000, 0x3858E000, 0x38590000, 0x38592000, 0x38594000, 0x38596000, 0x38598000, 0x3859A000, 0x3859C000, 0x3859E000,
  0x385A0000, 0x385A2000, 0x385A4000, 0x385A6000, 0x385A8000, 0x385AA000, 0x385AC000, 0x385AE000, 0x385B0000, 0x385B2000, 0x385B4000, 0x385B6000, 0x385B8000, 0x385BA000, 0x385BC000, 0x385BE000,
  0x385C0000, 0x385C2000, 0x385C4000, 0x385C6000, 0x385C8000, 0x385CA000, 0x385CC000, 0x385CE000, 0x385D0000, 0x385D2000, 0x385D4000, 0x385D6000, 0x385D8000, 0x385DA000, 0x385DC000, 0x385DE000,
  0x385E0000, 0x385E2000, 0x385E4000, 0x385E6000, 0x385E8000, 0x385EA000, 0x385EC000, 0x385EE000, 0x385F0000, 0x385F2000, 0x385F4000, 0x385F6000, 0x385F8000, 0x385FA000, 0x385FC000, 0x385FE000,
  0x38600000, 0x38602000, 0x38604000, 0x38606000, 0x38608000, 0x3860A000, 0x3860C000, 0x3860E000, 0x38610000, 0x38612000, 0x38614000, 0x38616000, 0x38618000, 0x3861A000, 0x3861C000, 0x3861E000,
  0x38620000, 0x38622000, 0x38624000, 0x38626000, 0x38628000, 0x3862A000, 0x3862C000, 0x3862E000, 0x38630000, 0x38632000, 0x38634000, 0x38636000, 0x38638000, 0x3863A000, 0x3863C000, 0x3863E000,
  0x38640000, 0x38642000, 0x38644000, 0x38646000, 0x38648000, 0x3864A000, 0x3864C000, 0x3864E000, 0x38650000, 0x38652000, 0x38654000, 0x38656000, 0x38658000, 0x3865A000, 0x3865C000, 0x3865E000,
  0x38660000, 0x38662000, 0x38664000, 0x38666000, 0x38668000, 0x3866A000, 0x3866C000, 0x3866E000, 0x38670000, 0x38672000, 0x38674000, 0x38676000, 0x38678000, 0x3867A000, 0x3867C000, 0x3867E000,
  0x38680000, 0x38682000, 0x38684000, 0x38686000, 0x38688000, 0x3868A000, 0x3868C000, 0x3868E000, 0x38690000, 0x38692000, 0x38694000, 0x38696000, 0x38698000, 0x3869A000, 0x3869C000, 0x3869E000,
  0x386A0000, 0x386A2000, 0x386A4000, 0x386A6000, 0x386A8000, 0x386AA000, 0x386AC000, 0x386AE000, 0x386B0000, 0x386B2000, 0x386B4000, 0x386B6000, 0x386B8000, 0x386BA000, 0x386BC000, 0x386BE000,
  0x386C0000, 0x386C2000, 0x386C4000, 0x386C6000, 0x386C8000, 0x386CA000, 0x386CC000, 0x386CE000, 0x386D0000, 0x386D2000, 0x386D4000, 0x386D6000, 0x386D8000, 0x386DA000, 0x386DC000, 0x386DE000,
  0x386E0000, 0x386E2000, 0x386E4000, 0x386E6000, 0x386E8000, 0x386EA000, 0x386EC000, 0x386EE000, 0x386F0000, 0x386F2000, 0x386F4000, 0x386F6000, 0x386F8000, 0x386FA000, 0x386FC000, 0x386FE000,
  0x38700000, 0x38702000, 0x38704000, 0x38706000, 0x38708000, 0x3870A000, 0x3870C000, 0x3870E000, 0x38710000, 0x38712000, 0x38714000, 0x38716000, 0x38718000, 0x3871A000, 0x3871C000, 0x3871E000,
  0x38720000, 0x38722000, 0x38724000, 0x38726000, 0x38728000, 0x3872A000, 0x3872C000, 0x3872E000, 0x38730000, 0x38732000, 0x38734000, 0x38736000, 0x38738000, 0x3873A000, 0x3873C000, 0x3873E000,
  0x38740000, 0x38742000, 0x38744000, 0x38746000, 0x38748000, 0x3874A000, 0x3874C000, 0x3874E000, 0x38750000, 0x38752000, 0x38754000, 0x38756000, 0x38758000, 0x3875A000, 0x3875C000, 0x3875E000,
  0x38760000, 0x38762000, 0x38764000, 0x38766000, 0x38768000, 0x3876A000, 0x3876C000, 0x3876E000, 0x38770000, 0x38772000, 0x38774000, 0x38776000, 0x38778000, 0x3877A000, 0x3877C000, 0x3877E000,
  0x38780000, 0x38782000, 0x38784000, 0x38786000, 0x38788000, 0x3878A000, 0x3878C000, 0x3878E000, 0x38790000, 0x38792000, 0x38794000, 0x38796000, 0x38798000, 0x3879A000, 0x3879C000, 0x3879E000,
  0x387A0000, 0x387A2000, 0x387A4000, 0x387A6000, 0x387A8000, 0x387AA000, 0x387AC000, 0x387AE000, 0x387B0000, 0x387B2000, 0x387B4000, 0x387B6000, 0x387B8000, 0x387BA000, 0x387BC000, 0x387BE000,
  0x387C0000, 0x387C2000, 0x387C4000, 0x387C6000, 0x387C8000, 0x387CA000, 0x387CC000, 0x387CE000, 0x387D0000, 0x387D2000, 0x387D4000, 0x387D6000, 0x387D8000, 0x387DA000, 0x387DC000, 0x387DE000,
  0x387E0000, 0x387E2000, 0x387E4000, 0x387E6000, 0x387E8000, 0x387EA000, 0x387EC000, 0x387EE000, 0x387F0000, 0x387F2000, 0x387F4000, 0x387F6000, 0x387F8000, 0x387FA000, 0x387FC000, 0x387FE000 };
__constant static const uint32_t exponent_table[64] = {
  0x00000000, 0x00800000, 0x01000000, 0x01800000, 0x02000000, 0x02800000, 0x03000000, 0x03800000, 0x04000000, 0x04800000, 0x05000000, 0x05800000, 0x06000000, 0x06800000, 0x07000000, 0x07800000,
  0x08000000, 0x08800000, 0x09000000, 0x09800000, 0x0A000000, 0x0A800000, 0x0B000000, 0x0B800000, 0x0C000000, 0x0C800000, 0x0D000000, 0x0D800000, 0x0E000000, 0x0E800000, 0x0F000000, 0x47800000,
  0x80000000, 0x80800000, 0x81000000, 0x81800000, 0x82000000, 0x82800000, 0x83000000, 0x83800000, 0x84000000, 0x84800000, 0x85000000, 0x85800000, 0x86000000, 0x86800000, 0x87000000, 0x87800000,
  0x88000000, 0x88800000, 0x89000000, 0x89800000, 0x8A000000, 0x8A800000, 0x8B000000, 0x8B800000, 0x8C000000, 0x8C800000, 0x8D000000, 0x8D800000, 0x8E000000, 0x8E800000, 0x8F000000, 0xC7800000 };
__constant static const unsigned short offset_table[64] = {
  0, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
  0, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024 };

static uint16_t float2halfbits(float value) {
  union { float x; uint32_t y; } u;
  u.x = value;
  uint32_t bits = u.y;

  uint16_t hbits = base_table[bits>>23] + (uint16_t)((bits&0x7FFFFF)>>shift_table[bits>>23]);;

  return hbits;
}

static float halfbits2float(uint16_t value) {
  uint32_t bits = mantissa_table[offset_table[value>>10]+(value&0x3FF)] + exponent_table[value>>10];

  union { uint32_t x; float y; } u;
  u.x = bits;
  return u.y;
}

// End of half.h.
// Start of scalar.h.

// Implementation of the primitive scalar operations.  Very
// repetitive.  This code is inserted directly into both CUDA and
// OpenCL programs, as well as the CPU code, so it has some #ifdefs to
// work everywhere.  Some operations are defined as macros because
// this allows us to use them as constant expressions in things like
// array sizes and static initialisers.

// Some of the #ifdefs are because OpenCL uses type-generic functions
// for some operations (e.g. sqrt), while C and CUDA sensibly use
// distinct functions for different precisions (e.g. sqrtf() and
// sqrt()).  This is quite annoying.  Due to C's unfortunate casting
// rules, it is also really easy to accidentally implement
// floating-point functions in the wrong precision, so be careful.

// Double-precision definitions are only included if the preprocessor
// macro FUTHARK_F64_ENABLED is set.

static inline uint8_t add8(uint8_t x, uint8_t y) {
  return x + y;
}

static inline uint16_t add16(uint16_t x, uint16_t y) {
  return x + y;
}

static inline uint32_t add32(uint32_t x, uint32_t y) {
  return x + y;
}

static inline uint64_t add64(uint64_t x, uint64_t y) {
  return x + y;
}

static inline uint8_t sub8(uint8_t x, uint8_t y) {
  return x - y;
}

static inline uint16_t sub16(uint16_t x, uint16_t y) {
  return x - y;
}

static inline uint32_t sub32(uint32_t x, uint32_t y) {
  return x - y;
}

static inline uint64_t sub64(uint64_t x, uint64_t y) {
  return x - y;
}

static inline uint8_t mul8(uint8_t x, uint8_t y) {
  return x * y;
}

static inline uint16_t mul16(uint16_t x, uint16_t y) {
  return x * y;
}

static inline uint32_t mul32(uint32_t x, uint32_t y) {
  return x * y;
}

static inline uint64_t mul64(uint64_t x, uint64_t y) {
  return x * y;
}

static inline uint8_t udiv8(uint8_t x, uint8_t y) {
  return x / y;
}

static inline uint16_t udiv16(uint16_t x, uint16_t y) {
  return x / y;
}

static inline uint32_t udiv32(uint32_t x, uint32_t y) {
  return x / y;
}

static inline uint64_t udiv64(uint64_t x, uint64_t y) {
  return x / y;
}

static inline uint8_t udiv_up8(uint8_t x, uint8_t y) {
  return (x + y - 1) / y;
}

static inline uint16_t udiv_up16(uint16_t x, uint16_t y) {
  return (x + y - 1) / y;
}

static inline uint32_t udiv_up32(uint32_t x, uint32_t y) {
  return (x + y - 1) / y;
}

static inline uint64_t udiv_up64(uint64_t x, uint64_t y) {
  return (x + y - 1) / y;
}

static inline uint8_t umod8(uint8_t x, uint8_t y) {
  return x % y;
}

static inline uint16_t umod16(uint16_t x, uint16_t y) {
  return x % y;
}

static inline uint32_t umod32(uint32_t x, uint32_t y) {
  return x % y;
}

static inline uint64_t umod64(uint64_t x, uint64_t y) {
  return x % y;
}

static inline uint8_t udiv_safe8(uint8_t x, uint8_t y) {
  return y == 0 ? 0 : x / y;
}

static inline uint16_t udiv_safe16(uint16_t x, uint16_t y) {
  return y == 0 ? 0 : x / y;
}

static inline uint32_t udiv_safe32(uint32_t x, uint32_t y) {
  return y == 0 ? 0 : x / y;
}

static inline uint64_t udiv_safe64(uint64_t x, uint64_t y) {
  return y == 0 ? 0 : x / y;
}

static inline uint8_t udiv_up_safe8(uint8_t x, uint8_t y) {
  return y == 0 ? 0 : (x + y - 1) / y;
}

static inline uint16_t udiv_up_safe16(uint16_t x, uint16_t y) {
  return y == 0 ? 0 : (x + y - 1) / y;
}

static inline uint32_t udiv_up_safe32(uint32_t x, uint32_t y) {
  return y == 0 ? 0 : (x + y - 1) / y;
}

static inline uint64_t udiv_up_safe64(uint64_t x, uint64_t y) {
  return y == 0 ? 0 : (x + y - 1) / y;
}

static inline uint8_t umod_safe8(uint8_t x, uint8_t y) {
  return y == 0 ? 0 : x % y;
}

static inline uint16_t umod_safe16(uint16_t x, uint16_t y) {
  return y == 0 ? 0 : x % y;
}

static inline uint32_t umod_safe32(uint32_t x, uint32_t y) {
  return y == 0 ? 0 : x % y;
}

static inline uint64_t umod_safe64(uint64_t x, uint64_t y) {
  return y == 0 ? 0 : x % y;
}

static inline int8_t sdiv8(int8_t x, int8_t y) {
  int8_t q = x / y;
  int8_t r = x % y;

  return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}

static inline int16_t sdiv16(int16_t x, int16_t y) {
  int16_t q = x / y;
  int16_t r = x % y;

  return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}

static inline int32_t sdiv32(int32_t x, int32_t y) {
  int32_t q = x / y;
  int32_t r = x % y;

  return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}

static inline int64_t sdiv64(int64_t x, int64_t y) {
  int64_t q = x / y;
  int64_t r = x % y;

  return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}

static inline int8_t sdiv_up8(int8_t x, int8_t y) {
  return sdiv8(x + y - 1, y);
}

static inline int16_t sdiv_up16(int16_t x, int16_t y) {
  return sdiv16(x + y - 1, y);
}

static inline int32_t sdiv_up32(int32_t x, int32_t y) {
  return sdiv32(x + y - 1, y);
}

static inline int64_t sdiv_up64(int64_t x, int64_t y) {
  return sdiv64(x + y - 1, y);
}

static inline int8_t smod8(int8_t x, int8_t y) {
  int8_t r = x % y;

  return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}

static inline int16_t smod16(int16_t x, int16_t y) {
  int16_t r = x % y;

  return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}

static inline int32_t smod32(int32_t x, int32_t y) {
  int32_t r = x % y;

  return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}

static inline int64_t smod64(int64_t x, int64_t y) {
  int64_t r = x % y;

  return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}

static inline int8_t sdiv_safe8(int8_t x, int8_t y) {
  return y == 0 ? 0 : sdiv8(x, y);
}

static inline int16_t sdiv_safe16(int16_t x, int16_t y) {
  return y == 0 ? 0 : sdiv16(x, y);
}

static inline int32_t sdiv_safe32(int32_t x, int32_t y) {
  return y == 0 ? 0 : sdiv32(x, y);
}

static inline int64_t sdiv_safe64(int64_t x, int64_t y) {
  return y == 0 ? 0 : sdiv64(x, y);
}

static inline int8_t sdiv_up_safe8(int8_t x, int8_t y) {
  return sdiv_safe8(x + y - 1, y);
}

static inline int16_t sdiv_up_safe16(int16_t x, int16_t y) {
  return sdiv_safe16(x + y - 1, y);
}

static inline int32_t sdiv_up_safe32(int32_t x, int32_t y) {
  return sdiv_safe32(x + y - 1, y);
}

static inline int64_t sdiv_up_safe64(int64_t x, int64_t y) {
  return sdiv_safe64(x + y - 1, y);
}

static inline int8_t smod_safe8(int8_t x, int8_t y) {
  return y == 0 ? 0 : smod8(x, y);
}

static inline int16_t smod_safe16(int16_t x, int16_t y) {
  return y == 0 ? 0 : smod16(x, y);
}

static inline int32_t smod_safe32(int32_t x, int32_t y) {
  return y == 0 ? 0 : smod32(x, y);
}

static inline int64_t smod_safe64(int64_t x, int64_t y) {
  return y == 0 ? 0 : smod64(x, y);
}

static inline int8_t squot8(int8_t x, int8_t y) {
  return x / y;
}

static inline int16_t squot16(int16_t x, int16_t y) {
  return x / y;
}

static inline int32_t squot32(int32_t x, int32_t y) {
  return x / y;
}

static inline int64_t squot64(int64_t x, int64_t y) {
  return x / y;
}

static inline int8_t srem8(int8_t x, int8_t y) {
  return x % y;
}

static inline int16_t srem16(int16_t x, int16_t y) {
  return x % y;
}

static inline int32_t srem32(int32_t x, int32_t y) {
  return x % y;
}

static inline int64_t srem64(int64_t x, int64_t y) {
  return x % y;
}

static inline int8_t squot_safe8(int8_t x, int8_t y) {
  return y == 0 ? 0 : x / y;
}

static inline int16_t squot_safe16(int16_t x, int16_t y) {
  return y == 0 ? 0 : x / y;
}

static inline int32_t squot_safe32(int32_t x, int32_t y) {
  return y == 0 ? 0 : x / y;
}

static inline int64_t squot_safe64(int64_t x, int64_t y) {
  return y == 0 ? 0 : x / y;
}

static inline int8_t srem_safe8(int8_t x, int8_t y) {
  return y == 0 ? 0 : x % y;
}

static inline int16_t srem_safe16(int16_t x, int16_t y) {
  return y == 0 ? 0 : x % y;
}

static inline int32_t srem_safe32(int32_t x, int32_t y) {
  return y == 0 ? 0 : x % y;
}

static inline int64_t srem_safe64(int64_t x, int64_t y) {
  return y == 0 ? 0 : x % y;
}

static inline int8_t smin8(int8_t x, int8_t y) {
  return x < y ? x : y;
}

static inline int16_t smin16(int16_t x, int16_t y) {
  return x < y ? x : y;
}

static inline int32_t smin32(int32_t x, int32_t y) {
  return x < y ? x : y;
}

static inline int64_t smin64(int64_t x, int64_t y) {
  return x < y ? x : y;
}

static inline uint8_t umin8(uint8_t x, uint8_t y) {
  return x < y ? x : y;
}

static inline uint16_t umin16(uint16_t x, uint16_t y) {
  return x < y ? x : y;
}

static inline uint32_t umin32(uint32_t x, uint32_t y) {
  return x < y ? x : y;
}

static inline uint64_t umin64(uint64_t x, uint64_t y) {
  return x < y ? x : y;
}

static inline int8_t smax8(int8_t x, int8_t y) {
  return x < y ? y : x;
}

static inline int16_t smax16(int16_t x, int16_t y) {
  return x < y ? y : x;
}

static inline int32_t smax32(int32_t x, int32_t y) {
  return x < y ? y : x;
}

static inline int64_t smax64(int64_t x, int64_t y) {
  return x < y ? y : x;
}

static inline uint8_t umax8(uint8_t x, uint8_t y) {
  return x < y ? y : x;
}

static inline uint16_t umax16(uint16_t x, uint16_t y) {
  return x < y ? y : x;
}

static inline uint32_t umax32(uint32_t x, uint32_t y) {
  return x < y ? y : x;
}

static inline uint64_t umax64(uint64_t x, uint64_t y) {
  return x < y ? y : x;
}

static inline uint8_t shl8(uint8_t x, uint8_t y) {
  return (uint8_t)(x << y);
}

static inline uint16_t shl16(uint16_t x, uint16_t y) {
  return (uint16_t)(x << y);
}

static inline uint32_t shl32(uint32_t x, uint32_t y) {
  return x << y;
}

static inline uint64_t shl64(uint64_t x, uint64_t y) {
  return x << y;
}

static inline uint8_t lshr8(uint8_t x, uint8_t y) {
  return x >> y;
}

static inline uint16_t lshr16(uint16_t x, uint16_t y) {
  return x >> y;
}

static inline uint32_t lshr32(uint32_t x, uint32_t y) {
  return x >> y;
}

static inline uint64_t lshr64(uint64_t x, uint64_t y) {
  return x >> y;
}

static inline int8_t ashr8(int8_t x, int8_t y) {
  return x >> y;
}

static inline int16_t ashr16(int16_t x, int16_t y) {
  return x >> y;
}

static inline int32_t ashr32(int32_t x, int32_t y) {
  return x >> y;
}

static inline int64_t ashr64(int64_t x, int64_t y) {
  return x >> y;
}

static inline uint8_t and8(uint8_t x, uint8_t y) {
  return x & y;
}

static inline uint16_t and16(uint16_t x, uint16_t y) {
  return x & y;
}

static inline uint32_t and32(uint32_t x, uint32_t y) {
  return x & y;
}

static inline uint64_t and64(uint64_t x, uint64_t y) {
  return x & y;
}

static inline uint8_t or8(uint8_t x, uint8_t y) {
  return x | y;
}

static inline uint16_t or16(uint16_t x, uint16_t y) {
  return x | y;
}

static inline uint32_t or32(uint32_t x, uint32_t y) {
  return x | y;
}

static inline uint64_t or64(uint64_t x, uint64_t y) {
  return x | y;
}

static inline uint8_t xor8(uint8_t x, uint8_t y) {
  return x ^ y;
}

static inline uint16_t xor16(uint16_t x, uint16_t y) {
  return x ^ y;
}

static inline uint32_t xor32(uint32_t x, uint32_t y) {
  return x ^ y;
}

static inline uint64_t xor64(uint64_t x, uint64_t y) {
  return x ^ y;
}

static inline bool ult8(uint8_t x, uint8_t y) {
  return x < y;
}

static inline bool ult16(uint16_t x, uint16_t y) {
  return x < y;
}

static inline bool ult32(uint32_t x, uint32_t y) {
  return x < y;
}

static inline bool ult64(uint64_t x, uint64_t y) {
  return x < y;
}

static inline bool ule8(uint8_t x, uint8_t y) {
  return x <= y;
}

static inline bool ule16(uint16_t x, uint16_t y) {
  return x <= y;
}

static inline bool ule32(uint32_t x, uint32_t y) {
  return x <= y;
}

static inline bool ule64(uint64_t x, uint64_t y) {
  return x <= y;
}

static inline bool slt8(int8_t x, int8_t y) {
  return x < y;
}

static inline bool slt16(int16_t x, int16_t y) {
  return x < y;
}

static inline bool slt32(int32_t x, int32_t y) {
  return x < y;
}

static inline bool slt64(int64_t x, int64_t y) {
  return x < y;
}

static inline bool sle8(int8_t x, int8_t y) {
  return x <= y;
}

static inline bool sle16(int16_t x, int16_t y) {
  return x <= y;
}

static inline bool sle32(int32_t x, int32_t y) {
  return x <= y;
}

static inline bool sle64(int64_t x, int64_t y) {
  return x <= y;
}

static inline uint8_t pow8(uint8_t x, uint8_t y) {
  uint8_t res = 1, rem = y;

  while (rem != 0) {
    if (rem & 1)
      res *= x;
    rem >>= 1;
    x *= x;
  }
  return res;
}

static inline uint16_t pow16(uint16_t x, uint16_t y) {
  uint16_t res = 1, rem = y;

  while (rem != 0) {
    if (rem & 1)
      res *= x;
    rem >>= 1;
    x *= x;
  }
  return res;
}

static inline uint32_t pow32(uint32_t x, uint32_t y) {
  uint32_t res = 1, rem = y;

  while (rem != 0) {
    if (rem & 1)
      res *= x;
    rem >>= 1;
    x *= x;
  }
  return res;
}

static inline uint64_t pow64(uint64_t x, uint64_t y) {
  uint64_t res = 1, rem = y;

  while (rem != 0) {
    if (rem & 1)
      res *= x;
    rem >>= 1;
    x *= x;
  }
  return res;
}

static inline bool itob_i8_bool(int8_t x) {
  return x;
}

static inline bool itob_i16_bool(int16_t x) {
  return x;
}

static inline bool itob_i32_bool(int32_t x) {
  return x;
}

static inline bool itob_i64_bool(int64_t x) {
  return x;
}

static inline int8_t btoi_bool_i8(bool x) {
  return x;
}

static inline int16_t btoi_bool_i16(bool x) {
  return x;
}

static inline int32_t btoi_bool_i32(bool x) {
  return x;
}

static inline int64_t btoi_bool_i64(bool x) {
  return x;
}

#define sext_i8_i8(x) ((int8_t) (int8_t) (x))
#define sext_i8_i16(x) ((int16_t) (int8_t) (x))
#define sext_i8_i32(x) ((int32_t) (int8_t) (x))
#define sext_i8_i64(x) ((int64_t) (int8_t) (x))
#define sext_i16_i8(x) ((int8_t) (int16_t) (x))
#define sext_i16_i16(x) ((int16_t) (int16_t) (x))
#define sext_i16_i32(x) ((int32_t) (int16_t) (x))
#define sext_i16_i64(x) ((int64_t) (int16_t) (x))
#define sext_i32_i8(x) ((int8_t) (int32_t) (x))
#define sext_i32_i16(x) ((int16_t) (int32_t) (x))
#define sext_i32_i32(x) ((int32_t) (int32_t) (x))
#define sext_i32_i64(x) ((int64_t) (int32_t) (x))
#define sext_i64_i8(x) ((int8_t) (int64_t) (x))
#define sext_i64_i16(x) ((int16_t) (int64_t) (x))
#define sext_i64_i32(x) ((int32_t) (int64_t) (x))
#define sext_i64_i64(x) ((int64_t) (int64_t) (x))
#define zext_i8_i8(x) ((int8_t) (uint8_t) (x))
#define zext_i8_i16(x) ((int16_t) (uint8_t) (x))
#define zext_i8_i32(x) ((int32_t) (uint8_t) (x))
#define zext_i8_i64(x) ((int64_t) (uint8_t) (x))
#define zext_i16_i8(x) ((int8_t) (uint16_t) (x))
#define zext_i16_i16(x) ((int16_t) (uint16_t) (x))
#define zext_i16_i32(x) ((int32_t) (uint16_t) (x))
#define zext_i16_i64(x) ((int64_t) (uint16_t) (x))
#define zext_i32_i8(x) ((int8_t) (uint32_t) (x))
#define zext_i32_i16(x) ((int16_t) (uint32_t) (x))
#define zext_i32_i32(x) ((int32_t) (uint32_t) (x))
#define zext_i32_i64(x) ((int64_t) (uint32_t) (x))
#define zext_i64_i8(x) ((int8_t) (uint64_t) (x))
#define zext_i64_i16(x) ((int16_t) (uint64_t) (x))
#define zext_i64_i32(x) ((int32_t) (uint64_t) (x))
#define zext_i64_i64(x) ((int64_t) (uint64_t) (x))

static int8_t abs8(int8_t x) {
  return (int8_t)abs(x);
}

static int16_t abs16(int16_t x) {
  return (int16_t)abs(x);
}

static int32_t abs32(int32_t x) {
  return abs(x);
}

static int64_t abs64(int64_t x) {
#if defined(__OPENCL_VERSION__)
  return abs(x);
#else
  return llabs(x);
#endif
}

#if defined(__OPENCL_VERSION__)
static int32_t futrts_popc8(int8_t x) {
  return popcount(x);
}

static int32_t futrts_popc16(int16_t x) {
  return popcount(x);
}

static int32_t futrts_popc32(int32_t x) {
  return popcount(x);
}

static int32_t futrts_popc64(int64_t x) {
  return popcount(x);
}
#elif defined(__CUDA_ARCH__)

static int32_t futrts_popc8(int8_t x) {
  return __popc(zext_i8_i32(x));
}

static int32_t futrts_popc16(int16_t x) {
  return __popc(zext_i16_i32(x));
}

static int32_t futrts_popc32(int32_t x) {
  return __popc(x);
}

static int32_t futrts_popc64(int64_t x) {
  return __popcll(x);
}

#else // Not OpenCL or CUDA, but plain C.

static int32_t futrts_popc8(uint8_t x) {
  int c = 0;
  for (; x; ++c) { x &= x - 1; }
  return c;
}

static int32_t futrts_popc16(uint16_t x) {
  int c = 0;
  for (; x; ++c) { x &= x - 1; }
  return c;
}

static int32_t futrts_popc32(uint32_t x) {
  int c = 0;
  for (; x; ++c) { x &= x - 1; }
  return c;
}

static int32_t futrts_popc64(uint64_t x) {
  int c = 0;
  for (; x; ++c) { x &= x - 1; }
  return c;
}
#endif

#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b) {
  return mul_hi(a, b);
}

static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b) {
  return mul_hi(a, b);
}

static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b) {
  return mul_hi(a, b);
}

static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b) {
  return mul_hi(a, b);
}

#elif defined(__CUDA_ARCH__)

static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b) {
  uint16_t aa = a;
  uint16_t bb = b;

  return aa * bb >> 8;
}

static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b) {
  uint32_t aa = a;
  uint32_t bb = b;

  return aa * bb >> 16;
}

static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b) {
  return mulhi(a, b);
}

static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b) {
  return mul64hi(a, b);
}

#else // Not OpenCL or CUDA, but plain C.

static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b) {
  uint16_t aa = a;
  uint16_t bb = b;

  return aa * bb >> 8;
}

static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b) {
  uint32_t aa = a;
  uint32_t bb = b;

  return aa * bb >> 16;
}

static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b) {
  uint64_t aa = a;
  uint64_t bb = b;

  return aa * bb >> 32;
}

static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b) {
  __uint128_t aa = a;
  __uint128_t bb = b;

  return aa * bb >> 64;
}
#endif

#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c) {
  return mad_hi(a, b, c);
}

static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c) {
  return mad_hi(a, b, c);
}

static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c) {
  return mad_hi(a, b, c);
}

static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c) {
  return mad_hi(a, b, c);
}

#else // Not OpenCL

static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c) {
  return futrts_mul_hi8(a, b) + c;
}

static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c) {
  return futrts_mul_hi16(a, b) + c;
}

static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c) {
  return futrts_mul_hi32(a, b) + c;
}

static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c) {
  return futrts_mul_hi64(a, b) + c;
}
#endif

#if defined(__OPENCL_VERSION__)
static int32_t futrts_clzz8(int8_t x) {
  return clz(x);
}

static int32_t futrts_clzz16(int16_t x) {
  return clz(x);
}

static int32_t futrts_clzz32(int32_t x) {
  return clz(x);
}

static int32_t futrts_clzz64(int64_t x) {
  return clz(x);
}

#elif defined(__CUDA_ARCH__)

static int32_t futrts_clzz8(int8_t x) {
  return __clz(zext_i8_i32(x)) - 24;
}

static int32_t futrts_clzz16(int16_t x) {
  return __clz(zext_i16_i32(x)) - 16;
}

static int32_t futrts_clzz32(int32_t x) {
  return __clz(x);
}

static int32_t futrts_clzz64(int64_t x) {
  return __clzll(x);
}

#else // Not OpenCL or CUDA, but plain C.

static int32_t futrts_clzz8(int8_t x) {
  return x == 0 ? 8 : __builtin_clz((uint32_t)zext_i8_i32(x)) - 24;
}

static int32_t futrts_clzz16(int16_t x) {
  return x == 0 ? 16 : __builtin_clz((uint32_t)zext_i16_i32(x)) - 16;
}

static int32_t futrts_clzz32(int32_t x) {
  return x == 0 ? 32 : __builtin_clz((uint32_t)x);
}

static int32_t futrts_clzz64(int64_t x) {
  return x == 0 ? 64 : __builtin_clzll((uint64_t)x);
}
#endif

#if defined(__OPENCL_VERSION__)
static int32_t futrts_ctzz8(int8_t x) {
  int i = 0;
  for (; i < 8 && (x & 1) == 0; i++, x >>= 1)
    ;
  return i;
}

static int32_t futrts_ctzz16(int16_t x) {
  int i = 0;
  for (; i < 16 && (x & 1) == 0; i++, x >>= 1)
    ;
  return i;
}

static int32_t futrts_ctzz32(int32_t x) {
  int i = 0;
  for (; i < 32 && (x & 1) == 0; i++, x >>= 1)
    ;
  return i;
}

static int32_t futrts_ctzz64(int64_t x) {
  int i = 0;
  for (; i < 64 && (x & 1) == 0; i++, x >>= 1)
    ;
  return i;
}

#elif defined(__CUDA_ARCH__)

static int32_t futrts_ctzz8(int8_t x) {
  int y = __ffs(x);
  return y == 0 ? 8 : y - 1;
}

static int32_t futrts_ctzz16(int16_t x) {
  int y = __ffs(x);
  return y == 0 ? 16 : y - 1;
}

static int32_t futrts_ctzz32(int32_t x) {
  int y = __ffs(x);
  return y == 0 ? 32 : y - 1;
}

static int32_t futrts_ctzz64(int64_t x) {
  int y = __ffsll(x);
  return y == 0 ? 64 : y - 1;
}

#else // Not OpenCL or CUDA, but plain C.

static int32_t futrts_ctzz8(int8_t x) {
  return x == 0 ? 8 : __builtin_ctz((uint32_t)x);
}

static int32_t futrts_ctzz16(int16_t x) {
  return x == 0 ? 16 : __builtin_ctz((uint32_t)x);
}

static int32_t futrts_ctzz32(int32_t x) {
  return x == 0 ? 32 : __builtin_ctz((uint32_t)x);
}

static int32_t futrts_ctzz64(int64_t x) {
  return x == 0 ? 64 : __builtin_ctzll((uint64_t)x);
}
#endif

static inline float fdiv32(float x, float y) {
  return x / y;
}

static inline float fadd32(float x, float y) {
  return x + y;
}

static inline float fsub32(float x, float y) {
  return x - y;
}

static inline float fmul32(float x, float y) {
  return x * y;
}

static inline bool cmplt32(float x, float y) {
  return x < y;
}

static inline bool cmple32(float x, float y) {
  return x <= y;
}

static inline float sitofp_i8_f32(int8_t x) {
  return (float) x;
}

static inline float sitofp_i16_f32(int16_t x) {
  return (float) x;
}

static inline float sitofp_i32_f32(int32_t x) {
  return (float) x;
}

static inline float sitofp_i64_f32(int64_t x) {
  return (float) x;
}

static inline float uitofp_i8_f32(uint8_t x) {
  return (float) x;
}

static inline float uitofp_i16_f32(uint16_t x) {
  return (float) x;
}

static inline float uitofp_i32_f32(uint32_t x) {
  return (float) x;
}

static inline float uitofp_i64_f32(uint64_t x) {
  return (float) x;
}

static inline int8_t fptosi_f32_i8(float x) {
  return (int8_t) x;
}

static inline int16_t fptosi_f32_i16(float x) {
  return (int16_t) x;
}

static inline int32_t fptosi_f32_i32(float x) {
  return (int32_t) x;
}

static inline int64_t fptosi_f32_i64(float x) {
  return (int64_t) x;
}

static inline uint8_t fptoui_f32_i8(float x) {
  return (uint8_t) x;
}

static inline uint16_t fptoui_f32_i16(float x) {
  return (uint16_t) x;
}

static inline uint32_t fptoui_f32_i32(float x) {
  return (uint32_t) x;
}

static inline uint64_t fptoui_f32_i64(float x) {
  return (uint64_t) x;
}

#ifdef __OPENCL_VERSION__
static inline float fabs32(float x) {
  return fabs(x);
}

static inline float fmax32(float x, float y) {
  return fmax(x, y);
}

static inline float fmin32(float x, float y) {
  return fmin(x, y);
}

static inline float fpow32(float x, float y) {
  return pow(x, y);
}

#else // Not OpenCL, but CUDA or plain C.

static inline float fabs32(float x) {
  return fabsf(x);
}

static inline float fmax32(float x, float y) {
  return fmaxf(x, y);
}

static inline float fmin32(float x, float y) {
  return fminf(x, y);
}

static inline float fpow32(float x, float y) {
  return powf(x, y);
}
#endif

static inline bool futrts_isnan32(float x) {
  return isnan(x);
}

static inline bool futrts_isinf32(float x) {
  return isinf(x);
}

#ifdef __OPENCL_VERSION__
static inline float futrts_log32(float x) {
  return log(x);
}

static inline float futrts_log2_32(float x) {
  return log2(x);
}

static inline float futrts_log10_32(float x) {
  return log10(x);
}

static inline float futrts_sqrt32(float x) {
  return sqrt(x);
}

static inline float futrts_exp32(float x) {
  return exp(x);
}

static inline float futrts_cos32(float x) {
  return cos(x);
}

static inline float futrts_sin32(float x) {
  return sin(x);
}

static inline float futrts_tan32(float x) {
  return tan(x);
}

static inline float futrts_acos32(float x) {
  return acos(x);
}

static inline float futrts_asin32(float x) {
  return asin(x);
}

static inline float futrts_atan32(float x) {
  return atan(x);
}

static inline float futrts_cosh32(float x) {
  return cosh(x);
}

static inline float futrts_sinh32(float x) {
  return sinh(x);
}

static inline float futrts_tanh32(float x) {
  return tanh(x);
}

static inline float futrts_acosh32(float x) {
  return acosh(x);
}

static inline float futrts_asinh32(float x) {
  return asinh(x);
}

static inline float futrts_atanh32(float x) {
  return atanh(x);
}

static inline float futrts_atan2_32(float x, float y) {
  return atan2(x, y);
}

static inline float futrts_hypot32(float x, float y) {
  return hypot(x, y);
}

static inline float futrts_gamma32(float x) {
  return tgamma(x);
}

static inline float futrts_lgamma32(float x) {
  return lgamma(x);
}

static inline float fmod32(float x, float y) {
  return fmod(x, y);
}

static inline float futrts_round32(float x) {
  return rint(x);
}

static inline float futrts_floor32(float x) {
  return floor(x);
}

static inline float futrts_ceil32(float x) {
  return ceil(x);
}

static inline float futrts_lerp32(float v0, float v1, float t) {
  return mix(v0, v1, t);
}

static inline float futrts_mad32(float a, float b, float c) {
  return mad(a, b, c);
}

static inline float futrts_fma32(float a, float b, float c) {
  return fma(a, b, c);
}

#else // Not OpenCL, but CUDA or plain C.

static inline float futrts_log32(float x) {
  return logf(x);
}

static inline float futrts_log2_32(float x) {
  return log2f(x);
}

static inline float futrts_log10_32(float x) {
  return log10f(x);
}

static inline float futrts_sqrt32(float x) {
  return sqrtf(x);
}

static inline float futrts_exp32(float x) {
  return expf(x);
}

static inline float futrts_cos32(float x) {
  return cosf(x);
}

static inline float futrts_sin32(float x) {
  return sinf(x);
}

static inline float futrts_tan32(float x) {
  return tanf(x);
}

static inline float futrts_acos32(float x) {
  return acosf(x);
}

static inline float futrts_asin32(float x) {
  return asinf(x);
}

static inline float futrts_atan32(float x) {
  return atanf(x);
}

static inline float futrts_cosh32(float x) {
  return coshf(x);
}

static inline float futrts_sinh32(float x) {
  return sinhf(x);
}

static inline float futrts_tanh32(float x) {
  return tanhf(x);
}

static inline float futrts_acosh32(float x) {
  return acoshf(x);
}

static inline float futrts_asinh32(float x) {
  return asinhf(x);
}

static inline float futrts_atanh32(float x) {
  return atanhf(x);
}

static inline float futrts_atan2_32(float x, float y) {
  return atan2f(x, y);
}

static inline float futrts_hypot32(float x, float y) {
  return hypotf(x, y);
}

static inline float futrts_gamma32(float x) {
  return tgammaf(x);
}

static inline float futrts_lgamma32(float x) {
  return lgammaf(x);
}

static inline float fmod32(float x, float y) {
  return fmodf(x, y);
}

static inline float futrts_round32(float x) {
  return rintf(x);
}

static inline float futrts_floor32(float x) {
  return floorf(x);
}

static inline float futrts_ceil32(float x) {
  return ceilf(x);
}

static inline float futrts_lerp32(float v0, float v1, float t) {
  return v0 + (v1 - v0) * t;
}

static inline float futrts_mad32(float a, float b, float c) {
  return a * b + c;
}

static inline float futrts_fma32(float a, float b, float c) {
  return fmaf(a, b, c);
}
#endif

static inline int32_t futrts_to_bits32(float x) {
  union {
    float f;
    int32_t t;
  } p;

  p.f = x;
  return p.t;
}

static inline float futrts_from_bits32(int32_t x) {
  union {
    int32_t f;
    float t;
  } p;

  p.f = x;
  return p.t;
}

static inline float fsignum32(float x) {
  return futrts_isnan32(x) ? x : (x > 0) - (x < 0);
}

#ifdef FUTHARK_F64_ENABLED

static inline double fdiv64(double x, double y) {
  return x / y;
}

static inline double fadd64(double x, double y) {
  return x + y;
}

static inline double fsub64(double x, double y) {
  return x - y;
}

static inline double fmul64(double x, double y) {
  return x * y;
}

static inline bool cmplt64(double x, double y) {
  return x < y;
}

static inline bool cmple64(double x, double y) {
  return x <= y;
}

static inline double sitofp_i8_f64(int8_t x) {
  return (double) x;
}

static inline double sitofp_i16_f64(int16_t x) {
  return (double) x;
}

static inline double sitofp_i32_f64(int32_t x) {
  return (double) x;
}

static inline double sitofp_i64_f64(int64_t x) {
  return (double) x;
}

static inline double uitofp_i8_f64(uint8_t x) {
  return (double) x;
}

static inline double uitofp_i16_f64(uint16_t x) {
  return (double) x;
}

static inline double uitofp_i32_f64(uint32_t x) {
  return (double) x;
}

static inline double uitofp_i64_f64(uint64_t x) {
  return (double) x;
}

static inline int8_t fptosi_f64_i8(double x) {
  return (int8_t) x;
}

static inline int16_t fptosi_f64_i16(double x) {
  return (int16_t) x;
}

static inline int32_t fptosi_f64_i32(double x) {
  return (int32_t) x;
}

static inline int64_t fptosi_f64_i64(double x) {
  return (int64_t) x;
}

static inline uint8_t fptoui_f64_i8(double x) {
  return (uint8_t) x;
}

static inline uint16_t fptoui_f64_i16(double x) {
  return (uint16_t) x;
}

static inline uint32_t fptoui_f64_i32(double x) {
  return (uint32_t) x;
}

static inline uint64_t fptoui_f64_i64(double x) {
  return (uint64_t) x;
}

static inline double fabs64(double x) {
  return fabs(x);
}

static inline double fmax64(double x, double y) {
  return fmax(x, y);
}

static inline double fmin64(double x, double y) {
  return fmin(x, y);
}

static inline double fpow64(double x, double y) {
  return pow(x, y);
}

static inline double futrts_log64(double x) {
  return log(x);
}

static inline double futrts_log2_64(double x) {
  return log2(x);
}

static inline double futrts_log10_64(double x) {
  return log10(x);
}

static inline double futrts_sqrt64(double x) {
  return sqrt(x);
}

static inline double futrts_exp64(double x) {
  return exp(x);
}

static inline double futrts_cos64(double x) {
  return cos(x);
}

static inline double futrts_sin64(double x) {
  return sin(x);
}

static inline double futrts_tan64(double x) {
  return tan(x);
}

static inline double futrts_acos64(double x) {
  return acos(x);
}

static inline double futrts_asin64(double x) {
  return asin(x);
}

static inline double futrts_atan64(double x) {
  return atan(x);
}

static inline double futrts_cosh64(double x) {
  return cosh(x);
}

static inline double futrts_sinh64(double x) {
  return sinh(x);
}

static inline double futrts_tanh64(double x) {
  return tanh(x);
}

static inline double futrts_acosh64(double x) {
  return acosh(x);
}

static inline double futrts_asinh64(double x) {
  return asinh(x);
}

static inline double futrts_atanh64(double x) {
  return atanh(x);
}

static inline double futrts_atan2_64(double x, double y) {
  return atan2(x, y);
}

static inline double futrts_hypot64(double x, double y) {
  return hypot(x, y);
}

static inline double futrts_gamma64(double x) {
  return tgamma(x);
}

static inline double futrts_lgamma64(double x) {
  return lgamma(x);
}

static inline double futrts_fma64(double a, double b, double c) {
  return fma(a, b, c);
}

static inline double futrts_round64(double x) {
  return rint(x);
}

static inline double futrts_ceil64(double x) {
  return ceil(x);
}

static inline double futrts_floor64(double x) {
  return floor(x);
}

static inline bool futrts_isnan64(double x) {
  return isnan(x);
}

static inline bool futrts_isinf64(double x) {
  return isinf(x);
}

static inline int64_t futrts_to_bits64(double x) {
  union {
    double f;
    int64_t t;
  } p;

  p.f = x;
  return p.t;
}

static inline double futrts_from_bits64(int64_t x) {
  union {
    int64_t f;
    double t;
  } p;

  p.f = x;
  return p.t;
}

static inline double fmod64(double x, double y) {
  return fmod(x, y);
}

static inline double fsignum64(double x) {
  return futrts_isnan64(x) ? x : (x > 0) - (x < 0);
}

static inline double futrts_lerp64(double v0, double v1, double t) {
#ifdef __OPENCL_VERSION__
  return mix(v0, v1, t);
#else
  return v0 + (v1 - v0) * t;
#endif
}

static inline double futrts_mad64(double a, double b, double c) {
#ifdef __OPENCL_VERSION__
  return mad(a, b, c);
#else
  return a * b + c;
#endif
}

static inline float fpconv_f32_f32(float x) {
  return (float) x;
}

static inline double fpconv_f32_f64(float x) {
  return (double) x;
}

static inline float fpconv_f64_f32(double x) {
  return (float) x;
}

static inline double fpconv_f64_f64(double x) {
  return (double) x;
}

#endif

// End of scalar.h.
// Start of scalar_f16.h.

// Half-precision is emulated if needed (e.g. in straight C) with the
// native type used if possible.  The emulation works by typedef'ing
// 'float' to 'f16', and then implementing all operations on single
// precision.  To cut down on duplication, we use the same code for
// those Futhark functions that require just operators or casts.  The
// in-memory representation for arrays will still be 16 bits even
// under emulation, so the compiler will have to be careful when
// generating reads or writes.

#if !defined(cl_khr_fp16) && !(defined(__CUDA_ARCH__) && __CUDA_ARCH__ >= 600)
#define EMULATE_F16
#endif

#if !defined(EMULATE_F16) && defined(__OPENCL_VERSION__)
#pragma OPENCL EXTENSION cl_khr_fp16 : enable
#endif

#ifdef EMULATE_F16

// Note that the half-precision storage format is still 16 bits - the
// compiler will have to be real careful!
typedef float f16;

#else

#ifdef __CUDA_ARCH__
#include <cuda_fp16.h>
#endif

typedef half f16;

#endif

// Some of these functions convert to single precision because half
// precision versions are not available.

static inline f16 fadd16(f16 x, f16 y) {
  return x + y;
}

static inline f16 fsub16(f16 x, f16 y) {
  return x - y;
}

static inline f16 fmul16(f16 x, f16 y) {
  return x * y;
}

static inline bool cmplt16(f16 x, f16 y) {
  return x < y;
}

static inline bool cmple16(f16 x, f16 y) {
  return x <= y;
}

static inline f16 sitofp_i8_f16(int8_t x) {
  return (f16) x;
}

static inline f16 sitofp_i16_f16(int16_t x) {
  return (f16) x;
}

static inline f16 sitofp_i32_f16(int32_t x) {
  return (f16) x;
}

static inline f16 sitofp_i64_f16(int64_t x) {
  return (f16) x;
}

static inline f16 uitofp_i8_f16(uint8_t x) {
  return (f16) x;
}

static inline f16 uitofp_i16_f16(uint16_t x) {
  return (f16) x;
}

static inline f16 uitofp_i32_f16(uint32_t x) {
  return (f16) x;
}

static inline f16 uitofp_i64_f16(uint64_t x) {
  return (f16) x;
}

static inline int8_t fptosi_f16_i8(f16 x) {
  return (int8_t) (float) x;
}

static inline int16_t fptosi_f16_i16(f16 x) {
  return (int16_t) x;
}

static inline int32_t fptosi_f16_i32(f16 x) {
  return (int32_t) x;
}

static inline int64_t fptosi_f16_i64(f16 x) {
  return (int64_t) x;
}

static inline uint8_t fptoui_f16_i8(f16 x) {
  return (uint8_t) (float) x;
}

static inline uint16_t fptoui_f16_i16(f16 x) {
  return (uint16_t) x;
}

static inline uint32_t fptoui_f16_i32(f16 x) {
  return (uint32_t) x;
}

static inline uint64_t fptoui_f16_i64(f16 x) {
  return (uint64_t) x;
}

#ifndef EMULATE_F16

#ifdef __OPENCL_VERSION__
static inline f16 fabs16(f16 x) {
  return fabs(x);
}

static inline f16 fmax16(f16 x, f16 y) {
  return fmax(x, y);
}

static inline f16 fmin16(f16 x, f16 y) {
  return fmin(x, y);
}

static inline f16 fpow16(f16 x, f16 y) {
  return pow(x, y);
}

#else // Assuming CUDA.

static inline f16 fabs16(f16 x) {
  return fabsf(x);
}

static inline f16 fmax16(f16 x, f16 y) {
  return fmaxf(x, y);
}

static inline f16 fmin16(f16 x, f16 y) {
  return fminf(x, y);
}

static inline f16 fpow16(f16 x, f16 y) {
  return powf(x, y);
}
#endif

static inline bool futrts_isnan16(f16 x) {
  return isnan((float)x);
}

static inline bool futrts_isinf16(f16 x) {
  return isinf((float)x);
}

#ifdef __OPENCL_VERSION__
static inline f16 futrts_log16(f16 x) {
  return log(x);
}

static inline f16 futrts_log2_16(f16 x) {
  return log2(x);
}

static inline f16 futrts_log10_16(f16 x) {
  return log10(x);
}

static inline f16 futrts_sqrt16(f16 x) {
  return sqrt(x);
}

static inline f16 futrts_exp16(f16 x) {
  return exp(x);
}

static inline f16 futrts_cos16(f16 x) {
  return cos(x);
}

static inline f16 futrts_sin16(f16 x) {
  return sin(x);
}

static inline f16 futrts_tan16(f16 x) {
  return tan(x);
}

static inline f16 futrts_acos16(f16 x) {
  return acos(x);
}

static inline f16 futrts_asin16(f16 x) {
  return asin(x);
}

static inline f16 futrts_atan16(f16 x) {
  return atan(x);
}

static inline f16 futrts_cosh16(f16 x) {
  return cosh(x);
}

static inline f16 futrts_sinh16(f16 x) {
  return sinh(x);
}

static inline f16 futrts_tanh16(f16 x) {
  return tanh(x);
}

static inline f16 futrts_acosh16(f16 x) {
  return acosh(x);
}

static inline f16 futrts_asinh16(f16 x) {
  return asinh(x);
}

static inline f16 futrts_atanh16(f16 x) {
  return atanh(x);
}

static inline f16 futrts_atan2_16(f16 x, f16 y) {
  return atan2(x, y);
}

static inline f16 futrts_hypot16(f16 x, f16 y) {
  return hypot(x, y);
}

static inline f16 futrts_gamma16(f16 x) {
  return tgamma(x);
}

static inline f16 futrts_lgamma16(f16 x) {
  return lgamma(x);
}

static inline f16 fmod16(f16 x, f16 y) {
  return fmod(x, y);
}

static inline f16 futrts_round16(f16 x) {
  return rint(x);
}

static inline f16 futrts_floor16(f16 x) {
  return floor(x);
}

static inline f16 futrts_ceil16(f16 x) {
  return ceil(x);
}

static inline f16 futrts_lerp16(f16 v0, f16 v1, f16 t) {
  return mix(v0, v1, t);
}

static inline f16 futrts_mad16(f16 a, f16 b, f16 c) {
  return mad(a, b, c);
}

static inline f16 futrts_fma16(f16 a, f16 b, f16 c) {
  return fma(a, b, c);
}

#else // Assume CUDA.

static inline f16 futrts_log16(f16 x) {
  return hlog(x);
}

static inline f16 futrts_log2_16(f16 x) {
  return hlog2(x);
}

static inline f16 futrts_log10_16(f16 x) {
  return hlog10(x);
}

static inline f16 futrts_sqrt16(f16 x) {
  return hsqrt(x);
}

static inline f16 futrts_exp16(f16 x) {
  return hexp(x);
}

static inline f16 futrts_cos16(f16 x) {
  return hcos(x);
}

static inline f16 futrts_sin16(f16 x) {
  return hsin(x);
}

static inline f16 futrts_tan16(f16 x) {
  return tanf(x);
}

static inline f16 futrts_acos16(f16 x) {
  return acosf(x);
}

static inline f16 futrts_asin16(f16 x) {
  return asinf(x);
}

static inline f16 futrts_atan16(f16 x) {
  return atanf(x);
}

static inline f16 futrts_cosh16(f16 x) {
  return coshf(x);
}

static inline f16 futrts_sinh16(f16 x) {
  return sinhf(x);
}

static inline f16 futrts_tanh16(f16 x) {
  return tanhf(x);
}

static inline f16 futrts_acosh16(f16 x) {
  return acoshf(x);
}

static inline f16 futrts_asinh16(f16 x) {
  return asinhf(x);
}

static inline f16 futrts_atanh16(f16 x) {
  return atanhf(x);
}

static inline f16 futrts_atan2_16(f16 x, f16 y) {
  return atan2f(x, y);
}

static inline f16 futrts_hypot16(f16 x, f16 y) {
  return hypotf(x, y);
}

static inline f16 futrts_gamma16(f16 x) {
  return tgammaf(x);
}

static inline f16 futrts_lgamma16(f16 x) {
  return lgammaf(x);
}

static inline f16 fmod16(f16 x, f16 y) {
  return fmodf(x, y);
}

static inline f16 futrts_round16(f16 x) {
  return rintf(x);
}

static inline f16 futrts_floor16(f16 x) {
  return hfloor(x);
}

static inline f16 futrts_ceil16(f16 x) {
  return hceil(x);
}

static inline f16 futrts_lerp16(f16 v0, f16 v1, f16 t) {
  return v0 + (v1 - v0) * t;
}

static inline f16 futrts_mad16(f16 a, f16 b, f16 c) {
  return a * b + c;
}

static inline f16 futrts_fma16(f16 a, f16 b, f16 c) {
  return fmaf(a, b, c);
}

#endif

// The CUDA __half type cannot be put in unions for some reason, so we
// use bespoke conversion functions instead.
#ifdef __CUDA_ARCH__
static inline int16_t futrts_to_bits16(f16 x) {
  return __half_as_ushort(x);
}
static inline f16 futrts_from_bits16(int16_t x) {
  return __ushort_as_half(x);
}
#else
static inline int16_t futrts_to_bits16(f16 x) {
  union {
    f16 f;
    int16_t t;
  } p;

  p.f = x;
  return p.t;
}

static inline f16 futrts_from_bits16(int16_t x) {
  union {
    int16_t f;
    f16 t;
  } p;

  p.f = x;
  return p.t;
}
#endif

#else // No native f16 - emulate.

static inline f16 fabs16(f16 x) {
  return fabs32(x);
}

static inline f16 fmax16(f16 x, f16 y) {
  return fmax32(x, y);
}

static inline f16 fmin16(f16 x, f16 y) {
  return fmin32(x, y);
}

static inline f16 fpow16(f16 x, f16 y) {
  return fpow32(x, y);
}

static inline bool futrts_isnan16(f16 x) {
  return futrts_isnan32(x);
}

static inline bool futrts_isinf16(f16 x) {
  return futrts_isinf32(x);
}

static inline f16 futrts_log16(f16 x) {
  return futrts_log32(x);
}

static inline f16 futrts_log2_16(f16 x) {
  return futrts_log2_32(x);
}

static inline f16 futrts_log10_16(f16 x) {
  return futrts_log10_32(x);
}

static inline f16 futrts_sqrt16(f16 x) {
  return futrts_sqrt32(x);
}

static inline f16 futrts_exp16(f16 x) {
  return futrts_exp32(x);
}

static inline f16 futrts_cos16(f16 x) {
  return futrts_cos32(x);
}

static inline f16 futrts_sin16(f16 x) {
  return futrts_sin32(x);
}

static inline f16 futrts_tan16(f16 x) {
  return futrts_tan32(x);
}

static inline f16 futrts_acos16(f16 x) {
  return futrts_acos32(x);
}

static inline f16 futrts_asin16(f16 x) {
  return futrts_asin32(x);
}

static inline f16 futrts_atan16(f16 x) {
  return futrts_atan32(x);
}

static inline f16 futrts_cosh16(f16 x) {
  return futrts_cosh32(x);
}

static inline f16 futrts_sinh16(f16 x) {
  return futrts_sinh32(x);
}

static inline f16 futrts_tanh16(f16 x) {
  return futrts_tanh32(x);
}

static inline f16 futrts_acosh16(f16 x) {
  return futrts_acosh32(x);
}

static inline f16 futrts_asinh16(f16 x) {
  return futrts_asinh32(x);
}

static inline f16 futrts_atanh16(f16 x) {
  return futrts_atanh32(x);
}

static inline f16 futrts_atan2_16(f16 x, f16 y) {
  return futrts_atan2_32(x, y);
}

static inline f16 futrts_hypot16(f16 x, f16 y) {
  return futrts_hypot32(x, y);
}

static inline f16 futrts_gamma16(f16 x) {
  return futrts_gamma32(x);
}

static inline f16 futrts_lgamma16(f16 x) {
  return futrts_lgamma32(x);
}

static inline f16 fmod16(f16 x, f16 y) {
  return fmod32(x, y);
}

static inline f16 futrts_round16(f16 x) {
  return futrts_round32(x);
}

static inline f16 futrts_floor16(f16 x) {
  return futrts_floor32(x);
}

static inline f16 futrts_ceil16(f16 x) {
  return futrts_ceil32(x);
}

static inline f16 futrts_lerp16(f16 v0, f16 v1, f16 t) {
  return futrts_lerp32(v0, v1, t);
}

static inline f16 futrts_mad16(f16 a, f16 b, f16 c) {
  return futrts_mad32(a, b, c);
}

static inline f16 futrts_fma16(f16 a, f16 b, f16 c) {
  return futrts_fma32(a, b, c);
}

// Even when we are using an OpenCL that does not support cl_khr_fp16,
// it must still support vload_half for actually creating a
// half-precision number, which can then be efficiently converted to a
// float.  Similarly for vstore_half.
#ifdef __OPENCL_VERSION__

static inline int16_t futrts_to_bits16(f16 x) {
  int16_t y;
  // Violating strict aliasing here.
  vstore_half((float)x, 0, (half*)&y);
  return y;
}

static inline f16 futrts_from_bits16(int16_t x) {
  return (f16)vload_half(0, (half*)&x);
}

#else

static inline int16_t futrts_to_bits16(f16 x) {
  return (int16_t)float2halfbits(x);
}

static inline f16 futrts_from_bits16(int16_t x) {
  return halfbits2float((uint16_t)x);
}

static inline f16 fsignum16(f16 x) {
  return futrts_isnan16(x) ? x : (x > 0) - (x < 0);
}

#endif

#endif

static inline float fpconv_f16_f16(f16 x) {
  return x;
}

static inline float fpconv_f16_f32(f16 x) {
  return x;
}

static inline f16 fpconv_f32_f16(float x) {
  return x;
}

#ifdef FUTHARK_F64_ENABLED

static inline double fpconv_f16_f64(f16 x) {
  return (double) x;
}

static inline f16 fpconv_f64_f16(double x) {
  return (f16) x;
}

#endif


// End of scalar_f16.h.
// Start of atomics.h

inline int32_t atomic_xchg_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_cmpxchg_i32_global(volatile __global int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_cmpxchg_i32_local(volatile __local int32_t *p,
                                        int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_add_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline int32_t atomic_add_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline float atomic_fadd_f32_global(volatile __global float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i32_global((volatile __global int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline float atomic_fadd_f32_local(volatile __local float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i32_local((volatile __local int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int32_t atomic_smax_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smax_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smin_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_smin_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umax_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umax_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umin_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umin_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_and_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_and_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_or_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_or_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_xor_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xor_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

// Start of 64 bit atomics

inline int64_t atomic_xchg_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((uint64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_xchg_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((uint64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_cmpxchg_i64_global(volatile __global int64_t *p,
                                         int64_t cmp, int64_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((uint64_t*)p, cmp, val);
#else
  return atom_cmpxchg(p, cmp, val);
#endif
}

inline int64_t atomic_cmpxchg_i64_local(volatile __local int64_t *p,
                                        int64_t cmp, int64_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((uint64_t*)p, cmp, val);
#else
  return atom_cmpxchg(p, cmp, val);
#endif
}

inline int64_t atomic_add_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((uint64_t*)p, x);
#else
  return atom_add(p, x);
#endif
}

inline int64_t atomic_add_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((uint64_t*)p, x);
#else
  return atom_add(p, x);
#endif
}

#ifdef FUTHARK_F64_ENABLED

inline double atomic_fadd_f64_global(volatile __global double *p, double x) {
#if defined(FUTHARK_CUDA) && __CUDA_ARCH__ >= 600
  return atomicAdd((double*)p, x);
#else
  union { int64_t i; double f; } old;
  union { int64_t i; double f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i64_global((volatile __global int64_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline double atomic_fadd_f64_local(volatile __local double *p, double x) {
#if defined(FUTHARK_CUDA) && __CUDA_ARCH__ >= 600
  return atomicAdd((double*)p, x);
#else
  union { int64_t i; double f; } old;
  union { int64_t i; double f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i64_local((volatile __local int64_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

#endif

inline int64_t atomic_smax_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline int64_t atomic_smax_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline int64_t atomic_smin_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline int64_t atomic_smin_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline uint64_t atomic_umax_i64_global(volatile __global uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline uint64_t atomic_umax_i64_local(volatile __local uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline uint64_t atomic_umin_i64_global(volatile __global uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline uint64_t atomic_umin_i64_local(volatile __local uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline int64_t atomic_and_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int64_t*)p, x);
#else
  return atom_and(p, x);
#endif
}

inline int64_t atomic_and_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int64_t*)p, x);
#else
  return atom_and(p, x);
#endif
}

inline int64_t atomic_or_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int64_t*)p, x);
#else
  return atom_or(p, x);
#endif
}

inline int64_t atomic_or_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int64_t*)p, x);
#else
  return atom_or(p, x);
#endif
}

inline int64_t atomic_xor_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_xor_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

// End of atomics.h



__kernel void builtinzhreplicate_f64zireplicate_26446(int32_t num_elems_26443,
                                                      double val_26444, __global
                                                      unsigned char *mem_26442)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_26446;
    int32_t replicate_ltid_26447;
    int32_t replicate_gid_26448;
    
    replicate_gtid_26446 = get_global_id(0);
    replicate_ltid_26447 = get_local_id(0);
    replicate_gid_26448 = get_group_id(0);
    
    int64_t slice_26452 = num_elems_26443;
    int64_t rep_i_26451 = sext_i32_i64(replicate_gtid_26446);
    int64_t remnant_26453 = sext_i32_i64(replicate_gtid_26446) - rep_i_26451;
    
    if (slt64(replicate_gtid_26446, num_elems_26443)) {
        ((__global double *) mem_26442)[rep_i_26451] = val_26444;
    }
    
  error_0:
    return;
}
__kernel void calculate_jacobianzicopy_26050(int64_t k_16569, int64_t n_16572,
                                             __global unsigned char *mem_24547,
                                             __global unsigned char *mem_24722)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_26050;
    int32_t copy_ltid_26051;
    int32_t copy_gid_26052;
    
    copy_gtid_26050 = get_global_id(0);
    copy_ltid_26051 = get_local_id(0);
    copy_gid_26052 = get_group_id(0);
    
    int64_t slice_26057 = k_16569;
    int64_t slice_26058 = n_16572 * slice_26057;
    int64_t copy_i_26055 = squot64(sext_i32_i64(copy_gtid_26050), slice_26057);
    int64_t remnant_26059 = sext_i32_i64(copy_gtid_26050) - copy_i_26055 *
            slice_26057;
    int64_t copy_i_26056 = remnant_26059;
    int64_t remnant_26060 = remnant_26059 - copy_i_26056;
    
    if (slt64(sext_i32_i64(copy_gtid_26050), n_16572 * k_16569)) {
        double tmp_26061;
        
        tmp_26061 = ((__global double *) mem_24547)[copy_i_26056 * n_16572 +
                                                    copy_i_26055];
        ((__global double *) mem_24722)[copy_i_26055 * k_16569 + copy_i_26056] =
            tmp_26061;
    }
    
  error_0:
    return;
}
__kernel void calculate_jacobianzicopy_26801(int64_t k_16569, int64_t d_16570,
                                             int64_t dz2080U_16571,
                                             int64_t j_m_i_16598, __global
                                             unsigned char *mem_25177, __global
                                             unsigned char *mem_25182)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_26801;
    int32_t copy_ltid_26802;
    int32_t copy_gid_26803;
    
    copy_gtid_26801 = get_global_id(0);
    copy_ltid_26802 = get_local_id(0);
    copy_gid_26803 = get_group_id(0);
    
    int64_t slice_26808 = j_m_i_16598;
    int64_t slice_26809 = k_16569 * slice_26808;
    int64_t copy_i_26806 = squot64(sext_i32_i64(copy_gtid_26801), slice_26808);
    int64_t remnant_26810 = sext_i32_i64(copy_gtid_26801) - copy_i_26806 *
            slice_26808;
    int64_t copy_i_26807 = remnant_26810;
    int64_t remnant_26811 = remnant_26810 - copy_i_26807;
    
    if (slt64(sext_i32_i64(copy_gtid_26801), k_16569 * j_m_i_16598)) {
        double tmp_26812;
        
        tmp_26812 = ((__global double *) mem_25177)[copy_i_26806 * j_m_i_16598 +
                                                    copy_i_26807];
        ((__global double *) mem_25182)[d_16570 + (copy_i_26806 *
                                                   dz2080U_16571 +
                                                   copy_i_26807)] = tmp_26812;
    }
    
  error_0:
    return;
}
__kernel void calculate_jacobianzicopy_26831(int64_t k_16569, int64_t d_16570,
                                             int64_t dz2080U_16571, __global
                                             unsigned char *mem_25182, __global
                                             unsigned char *mem_25191)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_26831;
    int32_t copy_ltid_26832;
    int32_t copy_gid_26833;
    
    copy_gtid_26831 = get_global_id(0);
    copy_ltid_26832 = get_local_id(0);
    copy_gid_26833 = get_group_id(0);
    
    int64_t slice_26838 = d_16570;
    int64_t slice_26839 = k_16569 * slice_26838;
    int64_t copy_i_26836 = squot64(sext_i32_i64(copy_gtid_26831), slice_26838);
    int64_t remnant_26840 = sext_i32_i64(copy_gtid_26831) - copy_i_26836 *
            slice_26838;
    int64_t copy_i_26837 = remnant_26840;
    int64_t remnant_26841 = remnant_26840 - copy_i_26837;
    
    if (slt64(sext_i32_i64(copy_gtid_26831), k_16569 * d_16570)) {
        double tmp_26842;
        
        tmp_26842 = ((__global double *) mem_25191)[copy_i_26836 * d_16570 +
                                                    copy_i_26837];
        ((__global double *) mem_25182)[copy_i_26836 * dz2080U_16571 +
                                        copy_i_26837] = tmp_26842;
    }
    
  error_0:
    return;
}
__kernel void calculate_jacobianzisegmap_19144(__global int *global_failure,
                                               int failure_is_an_option,
                                               __global
                                               int64_t *global_failure_args,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t dz2080U_16571,
                                               int64_t j_m_i_16598, __global
                                               unsigned char *icf_mem_24019,
                                               __global
                                               unsigned char *mem_24066)
{
    #define segmap_group_sizze_19138 (calculate_jacobianzisegmap_group_sizze_18875)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25486;
    int32_t local_tid_25487;
    int64_t group_sizze_25490;
    int32_t wave_sizze_25489;
    int32_t group_tid_25488;
    
    global_tid_25486 = get_global_id(0);
    local_tid_25487 = get_local_id(0);
    group_sizze_25490 = get_local_size(0);
    wave_sizze_25489 = LOCKSTEP_WIDTH;
    group_tid_25488 = get_group_id(0);
    
    int32_t phys_tid_19144 = global_tid_25486;
    int64_t global_tid_25491 = sext_i32_i64(group_tid_25488) *
            segmap_group_sizze_19138 + sext_i32_i64(local_tid_25487);
    int64_t slice_25492 = d_16570;
    int64_t slice_25493 = d_16570 * slice_25492;
    int64_t slice_25494 = k_16569 * slice_25493;
    int64_t gtid_19141 = squot64(global_tid_25491, slice_25493);
    int64_t remnant_25495 = global_tid_25491 - gtid_19141 * slice_25493;
    int64_t gtid_19142 = squot64(remnant_25495, slice_25492);
    int64_t remnant_25496 = remnant_25495 - gtid_19142 * slice_25492;
    int64_t gtid_19143 = remnant_25496;
    int64_t remnant_25497 = remnant_25496 - gtid_19143;
    
    if ((slt64(gtid_19141, k_16569) && slt64(gtid_19142, d_16570)) &&
        slt64(gtid_19143, d_16570)) {
        bool cond_19149 = slt64(gtid_19143, gtid_19142);
        double defunc_0_f_res_19150;
        
        if (cond_19149) {
            defunc_0_f_res_19150 = 0.0;
        } else {
            bool cond_19151 = gtid_19143 == gtid_19142;
            double defunc_0_f_res_f_res_19152;
            
            if (cond_19151) {
                double exp_arg_19157;
                
                exp_arg_19157 = ((__global double *) icf_mem_24019)[gtid_19141 *
                                                                    dz2080U_16571 +
                                                                    gtid_19143];
                
                double exp_res_19158;
                
                exp_res_19158 = futrts_exp64(exp_arg_19157);
                defunc_0_f_res_f_res_19152 = exp_res_19158;
            } else {
                int64_t x_19159 = mul64(d_16570, gtid_19142);
                int64_t x_19160 = add64(gtid_19143, x_19159);
                int64_t x_19161 = sub64(x_19160, gtid_19142);
                int64_t x_19162 = sub64(x_19161, (int64_t) 1);
                int64_t y_19163 = add64((int64_t) 1, gtid_19142);
                int64_t x_19164 = mul64(gtid_19142, y_19163);
                int64_t y_19165 = sdiv64(x_19164, (int64_t) 2);
                int64_t i_19166 = sub64(x_19162, y_19165);
                bool x_19167 = sle64((int64_t) 0, i_19166);
                bool y_19168 = slt64(i_19166, j_m_i_16598);
                bool bounds_check_19169 = x_19167 && y_19168;
                bool index_certs_19170;
                
                if (!bounds_check_19169) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 2) ==
                            -1) {
                            global_failure_args[0] = (int64_t) i_19166;
                            global_failure_args[1] = (int64_t) j_m_i_16598;
                            ;
                        }
                        return;
                    }
                }
                
                int64_t slice_22120 = d_16570 + i_19166;
                double defunc_0_f_res_f_res_f_res_19171;
                
                defunc_0_f_res_f_res_f_res_19171 = ((__global
                                                     double *) icf_mem_24019)[gtid_19141 *
                                                                              dz2080U_16571 +
                                                                              slice_22120];
                defunc_0_f_res_f_res_19152 = defunc_0_f_res_f_res_f_res_19171;
            }
            defunc_0_f_res_19150 = defunc_0_f_res_f_res_19152;
        }
        ((__global double *) mem_24066)[gtid_19141 * (d_16570 * d_16570) +
                                        gtid_19142 * d_16570 + gtid_19143] =
            defunc_0_f_res_19150;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_19138
}
__kernel void calculate_jacobianzisegmap_19205(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t n_16572, __global
                                               unsigned char *means_mem_24018,
                                               __global
                                               unsigned char *mem_24069,
                                               __global
                                               unsigned char *mem_24075)
{
    #define segmap_group_sizze_19199 (calculate_jacobianzisegmap_group_sizze_18799)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25498;
    int32_t local_tid_25499;
    int64_t group_sizze_25502;
    int32_t wave_sizze_25501;
    int32_t group_tid_25500;
    
    global_tid_25498 = get_global_id(0);
    local_tid_25499 = get_local_id(0);
    group_sizze_25502 = get_local_size(0);
    wave_sizze_25501 = LOCKSTEP_WIDTH;
    group_tid_25500 = get_group_id(0);
    
    int32_t phys_tid_19205 = global_tid_25498;
    int64_t global_tid_25503 = sext_i32_i64(group_tid_25500) *
            segmap_group_sizze_19199 + sext_i32_i64(local_tid_25499);
    int64_t slice_25504 = n_16572;
    int64_t slice_25505 = d_16570 * slice_25504;
    int64_t slice_25506 = k_16569 * slice_25505;
    int64_t gtid_19202 = squot64(global_tid_25503, slice_25505);
    int64_t remnant_25507 = global_tid_25503 - gtid_19202 * slice_25505;
    int64_t gtid_19203 = squot64(remnant_25507, slice_25504);
    int64_t remnant_25508 = remnant_25507 - gtid_19203 * slice_25504;
    int64_t gtid_19204 = remnant_25508;
    int64_t remnant_25509 = remnant_25508 - gtid_19204;
    
    if ((slt64(gtid_19202, k_16569) && slt64(gtid_19203, d_16570)) &&
        slt64(gtid_19204, n_16572)) {
        double y_19208;
        
        y_19208 = ((__global double *) means_mem_24018)[gtid_19202 * d_16570 +
                                                        gtid_19203];
        
        double x_19215;
        
        x_19215 = ((__global double *) mem_24069)[gtid_19203 * n_16572 +
                                                  gtid_19204];
        
        double defunc_0_f_res_19216 = x_19215 - y_19208;
        
        ((__global double *) mem_24075)[gtid_19202 * (n_16572 * d_16570) +
                                        gtid_19203 * n_16572 + gtid_19204] =
            defunc_0_f_res_19216;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_19199
}
__kernel void calculate_jacobianzisegmap_19253(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t n_16572,
                                               int64_t num_groups_19249,
                                               int64_t num_threads_25387,
                                               __global
                                               unsigned char *mem_24087,
                                               __global
                                               unsigned char *mem_24095,
                                               __global
                                               unsigned char *mem_24144,
                                               __global
                                               unsigned char *color_25324)
{
    #define segmap_group_sizze_19248 (calculate_jacobianzisegmap_group_sizze_19227)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25515;
    int32_t local_tid_25516;
    int64_t group_sizze_25519;
    int32_t wave_sizze_25518;
    int32_t group_tid_25517;
    
    global_tid_25515 = get_global_id(0);
    local_tid_25516 = get_local_id(0);
    group_sizze_25519 = get_local_size(0);
    wave_sizze_25518 = LOCKSTEP_WIDTH;
    group_tid_25517 = get_group_id(0);
    
    int32_t phys_tid_19253 = global_tid_25515;
    int32_t phys_group_id_25520;
    
    phys_group_id_25520 = get_group_id(0);
    for (int32_t i_25521 = 0; i_25521 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16569, segmap_group_sizze_19248)) -
                   phys_group_id_25520, sext_i64_i32(num_groups_19249));
         i_25521++) {
        int32_t virt_group_id_25522 = phys_group_id_25520 + i_25521 *
                sext_i64_i32(num_groups_19249);
        int64_t global_tid_25523 = sext_i32_i64(virt_group_id_25522) *
                segmap_group_sizze_19248 + sext_i32_i64(local_tid_25516);
        int64_t slice_25524 = k_16569;
        int64_t gtid_19252 = global_tid_25523;
        int64_t remnant_25525 = global_tid_25523 - gtid_19252;
        
        if (slt64(gtid_19252, k_16569)) {
            for (int64_t i_23932 = 0; i_23932 < n_16572; i_23932++) {
                for (int64_t i_23936 = 0; i_23936 < d_16570; i_23936++) {
                    double defunc_2_reduce_res_19260;
                    double redout_23938 = 0.0;
                    
                    for (int64_t i_23939 = 0; i_23939 < d_16570; i_23939++) {
                        double x_19264;
                        
                        x_19264 = ((__global double *) mem_24087)[i_23932 *
                                                                  (k_16569 *
                                                                   d_16570) +
                                                                  i_23939 *
                                                                  k_16569 +
                                                                  gtid_19252];
                        
                        double x_19265;
                        
                        x_19265 = ((__global double *) mem_24095)[i_23936 *
                                                                  (k_16569 *
                                                                   d_16570) +
                                                                  i_23939 *
                                                                  k_16569 +
                                                                  gtid_19252];
                        
                        double defunc_1_f_res_19266 = x_19264 * x_19265;
                        double defunc_1_op_res_19263 = defunc_1_f_res_19266 +
                               redout_23938;
                        double redout_tmp_25528 = defunc_1_op_res_19263;
                        
                        redout_23938 = redout_tmp_25528;
                    }
                    defunc_2_reduce_res_19260 = redout_23938;
                    ((__global double *) color_25324)[phys_tid_19253 +
                                                      (i_23932 *
                                                       (num_threads_25387 *
                                                        d_16570) + i_23936 *
                                                       num_threads_25387)] =
                        defunc_2_reduce_res_19260;
                }
            }
            for (int64_t i_25529 = 0; i_25529 < n_16572; i_25529++) {
                for (int64_t i_25530 = 0; i_25530 < d_16570; i_25530++) {
                    double tmp_25531;
                    
                    tmp_25531 = ((__global
                                  double *) color_25324)[phys_tid_19253 +
                                                         (i_25529 *
                                                          (num_threads_25387 *
                                                           d_16570) + i_25530 *
                                                          num_threads_25387)];
                    ((__global double *) mem_24144)[gtid_19252 + (i_25529 *
                                                                  (k_16569 *
                                                                   d_16570) +
                                                                  i_25530 *
                                                                  k_16569)] =
                        tmp_25531;
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_19248
}
__kernel void calculate_jacobianzisegmap_19437(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t n_16572,
                                               int64_t num_groups_19428,
                                               int64_t num_threads_25389,
                                               __global
                                               unsigned char *ext_mem_24079,
                                               __global
                                               unsigned char *mem_24148,
                                               __global
                                               unsigned char *mem_24168,
                                               __global
                                               unsigned char *color_25325)
{
    #define segmap_group_sizze_19427 (calculate_jacobianzisegmap_group_sizze_19272)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25532;
    int32_t local_tid_25533;
    int64_t group_sizze_25536;
    int32_t wave_sizze_25535;
    int32_t group_tid_25534;
    
    global_tid_25532 = get_global_id(0);
    local_tid_25533 = get_local_id(0);
    group_sizze_25536 = get_local_size(0);
    wave_sizze_25535 = LOCKSTEP_WIDTH;
    group_tid_25534 = get_group_id(0);
    
    int32_t phys_tid_19437 = global_tid_25532;
    int32_t phys_group_id_25537;
    
    phys_group_id_25537 = get_group_id(0);
    for (int32_t i_25538 = 0; i_25538 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16569 * n_16572,
                                          segmap_group_sizze_19427)) -
                   phys_group_id_25537, sext_i64_i32(num_groups_19428));
         i_25538++) {
        int32_t virt_group_id_25539 = phys_group_id_25537 + i_25538 *
                sext_i64_i32(num_groups_19428);
        int64_t global_tid_25540 = sext_i32_i64(virt_group_id_25539) *
                segmap_group_sizze_19427 + sext_i32_i64(local_tid_25533);
        int64_t slice_25541 = n_16572;
        int64_t slice_25542 = k_16569 * slice_25541;
        int64_t gtid_19435 = squot64(global_tid_25540, slice_25541);
        int64_t remnant_25543 = global_tid_25540 - gtid_19435 * slice_25541;
        int64_t gtid_19436 = remnant_25543;
        int64_t remnant_25544 = remnant_25543 - gtid_19436;
        
        if (slt64(gtid_19435, k_16569) && slt64(gtid_19436, n_16572)) {
            for (int64_t i_23942 = 0; i_23942 < d_16570; i_23942++) {
                double defunc_2_reduce_res_19442;
                double redout_23944 = 0.0;
                
                for (int64_t i_23945 = 0; i_23945 < d_16570; i_23945++) {
                    double x_19446;
                    
                    x_19446 = ((__global double *) ext_mem_24079)[gtid_19435 *
                                                                  (n_16572 *
                                                                   d_16570) +
                                                                  i_23945 *
                                                                  n_16572 +
                                                                  gtid_19436];
                    
                    double x_19447;
                    
                    x_19447 = ((__global double *) mem_24148)[gtid_19435 *
                                                              (d_16570 *
                                                               d_16570) +
                                                              i_23942 *
                                                              d_16570 +
                                                              i_23945];
                    
                    double defunc_1_f_res_19448 = x_19446 * x_19447;
                    double defunc_1_op_res_19445 = defunc_1_f_res_19448 +
                           redout_23944;
                    double redout_tmp_25546 = defunc_1_op_res_19445;
                    
                    redout_23944 = redout_tmp_25546;
                }
                defunc_2_reduce_res_19442 = redout_23944;
                ((__global double *) color_25325)[phys_tid_19437 + i_23942 *
                                                  num_threads_25389] =
                    defunc_2_reduce_res_19442;
            }
            for (int64_t i_25547 = 0; i_25547 < d_16570; i_25547++) {
                double tmp_25548;
                
                tmp_25548 = ((__global double *) color_25325)[phys_tid_19437 +
                                                              i_25547 *
                                                              num_threads_25389];
                ((__global double *) mem_24168)[gtid_19435 * n_16572 +
                                                gtid_19436 + i_25547 *
                                                (n_16572 * k_16569)] =
                    tmp_25548;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_19427
}
__kernel void calculate_jacobianzisegmap_19526(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t n_16572,
                                               int64_t num_groups_19522,
                                               int64_t num_threads_25393,
                                               __global
                                               unsigned char *mem_24397,
                                               __global
                                               unsigned char *mem_24416,
                                               __global
                                               unsigned char *color_25340)
{
    #define segmap_group_sizze_19521 (calculate_jacobianzisegmap_group_sizze_19504)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25734;
    int32_t local_tid_25735;
    int64_t group_sizze_25738;
    int32_t wave_sizze_25737;
    int32_t group_tid_25736;
    
    global_tid_25734 = get_global_id(0);
    local_tid_25735 = get_local_id(0);
    group_sizze_25738 = get_local_size(0);
    wave_sizze_25737 = LOCKSTEP_WIDTH;
    group_tid_25736 = get_group_id(0);
    
    int32_t phys_tid_19526 = global_tid_25734;
    int32_t phys_group_id_25739;
    
    phys_group_id_25739 = get_group_id(0);
    for (int32_t i_25740 = 0; i_25740 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16569, segmap_group_sizze_19521)) -
                   phys_group_id_25739, sext_i64_i32(num_groups_19522));
         i_25740++) {
        int32_t virt_group_id_25741 = phys_group_id_25739 + i_25740 *
                sext_i64_i32(num_groups_19522);
        int64_t global_tid_25742 = sext_i32_i64(virt_group_id_25741) *
                segmap_group_sizze_19521 + sext_i32_i64(local_tid_25735);
        int64_t slice_25743 = k_16569;
        int64_t gtid_19525 = global_tid_25742;
        int64_t remnant_25744 = global_tid_25742 - gtid_19525;
        
        if (slt64(gtid_19525, k_16569)) {
            for (int64_t i_23948 = 0; i_23948 < n_16572; i_23948++) {
                double defunc_2_reduce_res_19530;
                double redout_23950 = 0.0;
                
                for (int64_t i_23951 = 0; i_23951 < d_16570; i_23951++) {
                    double x_19534;
                    
                    x_19534 = ((__global double *) mem_24397)[i_23948 *
                                                              (k_16569 *
                                                               d_16570) +
                                                              i_23951 *
                                                              k_16569 +
                                                              gtid_19525];
                    
                    double defunc_0_f_res_19535 = x_19534 * x_19534;
                    double defunc_1_op_res_19533 = defunc_0_f_res_19535 +
                           redout_23950;
                    double redout_tmp_25746 = defunc_1_op_res_19533;
                    
                    redout_23950 = redout_tmp_25746;
                }
                defunc_2_reduce_res_19530 = redout_23950;
                ((__global double *) color_25340)[phys_tid_19526 + i_23948 *
                                                  num_threads_25393] =
                    defunc_2_reduce_res_19530;
            }
            for (int64_t i_25747 = 0; i_25747 < n_16572; i_25747++) {
                double tmp_25748;
                
                tmp_25748 = ((__global double *) color_25340)[phys_tid_19526 +
                                                              i_25747 *
                                                              num_threads_25393];
                ((__global double *) mem_24416)[gtid_19525 + i_25747 *
                                                k_16569] = tmp_25748;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_19521
}
__kernel void calculate_jacobianzisegmap_19611(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t n_16572, __global
                                               unsigned char *mem_24420,
                                               __global
                                               unsigned char *mem_24425)
{
    #define segmap_group_sizze_19602 (calculate_jacobianzisegmap_group_sizze_19541)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25749;
    int32_t local_tid_25750;
    int64_t group_sizze_25753;
    int32_t wave_sizze_25752;
    int32_t group_tid_25751;
    
    global_tid_25749 = get_global_id(0);
    local_tid_25750 = get_local_id(0);
    group_sizze_25753 = get_local_size(0);
    wave_sizze_25752 = LOCKSTEP_WIDTH;
    group_tid_25751 = get_group_id(0);
    
    int32_t phys_tid_19611 = global_tid_25749;
    int64_t global_tid_25754 = sext_i32_i64(group_tid_25751) *
            segmap_group_sizze_19602 + sext_i32_i64(local_tid_25750);
    int64_t slice_25755 = n_16572;
    int64_t slice_25756 = k_16569 * slice_25755;
    int64_t gtid_19609 = squot64(global_tid_25754, slice_25755);
    int64_t remnant_25757 = global_tid_25754 - gtid_19609 * slice_25755;
    int64_t gtid_19610 = remnant_25757;
    int64_t remnant_25758 = remnant_25757 - gtid_19610;
    
    if (slt64(gtid_19609, k_16569) && slt64(gtid_19610, n_16572)) {
        double defunc_2_reduce_res_19613;
        double redout_23952 = 0.0;
        
        for (int64_t i_23953 = 0; i_23953 < d_16570; i_23953++) {
            double x_19617;
            
            x_19617 = ((__global double *) mem_24420)[i_23953 * (n_16572 *
                                                                 k_16569) +
                                                      gtid_19609 * n_16572 +
                                                      gtid_19610];
            
            double defunc_0_f_res_19618 = x_19617 * x_19617;
            double defunc_1_op_res_19616 = defunc_0_f_res_19618 + redout_23952;
            double redout_tmp_25759 = defunc_1_op_res_19616;
            
            redout_23952 = redout_tmp_25759;
        }
        defunc_2_reduce_res_19613 = redout_23952;
        ((__global double *) mem_24425)[gtid_19609 * n_16572 + gtid_19610] =
            defunc_2_reduce_res_19613;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_19602
}
__kernel void calculate_jacobianzisegmap_19781(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               __global
                                               unsigned char *alphas_mem_24017,
                                               __global
                                               unsigned char *mem_24449,
                                               __global
                                               unsigned char *mem_24453,
                                               __global
                                               unsigned char *mem_24456)
{
    #define segmap_group_sizze_19776 (calculate_jacobianzisegmap_group_sizze_19681)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25868;
    int32_t local_tid_25869;
    int64_t group_sizze_25872;
    int32_t wave_sizze_25871;
    int32_t group_tid_25870;
    
    global_tid_25868 = get_global_id(0);
    local_tid_25869 = get_local_id(0);
    group_sizze_25872 = get_local_size(0);
    wave_sizze_25871 = LOCKSTEP_WIDTH;
    group_tid_25870 = get_group_id(0);
    
    int32_t phys_tid_19781 = global_tid_25868;
    int64_t global_tid_25873 = sext_i32_i64(group_tid_25870) *
            segmap_group_sizze_19776 + sext_i32_i64(local_tid_25869);
    int64_t slice_25874 = k_16569;
    int64_t gtid_19780 = global_tid_25873;
    int64_t remnant_25875 = global_tid_25873 - gtid_19780;
    
    if (slt64(gtid_19780, k_16569)) {
        double x_19783;
        
        x_19783 = ((__global double *) alphas_mem_24017)[gtid_19780];
        
        double defunc_2_reduce_res_19784;
        double redout_23956 = 0.0;
        
        for (int64_t i_23957 = 0; i_23957 < d_16570; i_23957++) {
            double x_19788;
            
            x_19788 = ((__global double *) mem_24449)[i_23957 * k_16569 +
                                                      gtid_19780];
            
            double defunc_1_op_res_19787 = x_19788 + redout_23956;
            double redout_tmp_25876 = defunc_1_op_res_19787;
            
            redout_23956 = redout_tmp_25876;
        }
        defunc_2_reduce_res_19784 = redout_23956;
        
        double defunc_0_f_res_19789;
        
        defunc_0_f_res_19789 = futrts_exp64(x_19783);
        ((__global double *) mem_24453)[gtid_19780] = defunc_0_f_res_19789;
        ((__global double *) mem_24456)[gtid_19780] = defunc_2_reduce_res_19784;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_19776
}
__kernel void calculate_jacobianzisegmap_19809(__global int *global_failure,
                                               int64_t k_16569, __global
                                               unsigned char *alphas_mem_24017,
                                               __global
                                               unsigned char *mem_24464)
{
    #define segmap_group_sizze_19805 (calculate_jacobianzisegmap_group_sizze_19712)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25945;
    int32_t local_tid_25946;
    int64_t group_sizze_25949;
    int32_t wave_sizze_25948;
    int32_t group_tid_25947;
    
    global_tid_25945 = get_global_id(0);
    local_tid_25946 = get_local_id(0);
    group_sizze_25949 = get_local_size(0);
    wave_sizze_25948 = LOCKSTEP_WIDTH;
    group_tid_25947 = get_group_id(0);
    
    int32_t phys_tid_19809 = global_tid_25945;
    int64_t global_tid_25950 = sext_i32_i64(group_tid_25947) *
            segmap_group_sizze_19805 + sext_i32_i64(local_tid_25946);
    int64_t slice_25951 = k_16569;
    int64_t gtid_19808 = global_tid_25950;
    int64_t remnant_25952 = global_tid_25950 - gtid_19808;
    
    if (slt64(gtid_19808, k_16569)) {
        double x_19810;
        
        x_19810 = ((__global double *) alphas_mem_24017)[gtid_19808];
        
        double defunc_0_f_res_19811;
        
        defunc_0_f_res_19811 = futrts_exp64(x_19810);
        ((__global double *) mem_24464)[gtid_19808] = defunc_0_f_res_19811;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_19805
}
__kernel void calculate_jacobianzisegmap_20420(__global int *global_failure,
                                               int64_t k_16569, int64_t n_16572,
                                               int64_t num_groups_20415,
                                               int64_t num_threads_25407,
                                               __global
                                               unsigned char *alphas_mem_24017,
                                               __global
                                               unsigned char *ext_mem_24437,
                                               __global
                                               unsigned char *ext_mem_24474,
                                               __global
                                               unsigned char *mem_24617,
                                               __global
                                               unsigned char *mem_24620,
                                               __global
                                               unsigned char *color_25345,
                                               __global
                                               unsigned char *color_25346,
                                               __global
                                               unsigned char *color_25347,
                                               __global
                                               unsigned char *color_25348)
{
    #define segmap_group_sizze_20414 (calculate_jacobianzisegmap_group_sizze_19947)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26062;
    int32_t local_tid_26063;
    int64_t group_sizze_26066;
    int32_t wave_sizze_26065;
    int32_t group_tid_26064;
    
    global_tid_26062 = get_global_id(0);
    local_tid_26063 = get_local_id(0);
    group_sizze_26066 = get_local_size(0);
    wave_sizze_26065 = LOCKSTEP_WIDTH;
    group_tid_26064 = get_group_id(0);
    
    int32_t phys_tid_20420 = global_tid_26062;
    int32_t phys_group_id_26067;
    
    phys_group_id_26067 = get_group_id(0);
    for (int32_t i_26068 = 0; i_26068 <
         sdiv_up32(sext_i64_i32(sdiv_up64(n_16572, segmap_group_sizze_20414)) -
                   phys_group_id_26067, sext_i64_i32(num_groups_20415));
         i_26068++) {
        int32_t virt_group_id_26069 = phys_group_id_26067 + i_26068 *
                sext_i64_i32(num_groups_20415);
        int64_t global_tid_26070 = sext_i32_i64(virt_group_id_26069) *
                segmap_group_sizze_20414 + sext_i32_i64(local_tid_26063);
        int64_t slice_26071 = n_16572;
        int64_t gtid_20419 = global_tid_26070;
        int64_t remnant_26072 = global_tid_26070 - gtid_20419;
        
        if (slt64(gtid_20419, n_16572)) {
            double defunc_2_reduce_res_20422;
            int64_t defunc_2_reduce_res_ind_20423;
            double redout_23979;
            int64_t redout_23980;
            
            redout_23979 = -INFINITY;
            redout_23980 = (int64_t) -1;
            for (int64_t i_23982 = 0; i_23982 < k_16569; i_23982++) {
                double x_20437;
                
                x_20437 = ((__global double *) ext_mem_24437)[i_23982 *
                                                              n_16572 +
                                                              gtid_20419];
                
                double x_wasfree_20438;
                
                x_wasfree_20438 = ((__global
                                    double *) alphas_mem_24017)[i_23982];
                
                double x_wasfree_20439;
                
                x_wasfree_20439 = ((__global double *) ext_mem_24474)[i_23982];
                
                double x_20441 = -0.5 * x_20437;
                double x_20442 = x_wasfree_20438 + x_20441;
                double defunc_0_f_res_20443 = x_wasfree_20439 + x_20442;
                bool cond_20429 = redout_23979 == defunc_0_f_res_20443;
                double idx_res_20430;
                int64_t idx_res_20431;
                
                if (cond_20429) {
                    int64_t x_20432 = smin64(redout_23980, i_23982);
                    
                    idx_res_20430 = redout_23979;
                    idx_res_20431 = x_20432;
                } else {
                    double y_20433 = fmax64(defunc_0_f_res_20443, redout_23979);
                    bool cond_20434 = redout_23979 == y_20433;
                    double x_20435;
                    
                    if (cond_20434) {
                        x_20435 = redout_23979;
                    } else {
                        x_20435 = defunc_0_f_res_20443;
                    }
                    
                    int64_t x_20436;
                    
                    if (cond_20434) {
                        x_20436 = redout_23980;
                    } else {
                        x_20436 = i_23982;
                    }
                    idx_res_20430 = x_20435;
                    idx_res_20431 = x_20436;
                }
                ((__global double *) color_25345)[phys_tid_20420 + i_23982 *
                                                  num_threads_25407] =
                    defunc_0_f_res_20443;
                
                double redout_tmp_26073 = idx_res_20430;
                int64_t redout_tmp_26074 = idx_res_20431;
                
                redout_23979 = redout_tmp_26073;
                redout_23980 = redout_tmp_26074;
            }
            defunc_2_reduce_res_20422 = redout_23979;
            defunc_2_reduce_res_ind_20423 = redout_23980;
            
            double defunc_2_reduce_res_20444;
            double redout_23984 = 0.0;
            
            for (int64_t i_23985 = 0; i_23985 < k_16569; i_23985++) {
                double x_20448;
                
                x_20448 = ((__global double *) color_25345)[phys_tid_20420 +
                                                            i_23985 *
                                                            num_threads_25407];
                
                double exp_arg_20449 = x_20448 - defunc_2_reduce_res_20422;
                double exp_res_20450;
                
                exp_res_20450 = futrts_exp64(exp_arg_20449);
                
                double defunc_1_op_res_20447 = exp_res_20450 + redout_23984;
                double redout_tmp_26076 = defunc_1_op_res_20447;
                
                redout_23984 = redout_tmp_26076;
            }
            defunc_2_reduce_res_20444 = redout_23984;
            
            double binop_y_20451 = 1.0 / defunc_2_reduce_res_20444;
            double defunc_2_reduce_res_contrib_sum_20452;
            double redout_23987 = 0.0;
            
            for (int64_t i_23989 = 0; i_23989 < k_16569; i_23989++) {
                double x_20457;
                
                x_20457 = ((__global double *) color_25345)[phys_tid_20420 +
                                                            i_23989 *
                                                            num_threads_25407];
                
                double exp_arg_20458 = x_20457 - defunc_2_reduce_res_20422;
                double binop_y_20459;
                
                binop_y_20459 = futrts_exp64(exp_arg_20458);
                
                double contrib_20460 = binop_y_20451 * binop_y_20459;
                double binop_y_adj_20461 = -1.0 * contrib_20460;
                double binlam_res_20456 = binop_y_adj_20461 + redout_23987;
                
                ((__global double *) color_25348)[phys_tid_20420 + i_23989 *
                                                  num_threads_25407] =
                    contrib_20460;
                
                double redout_tmp_26077 = binlam_res_20456;
                
                redout_23987 = redout_tmp_26077;
            }
            defunc_2_reduce_res_contrib_sum_20452 = redout_23987;
            
            double defunc_2_reduce_res_adj_20462 = 1.0 +
                   defunc_2_reduce_res_contrib_sum_20452;
            
            for (int64_t i_26079 = 0; i_26079 < k_16569; i_26079++) {
                ((__global double *) color_25347)[phys_tid_20420 + i_26079 *
                                                  num_threads_25407] = 0.0;
            }
            if (sle64((int64_t) 0, defunc_2_reduce_res_ind_20423) &&
                slt64(defunc_2_reduce_res_ind_20423, k_16569)) {
                ((__global double *) color_25347)[phys_tid_20420 +
                                                  defunc_2_reduce_res_ind_20423 *
                                                  num_threads_25407] =
                    defunc_2_reduce_res_adj_20462;
            }
            for (int64_t i_23995 = 0; i_23995 < k_16569; i_23995++) {
                double map_adj_p_20467;
                
                map_adj_p_20467 = ((__global
                                    double *) color_25347)[phys_tid_20420 +
                                                           i_23995 *
                                                           num_threads_25407];
                
                double map_adj_p_20468;
                
                map_adj_p_20468 = ((__global
                                    double *) color_25348)[phys_tid_20420 +
                                                           i_23995 *
                                                           num_threads_25407];
                
                double defunc_0_f_res_adj_20469 = map_adj_p_20467 +
                       map_adj_p_20468;
                double binop_y_adj_20470 = -0.5 * defunc_0_f_res_adj_20469;
                
                ((__global double *) color_25346)[phys_tid_20420 + i_23995 *
                                                  num_threads_25407] =
                    binop_y_adj_20470;
                ((__global double *) color_25345)[phys_tid_20420 + i_23995 *
                                                  num_threads_25407] =
                    defunc_0_f_res_adj_20469;
            }
            for (int64_t i_26082 = 0; i_26082 < k_16569; i_26082++) {
                double tmp_26083;
                
                tmp_26083 = ((__global double *) color_25345)[phys_tid_20420 +
                                                              i_26082 *
                                                              num_threads_25407];
                ((__global double *) mem_24617)[gtid_20419 + i_26082 *
                                                n_16572] = tmp_26083;
            }
            for (int64_t i_26084 = 0; i_26084 < k_16569; i_26084++) {
                double tmp_26085;
                
                tmp_26085 = ((__global double *) color_25346)[phys_tid_20420 +
                                                              i_26084 *
                                                              num_threads_25407];
                ((__global double *) mem_24620)[gtid_20419 + i_26084 *
                                                n_16572] = tmp_26085;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_20414
}
__kernel void calculate_jacobianzisegmap_20589(__global int *global_failure,
                                               int64_t n_16572, __global
                                               unsigned char *mem_24666,
                                               __global
                                               unsigned char *mem_24670)
{
    #define segmap_group_sizze_20585 (calculate_jacobianzisegmap_group_sizze_20216)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26274;
    int32_t local_tid_26275;
    int64_t group_sizze_26278;
    int32_t wave_sizze_26277;
    int32_t group_tid_26276;
    
    global_tid_26274 = get_global_id(0);
    local_tid_26275 = get_local_id(0);
    group_sizze_26278 = get_local_size(0);
    wave_sizze_26277 = LOCKSTEP_WIDTH;
    group_tid_26276 = get_group_id(0);
    
    int32_t phys_tid_20589 = global_tid_26274;
    int64_t global_tid_26279 = sext_i32_i64(group_tid_26276) *
            segmap_group_sizze_20585 + sext_i32_i64(local_tid_26275);
    int64_t slice_26280 = n_16572;
    int64_t gtid_20588 = global_tid_26279;
    int64_t remnant_26281 = global_tid_26279 - gtid_20588;
    
    if (slt64(gtid_20588, n_16572)) {
        double defunc_2_reduce_res_20590;
        
        defunc_2_reduce_res_20590 = ((__global double *) mem_24666)[gtid_20588];
        
        double binop_y_20591 = 1.0 / defunc_2_reduce_res_20590;
        
        ((__global double *) mem_24670)[gtid_20588] = binop_y_20591;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_20585
}
__kernel void calculate_jacobianzisegmap_20619(__global int *global_failure,
                                               int64_t k_16569, int64_t n_16572,
                                               int64_t num_groups_20615,
                                               int64_t num_threads_25417,
                                               __global
                                               unsigned char *mem_24658,
                                               __global
                                               unsigned char *mem_24674,
                                               __global
                                               unsigned char *mem_24685,
                                               __global
                                               unsigned char *color_25353)
{
    #define segmap_group_sizze_20614 (calculate_jacobianzisegmap_group_sizze_20173)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26350;
    int32_t local_tid_26351;
    int64_t group_sizze_26354;
    int32_t wave_sizze_26353;
    int32_t group_tid_26352;
    
    global_tid_26350 = get_global_id(0);
    local_tid_26351 = get_local_id(0);
    group_sizze_26354 = get_local_size(0);
    wave_sizze_26353 = LOCKSTEP_WIDTH;
    group_tid_26352 = get_group_id(0);
    
    int32_t phys_tid_20619 = global_tid_26350;
    int32_t phys_group_id_26355;
    
    phys_group_id_26355 = get_group_id(0);
    for (int32_t i_26356 = 0; i_26356 <
         sdiv_up32(sext_i64_i32(sdiv_up64(n_16572, segmap_group_sizze_20614)) -
                   phys_group_id_26355, sext_i64_i32(num_groups_20615));
         i_26356++) {
        int32_t virt_group_id_26357 = phys_group_id_26355 + i_26356 *
                sext_i64_i32(num_groups_20615);
        int64_t global_tid_26358 = sext_i32_i64(virt_group_id_26357) *
                segmap_group_sizze_20614 + sext_i32_i64(local_tid_26351);
        int64_t slice_26359 = n_16572;
        int64_t gtid_20618 = global_tid_26358;
        int64_t remnant_26360 = global_tid_26358 - gtid_20618;
        
        if (slt64(gtid_20618, n_16572)) {
            int64_t defunc_2_reduce_res_ind_20620;
            
            defunc_2_reduce_res_ind_20620 = ((__global
                                              int64_t *) mem_24658)[gtid_20618];
            
            double defunc_2_reduce_res_contrib_sum_20621;
            
            defunc_2_reduce_res_contrib_sum_20621 = ((__global
                                                      double *) mem_24674)[gtid_20618];
            
            double defunc_2_reduce_res_adj_20622 = 1.0 +
                   defunc_2_reduce_res_contrib_sum_20621;
            
            for (int64_t i_26361 = 0; i_26361 < k_16569; i_26361++) {
                ((__global double *) color_25353)[phys_tid_20619 + i_26361 *
                                                  num_threads_25417] = 0.0;
            }
            if (sle64((int64_t) 0, defunc_2_reduce_res_ind_20620) &&
                slt64(defunc_2_reduce_res_ind_20620, k_16569)) {
                ((__global double *) color_25353)[phys_tid_20619 +
                                                  defunc_2_reduce_res_ind_20620 *
                                                  num_threads_25417] =
                    defunc_2_reduce_res_adj_20622;
            }
            for (int64_t i_26362 = 0; i_26362 < k_16569; i_26362++) {
                double tmp_26363;
                
                tmp_26363 = ((__global double *) color_25353)[phys_tid_20619 +
                                                              i_26362 *
                                                              num_threads_25417];
                ((__global double *) mem_24685)[gtid_20618 + i_26362 *
                                                n_16572] = tmp_26363;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_20614
}
__kernel void calculate_jacobianzisegmap_20637(__global int *global_failure,
                                               int64_t k_16569, int64_t n_16572,
                                               __global
                                               unsigned char *mem_24678,
                                               __global
                                               unsigned char *mem_24685,
                                               __global
                                               unsigned char *mem_24690,
                                               __global
                                               unsigned char *mem_24694)
{
    #define segmap_group_sizze_20631 (calculate_jacobianzisegmap_group_sizze_20145)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26364;
    int32_t local_tid_26365;
    int64_t group_sizze_26368;
    int32_t wave_sizze_26367;
    int32_t group_tid_26366;
    
    global_tid_26364 = get_global_id(0);
    local_tid_26365 = get_local_id(0);
    group_sizze_26368 = get_local_size(0);
    wave_sizze_26367 = LOCKSTEP_WIDTH;
    group_tid_26366 = get_group_id(0);
    
    int32_t phys_tid_20637 = global_tid_26364;
    int64_t global_tid_26369 = sext_i32_i64(group_tid_26366) *
            segmap_group_sizze_20631 + sext_i32_i64(local_tid_26365);
    int64_t slice_26370 = k_16569;
    int64_t slice_26371 = n_16572 * slice_26370;
    int64_t gtid_20635 = squot64(global_tid_26369, slice_26370);
    int64_t remnant_26372 = global_tid_26369 - gtid_20635 * slice_26370;
    int64_t gtid_20636 = remnant_26372;
    int64_t remnant_26373 = remnant_26372 - gtid_20636;
    
    if (slt64(gtid_20635, n_16572) && slt64(gtid_20636, k_16569)) {
        double map_adj_p_20638;
        
        map_adj_p_20638 = ((__global double *) mem_24685)[gtid_20636 * n_16572 +
                                                          gtid_20635];
        
        double map_adj_p_20639;
        
        map_adj_p_20639 = ((__global double *) mem_24678)[gtid_20635 * k_16569 +
                                                          gtid_20636];
        
        double defunc_0_f_res_adj_20640 = map_adj_p_20638 + map_adj_p_20639;
        double binop_y_adj_20641 = -0.5 * defunc_0_f_res_adj_20640;
        
        ((__global double *) mem_24690)[gtid_20635 * k_16569 + gtid_20636] =
            binop_y_adj_20641;
        ((__global double *) mem_24694)[gtid_20635 * k_16569 + gtid_20636] =
            defunc_0_f_res_adj_20640;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_20631
}
__kernel void calculate_jacobianzisegmap_21210(__global int *global_failure,
                                               int64_t k_16569,
                                               double contrib_16716, __global
                                               unsigned char *alphas_mem_24017,
                                               __global
                                               unsigned char *ext_mem_24725,
                                               __global
                                               unsigned char *mem_24730)
{
    #define segmap_group_sizze_21206 (calculate_jacobianzisegmap_group_sizze_21195)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26422;
    int32_t local_tid_26423;
    int64_t group_sizze_26426;
    int32_t wave_sizze_26425;
    int32_t group_tid_26424;
    
    global_tid_26422 = get_global_id(0);
    local_tid_26423 = get_local_id(0);
    group_sizze_26426 = get_local_size(0);
    wave_sizze_26425 = LOCKSTEP_WIDTH;
    group_tid_26424 = get_group_id(0);
    
    int32_t phys_tid_21210 = global_tid_26422;
    int64_t global_tid_26427 = sext_i32_i64(group_tid_26424) *
            segmap_group_sizze_21206 + sext_i32_i64(local_tid_26423);
    int64_t slice_26428 = k_16569;
    int64_t gtid_21209 = global_tid_26427;
    int64_t remnant_26429 = global_tid_26427 - gtid_21209;
    
    if (slt64(gtid_21209, k_16569)) {
        double x_21211;
        
        x_21211 = ((__global double *) alphas_mem_24017)[gtid_21209];
        
        double y_21212;
        
        y_21212 = ((__global double *) ext_mem_24725)[gtid_21209];
        
        double binop_y_21213;
        
        binop_y_21213 = futrts_exp64(x_21211);
        
        double contrib_21214 = contrib_16716 * binop_y_21213;
        double binlam_res_21215 = y_21212 + contrib_21214;
        
        ((__global double *) mem_24730)[gtid_21209] = binlam_res_21215;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_21206
}
__kernel void calculate_jacobianzisegmap_21235(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t n_16572, __global
                                               unsigned char *ext_mem_24393,
                                               __global
                                               unsigned char *ext_mem_24724,
                                               __global
                                               unsigned char *mem_24736)
{
    #define segmap_group_sizze_21229 (calculate_jacobianzisegmap_group_sizze_21147)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26430;
    int32_t local_tid_26431;
    int64_t group_sizze_26434;
    int32_t wave_sizze_26433;
    int32_t group_tid_26432;
    
    global_tid_26430 = get_global_id(0);
    local_tid_26431 = get_local_id(0);
    group_sizze_26434 = get_local_size(0);
    wave_sizze_26433 = LOCKSTEP_WIDTH;
    group_tid_26432 = get_group_id(0);
    
    int32_t phys_tid_21235 = global_tid_26430;
    int64_t global_tid_26435 = sext_i32_i64(group_tid_26432) *
            segmap_group_sizze_21229 + sext_i32_i64(local_tid_26431);
    int64_t slice_26436 = d_16570;
    int64_t slice_26437 = n_16572 * slice_26436;
    int64_t slice_26438 = k_16569 * slice_26437;
    int64_t gtid_21232 = squot64(global_tid_26435, slice_26437);
    int64_t remnant_26439 = global_tid_26435 - gtid_21232 * slice_26437;
    int64_t gtid_21233 = squot64(remnant_26439, slice_26436);
    int64_t remnant_26440 = remnant_26439 - gtid_21233 * slice_26436;
    int64_t gtid_21234 = remnant_26440;
    int64_t remnant_26441 = remnant_26440 - gtid_21234;
    
    if ((slt64(gtid_21232, k_16569) && slt64(gtid_21233, n_16572)) &&
        slt64(gtid_21234, d_16570)) {
        double map_adj_p_21236;
        
        map_adj_p_21236 = ((__global double *) ext_mem_24724)[gtid_21233 *
                                                              k_16569 +
                                                              gtid_21232];
        
        double x_21237;
        
        x_21237 = ((__global double *) ext_mem_24393)[gtid_21232 * (d_16570 *
                                                                    n_16572) +
                                                      gtid_21233 * d_16570 +
                                                      gtid_21234];
        
        double binop_x_adj_21238 = map_adj_p_21236 * x_21237;
        double x_adj_21239 = binop_x_adj_21238 + binop_x_adj_21238;
        
        ((__global double *) mem_24736)[gtid_21232 * (d_16570 * n_16572) +
                                        gtid_21233 * d_16570 + gtid_21234] =
            x_adj_21239;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_21229
}
__kernel void calculate_jacobianzisegmap_21378(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t n_16572,
                                               int64_t num_groups_21374,
                                               __global
                                               unsigned char *mem_25139,
                                               __global
                                               unsigned char *mem_25156)
{
    #define segmap_group_sizze_21373 (calculate_jacobianzisegmap_group_sizze_21351)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26722;
    int32_t local_tid_26723;
    int64_t group_sizze_26726;
    int32_t wave_sizze_26725;
    int32_t group_tid_26724;
    
    global_tid_26722 = get_global_id(0);
    local_tid_26723 = get_local_id(0);
    group_sizze_26726 = get_local_size(0);
    wave_sizze_26725 = LOCKSTEP_WIDTH;
    group_tid_26724 = get_group_id(0);
    
    int32_t phys_tid_21378 = global_tid_26722;
    int32_t phys_group_id_26727;
    
    phys_group_id_26727 = get_group_id(0);
    for (int32_t i_26728 = 0; i_26728 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16569, segmap_group_sizze_21373)) -
                   phys_group_id_26727, sext_i64_i32(num_groups_21374));
         i_26728++) {
        int32_t virt_group_id_26729 = phys_group_id_26727 + i_26728 *
                sext_i64_i32(num_groups_21374);
        int64_t global_tid_26730 = sext_i32_i64(virt_group_id_26729) *
                segmap_group_sizze_21373 + sext_i32_i64(local_tid_26723);
        int64_t slice_26731 = k_16569;
        int64_t gtid_21377 = global_tid_26730;
        int64_t remnant_26732 = global_tid_26730 - gtid_21377;
        
        if (slt64(gtid_21377, k_16569)) {
            for (int64_t i_23999 = 0; i_23999 < d_16570; i_23999++) {
                double y_contrib_sum_21386;
                double redout_24000 = 0.0;
                
                for (int64_t i_24001 = 0; i_24001 < n_16572; i_24001++) {
                    double map_adj_p_21390;
                    
                    map_adj_p_21390 = ((__global double *) mem_25156)[i_23999 *
                                                                      (k_16569 *
                                                                       n_16572) +
                                                                      i_24001 *
                                                                      k_16569 +
                                                                      gtid_21377];
                    
                    double binop_y_adj_21391 = -1.0 * map_adj_p_21390;
                    double binlam_res_21389 = binop_y_adj_21391 + redout_24000;
                    double redout_tmp_26734 = binlam_res_21389;
                    
                    redout_24000 = redout_tmp_26734;
                }
                y_contrib_sum_21386 = redout_24000;
                // UpdateAcc
                {
                    int64_t idx_16914 = gtid_21377;
                    int64_t idx_16915 = i_23999;
                    
                    if ((sle64((int64_t) 0, gtid_21377) && slt64(gtid_21377,
                                                                 k_16569)) &&
                        (sle64((int64_t) 0, i_23999) && slt64(i_23999,
                                                              d_16570))) {
                        double x_16916;
                        double y_16917 = y_contrib_sum_21386;
                        double old_26735;
                        
                        old_26735 = atomic_fadd_f64_global(&((volatile __global
                                                              double *) mem_25139)[gtid_21377 *
                                                                                   d_16570 +
                                                                                   i_23999],
                                                           (double) y_16917);
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_21373
}
__kernel void calculate_jacobianzisegmap_21509(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t n_16572,
                                               int64_t num_groups_21500,
                                               __global
                                               unsigned char *mem_25135,
                                               __global
                                               unsigned char *mem_25139)
{
    #define segmap_group_sizze_21499 (calculate_jacobianzisegmap_group_sizze_21398)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26736;
    int32_t local_tid_26737;
    int64_t group_sizze_26740;
    int32_t wave_sizze_26739;
    int32_t group_tid_26738;
    
    global_tid_26736 = get_global_id(0);
    local_tid_26737 = get_local_id(0);
    group_sizze_26740 = get_local_size(0);
    wave_sizze_26739 = LOCKSTEP_WIDTH;
    group_tid_26738 = get_group_id(0);
    
    int32_t phys_tid_21509 = global_tid_26736;
    int32_t phys_group_id_26741;
    
    phys_group_id_26741 = get_group_id(0);
    for (int32_t i_26742 = 0; i_26742 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16569 * d_16570,
                                          segmap_group_sizze_21499)) -
                   phys_group_id_26741, sext_i64_i32(num_groups_21500));
         i_26742++) {
        int32_t virt_group_id_26743 = phys_group_id_26741 + i_26742 *
                sext_i64_i32(num_groups_21500);
        int64_t global_tid_26744 = sext_i32_i64(virt_group_id_26743) *
                segmap_group_sizze_21499 + sext_i32_i64(local_tid_26737);
        int64_t slice_26745 = d_16570;
        int64_t slice_26746 = k_16569 * slice_26745;
        int64_t gtid_21507 = squot64(global_tid_26744, slice_26745);
        int64_t remnant_26747 = global_tid_26744 - gtid_21507 * slice_26745;
        int64_t gtid_21508 = remnant_26747;
        int64_t remnant_26748 = remnant_26747 - gtid_21508;
        
        if (slt64(gtid_21507, k_16569) && slt64(gtid_21508, d_16570)) {
            double y_contrib_sum_21514;
            double redout_24002 = 0.0;
            
            for (int64_t i_24003 = 0; i_24003 < n_16572; i_24003++) {
                double map_adj_p_21518;
                
                map_adj_p_21518 = ((__global double *) mem_25135)[gtid_21507 *
                                                                  (d_16570 *
                                                                   n_16572) +
                                                                  i_24003 *
                                                                  d_16570 +
                                                                  gtid_21508];
                
                double binop_y_adj_21519 = -1.0 * map_adj_p_21518;
                double binlam_res_21517 = binop_y_adj_21519 + redout_24002;
                double redout_tmp_26749 = binlam_res_21517;
                
                redout_24002 = redout_tmp_26749;
            }
            y_contrib_sum_21514 = redout_24002;
            // UpdateAcc
            {
                int64_t idx_16914 = gtid_21507;
                int64_t idx_16915 = gtid_21508;
                
                if ((sle64((int64_t) 0, gtid_21507) && slt64(gtid_21507,
                                                             k_16569)) &&
                    (sle64((int64_t) 0, gtid_21508) && slt64(gtid_21508,
                                                             d_16570))) {
                    double x_16916;
                    double y_16917 = y_contrib_sum_21514;
                    double old_26750;
                    
                    old_26750 = atomic_fadd_f64_global(&((volatile __global
                                                          double *) mem_25139)[gtid_21507 *
                                                                               d_16570 +
                                                                               gtid_21508],
                                                       (double) y_16917);
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_21499
}
__kernel void calculate_jacobianzisegmap_21547(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t num_groups_21542,
                                               __global
                                               unsigned char *mem_25139,
                                               __global
                                               unsigned char *mem_25148)
{
    #define segmap_group_sizze_21541 (calculate_jacobianzisegmap_group_sizze_21428)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26751;
    int32_t local_tid_26752;
    int64_t group_sizze_26755;
    int32_t wave_sizze_26754;
    int32_t group_tid_26753;
    
    global_tid_26751 = get_global_id(0);
    local_tid_26752 = get_local_id(0);
    group_sizze_26755 = get_local_size(0);
    wave_sizze_26754 = LOCKSTEP_WIDTH;
    group_tid_26753 = get_group_id(0);
    
    int32_t phys_tid_21547 = global_tid_26751;
    int32_t phys_group_id_26756;
    
    phys_group_id_26756 = get_group_id(0);
    for (int32_t i_26757 = 0; i_26757 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16569 * d_16570,
                                          segmap_group_sizze_21541)) -
                   phys_group_id_26756, sext_i64_i32(num_groups_21542));
         i_26757++) {
        int32_t virt_group_id_26758 = phys_group_id_26756 + i_26757 *
                sext_i64_i32(num_groups_21542);
        int64_t global_tid_26759 = sext_i32_i64(virt_group_id_26758) *
                segmap_group_sizze_21541 + sext_i32_i64(local_tid_26752);
        int64_t slice_26760 = d_16570;
        int64_t slice_26761 = k_16569 * slice_26760;
        int64_t gtid_21545 = squot64(global_tid_26759, slice_26760);
        int64_t remnant_26762 = global_tid_26759 - gtid_21545 * slice_26760;
        int64_t gtid_21546 = remnant_26762;
        int64_t remnant_26763 = remnant_26762 - gtid_21546;
        
        if (slt64(gtid_21545, k_16569) && slt64(gtid_21546, d_16570)) {
            double y_contrib_sum_21551;
            
            y_contrib_sum_21551 = ((__global double *) mem_25148)[gtid_21545 *
                                                                  d_16570 +
                                                                  gtid_21546];
            // UpdateAcc
            {
                int64_t idx_16914 = gtid_21545;
                int64_t idx_16915 = gtid_21546;
                
                if ((sle64((int64_t) 0, gtid_21545) && slt64(gtid_21545,
                                                             k_16569)) &&
                    (sle64((int64_t) 0, gtid_21546) && slt64(gtid_21546,
                                                             d_16570))) {
                    double x_16916;
                    double y_16917 = y_contrib_sum_21551;
                    double old_26764;
                    
                    old_26764 = atomic_fadd_f64_global(&((volatile __global
                                                          double *) mem_25139)[gtid_21545 *
                                                                               d_16570 +
                                                                               gtid_21546],
                                                       (double) y_16917);
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_21541
}
__kernel void calculate_jacobianzisegmap_21892(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               double x_16616, __global
                                               unsigned char *ext_mem_24078,
                                               __global
                                               unsigned char *mem_25163,
                                               __global
                                               unsigned char *mem_25169)
{
    #define segmap_group_sizze_21886 (calculate_jacobianzisegmap_group_sizze_21825)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26767;
    int32_t local_tid_26768;
    int64_t group_sizze_26771;
    int32_t wave_sizze_26770;
    int32_t group_tid_26769;
    
    global_tid_26767 = get_global_id(0);
    local_tid_26768 = get_local_id(0);
    group_sizze_26771 = get_local_size(0);
    wave_sizze_26770 = LOCKSTEP_WIDTH;
    group_tid_26769 = get_group_id(0);
    
    int32_t phys_tid_21892 = global_tid_26767;
    int64_t global_tid_26772 = sext_i32_i64(group_tid_26769) *
            segmap_group_sizze_21886 + sext_i32_i64(local_tid_26768);
    int64_t slice_26773 = d_16570;
    int64_t slice_26774 = d_16570 * slice_26773;
    int64_t slice_26775 = k_16569 * slice_26774;
    int64_t gtid_21889 = squot64(global_tid_26772, slice_26774);
    int64_t remnant_26776 = global_tid_26772 - gtid_21889 * slice_26774;
    int64_t gtid_21890 = squot64(remnant_26776, slice_26773);
    int64_t remnant_26777 = remnant_26776 - gtid_21890 * slice_26773;
    int64_t gtid_21891 = remnant_26777;
    int64_t remnant_26778 = remnant_26777 - gtid_21891;
    
    if ((slt64(gtid_21889, k_16569) && slt64(gtid_21890, d_16570)) &&
        slt64(gtid_21891, d_16570)) {
        double x_21893;
        
        x_21893 = ((__global double *) ext_mem_24078)[gtid_21889 * (d_16570 *
                                                                    d_16570) +
                                                      gtid_21890 * d_16570 +
                                                      gtid_21891];
        
        double y_21894;
        
        y_21894 = ((__global double *) mem_25163)[gtid_21889 * (d_16570 *
                                                                d_16570) +
                                                  gtid_21890 * d_16570 +
                                                  gtid_21891];
        
        double binop_x_adj_21895 = x_16616 * x_21893;
        double x_adj_21896 = binop_x_adj_21895 + binop_x_adj_21895;
        double binlam_res_21897 = y_21894 + x_adj_21896;
        
        ((__global double *) mem_25169)[gtid_21889 * (d_16570 * d_16570) +
                                        gtid_21890 * d_16570 + gtid_21891] =
            binlam_res_21897;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_21886
}
__kernel void calculate_jacobianzisegmap_21949(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t dz2080U_16571,
                                               int64_t j_m_i_16598,
                                               int64_t num_groups_21942,
                                               __global
                                               unsigned char *icf_mem_24019,
                                               __global
                                               unsigned char *mem_25169,
                                               __global
                                               unsigned char *mem_25173,
                                               __global
                                               unsigned char *mem_25177)
{
    #define segmap_group_sizze_21941 (calculate_jacobianzisegmap_group_sizze_21598)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26784;
    int32_t local_tid_26785;
    int64_t group_sizze_26788;
    int32_t wave_sizze_26787;
    int32_t group_tid_26786;
    
    global_tid_26784 = get_global_id(0);
    local_tid_26785 = get_local_id(0);
    group_sizze_26788 = get_local_size(0);
    wave_sizze_26787 = LOCKSTEP_WIDTH;
    group_tid_26786 = get_group_id(0);
    
    int32_t phys_tid_21949 = global_tid_26784;
    int32_t phys_group_id_26789;
    
    phys_group_id_26789 = get_group_id(0);
    for (int32_t i_26790 = 0; i_26790 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16569 * d_16570 * d_16570,
                                          segmap_group_sizze_21941)) -
                   phys_group_id_26789, sext_i64_i32(num_groups_21942));
         i_26790++) {
        int32_t virt_group_id_26791 = phys_group_id_26789 + i_26790 *
                sext_i64_i32(num_groups_21942);
        int64_t global_tid_26792 = sext_i32_i64(virt_group_id_26791) *
                segmap_group_sizze_21941 + sext_i32_i64(local_tid_26785);
        int64_t slice_26793 = d_16570;
        int64_t slice_26794 = d_16570 * slice_26793;
        int64_t slice_26795 = k_16569 * slice_26794;
        int64_t gtid_21946 = squot64(global_tid_26792, slice_26794);
        int64_t remnant_26796 = global_tid_26792 - gtid_21946 * slice_26794;
        int64_t gtid_21947 = squot64(remnant_26796, slice_26793);
        int64_t remnant_26797 = remnant_26796 - gtid_21947 * slice_26793;
        int64_t gtid_21948 = remnant_26797;
        int64_t remnant_26798 = remnant_26797 - gtid_21948;
        
        if ((slt64(gtid_21946, k_16569) && slt64(gtid_21947, d_16570)) &&
            slt64(gtid_21948, d_16570)) {
            bool cond_21957 = slt64(gtid_21948, gtid_21947);
            
            if (!cond_21957) {
                double map_adj_p_21954;
                
                map_adj_p_21954 = ((__global double *) mem_25169)[gtid_21946 *
                                                                  (d_16570 *
                                                                   d_16570) +
                                                                  gtid_21947 *
                                                                  d_16570 +
                                                                  gtid_21948];
                
                bool cond_21960 = gtid_21948 == gtid_21947;
                
                if (cond_21960) {
                    double exp_arg_21967;
                    
                    exp_arg_21967 = ((__global
                                      double *) icf_mem_24019)[gtid_21946 *
                                                               dz2080U_16571 +
                                                               gtid_21948];
                    
                    double binop_y_21968;
                    
                    binop_y_21968 = futrts_exp64(exp_arg_21967);
                    
                    double contrib_21969 = map_adj_p_21954 * binop_y_21968;
                    
                    // UpdateAcc
                    {
                        int64_t idx_21913 = gtid_21946;
                        int64_t idx_21914 = gtid_21948;
                        
                        if ((sle64((int64_t) 0, gtid_21946) && slt64(gtid_21946,
                                                                     k_16569)) &&
                            (sle64((int64_t) 0, gtid_21948) && slt64(gtid_21948,
                                                                     d_16570))) {
                            double x_21915;
                            double y_21916 = contrib_21969;
                            double old_26799;
                            
                            old_26799 =
                                atomic_fadd_f64_global(&((volatile __global
                                                          double *) mem_25173)[gtid_21946 *
                                                                               d_16570 +
                                                                               gtid_21948],
                                                       (double) y_21916);
                        }
                    }
                } else {
                    int64_t x_21971 = mul64(d_16570, gtid_21947);
                    int64_t x_21972 = add64(gtid_21948, x_21971);
                    int64_t x_21973 = sub64(x_21972, gtid_21947);
                    int64_t x_21974 = sub64(x_21973, (int64_t) 1);
                    int64_t y_21975 = add64((int64_t) 1, gtid_21947);
                    int64_t x_21976 = mul64(gtid_21947, y_21975);
                    int64_t y_21977 = sdiv64(x_21976, (int64_t) 2);
                    int64_t i_21978 = sub64(x_21974, y_21977);
                    
                    // UpdateAcc
                    {
                        int64_t idx_21918 = gtid_21946;
                        int64_t idx_21919 = i_21978;
                        
                        if ((sle64((int64_t) 0, gtid_21946) && slt64(gtid_21946,
                                                                     k_16569)) &&
                            (sle64((int64_t) 0, i_21978) && slt64(i_21978,
                                                                  j_m_i_16598))) {
                            double x_21920;
                            double y_21921 = map_adj_p_21954;
                            double old_26800;
                            
                            old_26800 =
                                atomic_fadd_f64_global(&((volatile __global
                                                          double *) mem_25177)[gtid_21946 *
                                                                               j_m_i_16598 +
                                                                               i_21978],
                                                       (double) y_21921);
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_21941
}
__kernel void calculate_jacobianzisegmap_22039(__global int *global_failure,
                                               int64_t k_16569,
                                               double binop_y_adj_16713,
                                               __global
                                               unsigned char *ext_mem_24726,
                                               __global
                                               unsigned char *mem_25186)
{
    #define segmap_group_sizze_22035 (calculate_jacobianzisegmap_group_sizze_22027)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26813;
    int32_t local_tid_26814;
    int64_t group_sizze_26817;
    int32_t wave_sizze_26816;
    int32_t group_tid_26815;
    
    global_tid_26813 = get_global_id(0);
    local_tid_26814 = get_local_id(0);
    group_sizze_26817 = get_local_size(0);
    wave_sizze_26816 = LOCKSTEP_WIDTH;
    group_tid_26815 = get_group_id(0);
    
    int32_t phys_tid_22039 = global_tid_26813;
    int64_t global_tid_26818 = sext_i32_i64(group_tid_26815) *
            segmap_group_sizze_22035 + sext_i32_i64(local_tid_26814);
    int64_t slice_26819 = k_16569;
    int64_t gtid_22038 = global_tid_26818;
    int64_t remnant_26820 = global_tid_26818 - gtid_22038;
    
    if (slt64(gtid_22038, k_16569)) {
        double y_22040;
        
        y_22040 = ((__global double *) ext_mem_24726)[gtid_22038];
        
        double binlam_res_22041 = binop_y_adj_16713 + y_22040;
        
        ((__global double *) mem_25186)[gtid_22038] = binlam_res_22041;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_22035
}
__kernel void calculate_jacobianzisegmap_22053(__global int *global_failure,
                                               int64_t k_16569, int64_t d_16570,
                                               int64_t dz2080U_16571, __global
                                               unsigned char *mem_25173,
                                               __global
                                               unsigned char *mem_25182,
                                               __global
                                               unsigned char *mem_25186,
                                               __global
                                               unsigned char *mem_25191)
{
    #define segmap_group_sizze_22048 (calculate_jacobianzisegmap_group_sizze_22000)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26821;
    int32_t local_tid_26822;
    int64_t group_sizze_26825;
    int32_t wave_sizze_26824;
    int32_t group_tid_26823;
    
    global_tid_26821 = get_global_id(0);
    local_tid_26822 = get_local_id(0);
    group_sizze_26825 = get_local_size(0);
    wave_sizze_26824 = LOCKSTEP_WIDTH;
    group_tid_26823 = get_group_id(0);
    
    int32_t phys_tid_22053 = global_tid_26821;
    int64_t global_tid_26826 = sext_i32_i64(group_tid_26823) *
            segmap_group_sizze_22048 + sext_i32_i64(local_tid_26822);
    int64_t slice_26827 = d_16570;
    int64_t slice_26828 = k_16569 * slice_26827;
    int64_t gtid_22051 = squot64(global_tid_26826, slice_26827);
    int64_t remnant_26829 = global_tid_26826 - gtid_22051 * slice_26827;
    int64_t gtid_22052 = remnant_26829;
    int64_t remnant_26830 = remnant_26829 - gtid_22052;
    
    if (slt64(gtid_22051, k_16569) && slt64(gtid_22052, d_16570)) {
        double binlam_res_22054;
        
        binlam_res_22054 = ((__global double *) mem_25186)[gtid_22051];
        
        double y_22055;
        
        y_22055 = ((__global double *) mem_25173)[gtid_22051 * d_16570 +
                                                  gtid_22052];
        
        double x_22056;
        
        x_22056 = ((__global double *) mem_25182)[gtid_22051 * dz2080U_16571 +
                                                  gtid_22052];
        
        double binlam_res_22057 = binlam_res_22054 + y_22055;
        double binlam_res_22058 = x_22056 + binlam_res_22057;
        
        ((__global double *) mem_25191)[gtid_22051 * d_16570 + gtid_22052] =
            binlam_res_22058;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_22048
}
__kernel void calculate_jacobianzisegmap_intragroup_18593(__global
                                                          int *global_failure,
                                                          int failure_is_an_option,
                                                          __global
                                                          int64_t *global_failure_args,
                                                          uint color_25321_backing_offset_0,
                                                          uint color_25320_backing_offset_1,
                                                          int64_t k_16569,
                                                          int64_t d_16570,
                                                          int64_t dz2080U_16571,
                                                          int64_t n_16572,
                                                          int64_t j_m_i_16598,
                                                          int64_t computed_group_sizze_18513,
                                                          __global
                                                          unsigned char *means_mem_24018,
                                                          __global
                                                          unsigned char *icf_mem_24019,
                                                          __global
                                                          unsigned char *x_mem_24020,
                                                          __global
                                                          unsigned char *mem_24036,
                                                          __global
                                                          unsigned char *mem_24041)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *color_25321_backing_1 =
                           &shared_mem[color_25321_backing_offset_0];
    volatile unsigned char *color_25320_backing_0 =
                           &shared_mem[color_25320_backing_offset_1];
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_25444;
    int32_t local_tid_25445;
    int64_t group_sizze_25448;
    int32_t wave_sizze_25447;
    int32_t group_tid_25446;
    
    global_tid_25444 = get_global_id(0);
    local_tid_25445 = get_local_id(0);
    group_sizze_25448 = get_local_size(0);
    wave_sizze_25447 = LOCKSTEP_WIDTH;
    group_tid_25446 = get_group_id(0);
    
    int32_t phys_tid_18593 = group_tid_25446;
    int64_t slice_25451 = d_16570;
    int64_t slice_25452 = d_16570 * slice_25451;
    int64_t ltid_pre_25449 = squot64(sext_i32_i64(local_tid_25445),
                                     slice_25451);
    int64_t remnant_25453 = sext_i32_i64(local_tid_25445) - ltid_pre_25449 *
            slice_25451;
    int64_t ltid_pre_25450 = remnant_25453;
    int64_t remnant_25454 = remnant_25453 - ltid_pre_25450;
    int64_t slice_25457 = n_16572;
    int64_t slice_25458 = d_16570 * slice_25457;
    int64_t ltid_pre_25455 = squot64(sext_i32_i64(local_tid_25445),
                                     slice_25457);
    int64_t remnant_25459 = sext_i32_i64(local_tid_25445) - ltid_pre_25455 *
            slice_25457;
    int64_t ltid_pre_25456 = remnant_25459;
    int64_t remnant_25460 = remnant_25459 - ltid_pre_25456;
    int64_t slice_25461 = k_16569;
    int64_t gtid_18592 = sext_i32_i64(group_tid_25446);
    int64_t remnant_25462 = sext_i32_i64(group_tid_25446) - gtid_18592;
    __local unsigned char *color_25320;
    
    color_25320 = (__local unsigned char *) color_25320_backing_0;
    
    __local unsigned char *color_25321;
    
    color_25321 = (__local unsigned char *) color_25321_backing_1;
    
    int64_t gtid_18603 = sext_i32_i64(sext_i64_i32(ltid_pre_25449));
    int64_t gtid_18604 = sext_i32_i64(sext_i64_i32(ltid_pre_25450));
    int32_t phys_tid_18605 = local_tid_25445;
    
    if (slt64(gtid_18603, d_16570) && slt64(gtid_18604, d_16570)) {
        bool cond_18608 = slt64(gtid_18604, gtid_18603);
        double defunc_0_f_res_18609;
        
        if (cond_18608) {
            defunc_0_f_res_18609 = 0.0;
        } else {
            bool cond_18610 = gtid_18604 == gtid_18603;
            double defunc_0_f_res_f_res_18611;
            
            if (cond_18610) {
                double exp_arg_18616;
                
                exp_arg_18616 = ((__global double *) icf_mem_24019)[gtid_18592 *
                                                                    dz2080U_16571 +
                                                                    gtid_18604];
                
                double exp_res_18617;
                
                exp_res_18617 = futrts_exp64(exp_arg_18616);
                defunc_0_f_res_f_res_18611 = exp_res_18617;
            } else {
                int64_t x_18618 = mul64(d_16570, gtid_18603);
                int64_t x_18619 = add64(gtid_18604, x_18618);
                int64_t x_18620 = sub64(x_18619, gtid_18603);
                int64_t x_18621 = sub64(x_18620, (int64_t) 1);
                int64_t y_18622 = add64((int64_t) 1, gtid_18603);
                int64_t x_18623 = mul64(gtid_18603, y_18622);
                int64_t y_18624 = sdiv64(x_18623, (int64_t) 2);
                int64_t i_18625 = sub64(x_18621, y_18624);
                bool x_18626 = sle64((int64_t) 0, i_18625);
                bool y_18627 = slt64(i_18625, j_m_i_16598);
                bool bounds_check_18628 = x_18626 && y_18627;
                bool index_certs_18629;
                
                if (!bounds_check_18628) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 0) ==
                            -1) {
                            global_failure_args[0] = (int64_t) i_18625;
                            global_failure_args[1] = (int64_t) j_m_i_16598;
                            ;
                        }
                        local_failure = true;
                        goto error_0;
                    }
                }
                
                int64_t slice_22096 = d_16570 + i_18625;
                double defunc_0_f_res_f_res_f_res_18630;
                
                defunc_0_f_res_f_res_f_res_18630 = ((__global
                                                     double *) icf_mem_24019)[gtid_18592 *
                                                                              dz2080U_16571 +
                                                                              slice_22096];
                defunc_0_f_res_f_res_18611 = defunc_0_f_res_f_res_f_res_18630;
            }
            defunc_0_f_res_18609 = defunc_0_f_res_f_res_18611;
        }
        ((__local double *) color_25321)[gtid_18603 * d_16570 + gtid_18604] =
            defunc_0_f_res_18609;
    }
    
  error_0:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t gtid_18643 = sext_i32_i64(sext_i64_i32(ltid_pre_25455));
    int64_t gtid_18644 = sext_i32_i64(sext_i64_i32(ltid_pre_25456));
    int32_t phys_tid_18645 = local_tid_25445;
    
    if (slt64(gtid_18643, d_16570) && slt64(gtid_18644, n_16572)) {
        double y_18648;
        
        y_18648 = ((__global double *) means_mem_24018)[gtid_18592 * d_16570 +
                                                        gtid_18643];
        
        double x_18655;
        
        x_18655 = ((__global double *) x_mem_24020)[gtid_18644 * d_16570 +
                                                    gtid_18643];
        
        double defunc_0_f_res_18656 = x_18655 - y_18648;
        
        ((__local double *) color_25320)[gtid_18643 * n_16572 + gtid_18644] =
            defunc_0_f_res_18656;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_25463 = 0; i_25463 < sdiv_up64(d_16570 * n_16572 -
                                                  sext_i32_i64(local_tid_25445),
                                                  computed_group_sizze_18513);
         i_25463++) {
        double tmp_25464;
        
        tmp_25464 = ((__local double *) color_25320)[squot64(i_25463 *
                                                             computed_group_sizze_18513 +
                                                             sext_i32_i64(local_tid_25445),
                                                             n_16572) *
                                                     n_16572 + (i_25463 *
                                                                computed_group_sizze_18513 +
                                                                sext_i32_i64(local_tid_25445) -
                                                                squot64(i_25463 *
                                                                        computed_group_sizze_18513 +
                                                                        sext_i32_i64(local_tid_25445),
                                                                        n_16572) *
                                                                n_16572)];
        ((__global double *) mem_24036)[gtid_18592 * (n_16572 * d_16570) +
                                        squot64(i_25463 *
                                                computed_group_sizze_18513 +
                                                sext_i32_i64(local_tid_25445),
                                                n_16572) * n_16572 + (i_25463 *
                                                                      computed_group_sizze_18513 +
                                                                      sext_i32_i64(local_tid_25445) -
                                                                      squot64(i_25463 *
                                                                              computed_group_sizze_18513 +
                                                                              sext_i32_i64(local_tid_25445),
                                                                              n_16572) *
                                                                      n_16572)] =
            tmp_25464;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_25465 = 0; i_25465 < sdiv_up64(d_16570 * d_16570 -
                                                  sext_i32_i64(local_tid_25445),
                                                  computed_group_sizze_18513);
         i_25465++) {
        double tmp_25466;
        
        tmp_25466 = ((__local double *) color_25321)[squot64(i_25465 *
                                                             computed_group_sizze_18513 +
                                                             sext_i32_i64(local_tid_25445),
                                                             d_16570) *
                                                     d_16570 + (i_25465 *
                                                                computed_group_sizze_18513 +
                                                                sext_i32_i64(local_tid_25445) -
                                                                squot64(i_25465 *
                                                                        computed_group_sizze_18513 +
                                                                        sext_i32_i64(local_tid_25445),
                                                                        d_16570) *
                                                                d_16570)];
        ((__global double *) mem_24041)[gtid_18592 * (d_16570 * d_16570) +
                                        squot64(i_25465 *
                                                computed_group_sizze_18513 +
                                                sext_i32_i64(local_tid_25445),
                                                d_16570) * d_16570 + (i_25465 *
                                                                      computed_group_sizze_18513 +
                                                                      sext_i32_i64(local_tid_25445) -
                                                                      squot64(i_25465 *
                                                                              computed_group_sizze_18513 +
                                                                              sext_i32_i64(local_tid_25445),
                                                                              d_16570) *
                                                                      d_16570)] =
            tmp_25466;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void calculate_jacobianzisegmap_intragroup_19078(__global
                                                          int *global_failure,
                                                          int failure_is_an_option,
                                                          __global
                                                          int64_t *global_failure_args,
                                                          uint color_25323_backing_offset_0,
                                                          uint color_25322_backing_offset_1,
                                                          int64_t k_16569,
                                                          int64_t d_16570,
                                                          int64_t dz2080U_16571,
                                                          int64_t n_16572,
                                                          int64_t j_m_i_16598,
                                                          int64_t computed_group_sizze_19064,
                                                          __global
                                                          unsigned char *means_mem_24018,
                                                          __global
                                                          unsigned char *icf_mem_24019,
                                                          __global
                                                          unsigned char *x_mem_24020,
                                                          __global
                                                          unsigned char *mem_24055,
                                                          __global
                                                          unsigned char *mem_24060)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *color_25323_backing_1 =
                           &shared_mem[color_25323_backing_offset_0];
    volatile unsigned char *color_25322_backing_0 =
                           &shared_mem[color_25322_backing_offset_1];
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_25467;
    int32_t local_tid_25468;
    int64_t group_sizze_25471;
    int32_t wave_sizze_25470;
    int32_t group_tid_25469;
    
    global_tid_25467 = get_global_id(0);
    local_tid_25468 = get_local_id(0);
    group_sizze_25471 = get_local_size(0);
    wave_sizze_25470 = LOCKSTEP_WIDTH;
    group_tid_25469 = get_group_id(0);
    
    int32_t phys_tid_19078 = group_tid_25469;
    int64_t slice_25473 = d_16570;
    int64_t ltid_pre_25472 = sext_i32_i64(local_tid_25468);
    int64_t remnant_25474 = sext_i32_i64(local_tid_25468) - ltid_pre_25472;
    int64_t slice_25476 = n_16572;
    int64_t ltid_pre_25475 = sext_i32_i64(local_tid_25468);
    int64_t remnant_25477 = sext_i32_i64(local_tid_25468) - ltid_pre_25475;
    int64_t slice_25478 = d_16570;
    int64_t slice_25479 = k_16569 * slice_25478;
    int64_t gtid_19076 = squot64(sext_i32_i64(group_tid_25469), slice_25478);
    int64_t remnant_25480 = sext_i32_i64(group_tid_25469) - gtid_19076 *
            slice_25478;
    int64_t gtid_19077 = remnant_25480;
    int64_t remnant_25481 = remnant_25480 - gtid_19077;
    __local unsigned char *color_25322;
    
    color_25322 = (__local unsigned char *) color_25322_backing_0;
    
    __local unsigned char *color_25323;
    
    color_25323 = (__local unsigned char *) color_25323_backing_1;
    
    int64_t gtid_19087 = sext_i32_i64(sext_i64_i32(ltid_pre_25472));
    int32_t phys_tid_19088 = local_tid_25468;
    
    if (slt64(gtid_19087, d_16570)) {
        bool cond_19090 = slt64(gtid_19087, gtid_19077);
        double defunc_0_f_res_19091;
        
        if (cond_19090) {
            defunc_0_f_res_19091 = 0.0;
        } else {
            bool cond_19092 = gtid_19087 == gtid_19077;
            double defunc_0_f_res_f_res_19093;
            
            if (cond_19092) {
                double exp_arg_19098;
                
                exp_arg_19098 = ((__global double *) icf_mem_24019)[gtid_19076 *
                                                                    dz2080U_16571 +
                                                                    gtid_19087];
                
                double exp_res_19099;
                
                exp_res_19099 = futrts_exp64(exp_arg_19098);
                defunc_0_f_res_f_res_19093 = exp_res_19099;
            } else {
                int64_t x_19100 = mul64(d_16570, gtid_19077);
                int64_t x_19101 = add64(gtid_19087, x_19100);
                int64_t x_19102 = sub64(x_19101, gtid_19077);
                int64_t x_19103 = sub64(x_19102, (int64_t) 1);
                int64_t y_19104 = add64((int64_t) 1, gtid_19077);
                int64_t x_19105 = mul64(gtid_19077, y_19104);
                int64_t y_19106 = sdiv64(x_19105, (int64_t) 2);
                int64_t i_19107 = sub64(x_19103, y_19106);
                bool x_19108 = sle64((int64_t) 0, i_19107);
                bool y_19109 = slt64(i_19107, j_m_i_16598);
                bool bounds_check_19110 = x_19108 && y_19109;
                bool index_certs_19111;
                
                if (!bounds_check_19110) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 1) ==
                            -1) {
                            global_failure_args[0] = (int64_t) i_19107;
                            global_failure_args[1] = (int64_t) j_m_i_16598;
                            ;
                        }
                        local_failure = true;
                        goto error_0;
                    }
                }
                
                int64_t slice_22105 = d_16570 + i_19107;
                double defunc_0_f_res_f_res_f_res_19112;
                
                defunc_0_f_res_f_res_f_res_19112 = ((__global
                                                     double *) icf_mem_24019)[gtid_19076 *
                                                                              dz2080U_16571 +
                                                                              slice_22105];
                defunc_0_f_res_f_res_19093 = defunc_0_f_res_f_res_f_res_19112;
            }
            defunc_0_f_res_19091 = defunc_0_f_res_f_res_19093;
        }
        ((__local double *) color_25323)[gtid_19087] = defunc_0_f_res_19091;
    }
    
  error_0:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    double y_19118;
    
    y_19118 = ((__global double *) means_mem_24018)[gtid_19076 * d_16570 +
                                                    gtid_19077];
    
    int64_t gtid_19120 = sext_i32_i64(sext_i64_i32(ltid_pre_25475));
    int32_t phys_tid_19121 = local_tid_25468;
    
    if (slt64(gtid_19120, n_16572)) {
        double x_19128;
        
        x_19128 = ((__global double *) x_mem_24020)[gtid_19120 * d_16570 +
                                                    gtid_19077];
        
        double defunc_0_f_res_19129 = x_19128 - y_19118;
        
        ((__local double *) color_25322)[gtid_19120] = defunc_0_f_res_19129;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_25482 = 0; i_25482 < sdiv_up64(n_16572 -
                                                  sext_i32_i64(local_tid_25468),
                                                  computed_group_sizze_19064);
         i_25482++) {
        double tmp_25483;
        
        tmp_25483 = ((__local double *) color_25322)[i_25482 *
                                                     computed_group_sizze_19064 +
                                                     sext_i32_i64(local_tid_25468)];
        ((__global double *) mem_24055)[gtid_19076 * (n_16572 * d_16570) +
                                        gtid_19077 * n_16572 + (i_25482 *
                                                                computed_group_sizze_19064 +
                                                                sext_i32_i64(local_tid_25468))] =
            tmp_25483;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_25484 = 0; i_25484 < sdiv_up64(d_16570 -
                                                  sext_i32_i64(local_tid_25468),
                                                  computed_group_sizze_19064);
         i_25484++) {
        double tmp_25485;
        
        tmp_25485 = ((__local double *) color_25323)[i_25484 *
                                                     computed_group_sizze_19064 +
                                                     sext_i32_i64(local_tid_25468)];
        ((__global double *) mem_24060)[gtid_19076 * (d_16570 * d_16570) +
                                        gtid_19077 * d_16570 + (i_25484 *
                                                                computed_group_sizze_19064 +
                                                                sext_i32_i64(local_tid_25468))] =
            tmp_25485;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void calculate_jacobianzisegmap_intragroup_20476(__global
                                                          int *global_failure,
                                                          uint red_arr_mem_26106_backing_offset_0,
                                                          uint red_arr_mem_26102_backing_offset_1,
                                                          uint red_arr_mem_26098_backing_offset_2,
                                                          uint red_arr_mem_26096_backing_offset_3,
                                                          uint color_25352_backing_offset_4,
                                                          uint color_25351_backing_offset_5,
                                                          uint color_25350_backing_offset_6,
                                                          uint color_25349_backing_offset_7,
                                                          int64_t k_16569,
                                                          int64_t n_16572,
                                                          __global
                                                          unsigned char *alphas_mem_24017,
                                                          __global
                                                          unsigned char *ext_mem_24437,
                                                          __global
                                                          unsigned char *ext_mem_24474,
                                                          __global
                                                          unsigned char *mem_24644,
                                                          __global
                                                          unsigned char *mem_24648)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26106_backing_7 =
                           &shared_mem[red_arr_mem_26106_backing_offset_0];
    volatile unsigned char *red_arr_mem_26102_backing_6 =
                           &shared_mem[red_arr_mem_26102_backing_offset_1];
    volatile unsigned char *red_arr_mem_26098_backing_5 =
                           &shared_mem[red_arr_mem_26098_backing_offset_2];
    volatile unsigned char *red_arr_mem_26096_backing_4 =
                           &shared_mem[red_arr_mem_26096_backing_offset_3];
    volatile unsigned char *color_25352_backing_3 =
                           &shared_mem[color_25352_backing_offset_4];
    volatile unsigned char *color_25351_backing_2 =
                           &shared_mem[color_25351_backing_offset_5];
    volatile unsigned char *color_25350_backing_1 =
                           &shared_mem[color_25350_backing_offset_6];
    volatile unsigned char *color_25349_backing_0 =
                           &shared_mem[color_25349_backing_offset_7];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26086;
    int32_t local_tid_26087;
    int64_t group_sizze_26090;
    int32_t wave_sizze_26089;
    int32_t group_tid_26088;
    
    global_tid_26086 = get_global_id(0);
    local_tid_26087 = get_local_id(0);
    group_sizze_26090 = get_local_size(0);
    wave_sizze_26089 = LOCKSTEP_WIDTH;
    group_tid_26088 = get_group_id(0);
    
    int32_t phys_tid_20476 = group_tid_26088;
    int64_t slice_26092 = k_16569;
    int64_t ltid_pre_26091 = sext_i32_i64(local_tid_26087);
    int64_t remnant_26093 = sext_i32_i64(local_tid_26087) - ltid_pre_26091;
    int64_t slice_26094 = n_16572;
    int64_t gtid_20475 = sext_i32_i64(group_tid_26088);
    int64_t remnant_26095 = sext_i32_i64(group_tid_26088) - gtid_20475;
    __local unsigned char *color_25349;
    
    color_25349 = (__local unsigned char *) color_25349_backing_0;
    
    __local unsigned char *color_25350;
    
    color_25350 = (__local unsigned char *) color_25350_backing_1;
    
    __local unsigned char *color_25351;
    
    color_25351 = (__local unsigned char *) color_25351_backing_2;
    
    __local unsigned char *color_25352;
    
    color_25352 = (__local unsigned char *) color_25352_backing_3;
    
    double defunc_2_reduce_res_20479;
    int64_t defunc_2_reduce_res_ind_20480;
    int64_t gtid_20482 = sext_i32_i64(sext_i64_i32(ltid_pre_26091));
    int32_t phys_tid_20483 = local_tid_26087;
    __local unsigned char *red_arr_mem_26096;
    
    red_arr_mem_26096 = (__local unsigned char *) red_arr_mem_26096_backing_4;
    
    __local unsigned char *red_arr_mem_26098;
    
    red_arr_mem_26098 = (__local unsigned char *) red_arr_mem_26098_backing_5;
    
    double x_20496;
    
    x_20496 = ((__global double *) ext_mem_24437)[gtid_20482 * n_16572 +
                                                  gtid_20475];
    
    double x_wasfree_20497;
    
    x_wasfree_20497 = ((__global double *) alphas_mem_24017)[gtid_20482];
    
    double x_wasfree_20498;
    
    x_wasfree_20498 = ((__global double *) ext_mem_24474)[gtid_20482];
    
    double x_20500 = -0.5 * x_20496;
    double x_20501 = x_wasfree_20497 + x_20500;
    double defunc_0_f_res_20502 = x_wasfree_20498 + x_20501;
    
    ((__local double *) red_arr_mem_26096)[gtid_20482] = defunc_0_f_res_20502;
    ((__local int64_t *) red_arr_mem_26098)[gtid_20482] = gtid_20482;
    ((__local double *) color_25349)[gtid_20482] = defunc_0_f_res_20502;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_26100;
    int32_t skip_waves_26101 = 1;
    double acc_v_20484;
    int64_t acc_i_20485;
    double v_20486;
    int64_t i_20487;
    
    offset_26100 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_26087, sext_i64_i32(k_16569))) {
            acc_v_20484 = ((__local
                            double *) red_arr_mem_26096)[sext_i32_i64(local_tid_26087 +
                                                         offset_26100)];
            acc_i_20485 = ((__local
                            int64_t *) red_arr_mem_26098)[sext_i32_i64(local_tid_26087 +
                                                          offset_26100)];
        }
    }
    offset_26100 = 1;
    while (slt32(offset_26100, wave_sizze_26089)) {
        if (slt32(local_tid_26087 + offset_26100, sext_i64_i32(k_16569)) &&
            ((local_tid_26087 - squot32(local_tid_26087, wave_sizze_26089) *
              wave_sizze_26089) & (2 * offset_26100 - 1)) == 0) {
            // read array element
            {
                v_20486 = ((volatile __local
                            double *) red_arr_mem_26096)[sext_i32_i64(local_tid_26087 +
                                                         offset_26100)];
                i_20487 = ((volatile __local
                            int64_t *) red_arr_mem_26098)[sext_i32_i64(local_tid_26087 +
                                                          offset_26100)];
            }
            // apply reduction operation
            {
                bool cond_20488 = acc_v_20484 == v_20486;
                double idx_res_20489;
                int64_t idx_res_20490;
                
                if (cond_20488) {
                    int64_t x_20491 = smin64(acc_i_20485, i_20487);
                    
                    idx_res_20489 = acc_v_20484;
                    idx_res_20490 = x_20491;
                } else {
                    double y_20492 = fmax64(acc_v_20484, v_20486);
                    bool cond_20493 = acc_v_20484 == y_20492;
                    double x_20494;
                    
                    if (cond_20493) {
                        x_20494 = acc_v_20484;
                    } else {
                        x_20494 = v_20486;
                    }
                    
                    int64_t x_20495;
                    
                    if (cond_20493) {
                        x_20495 = acc_i_20485;
                    } else {
                        x_20495 = i_20487;
                    }
                    idx_res_20489 = x_20494;
                    idx_res_20490 = x_20495;
                }
                acc_v_20484 = idx_res_20489;
                acc_i_20485 = idx_res_20490;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_26096)[sext_i32_i64(local_tid_26087)] =
                    acc_v_20484;
                ((volatile __local
                  int64_t *) red_arr_mem_26098)[sext_i32_i64(local_tid_26087)] =
                    acc_i_20485;
            }
        }
        offset_26100 *= 2;
    }
    while (slt32(skip_waves_26101, squot32(sext_i64_i32(k_16569) +
                                           wave_sizze_26089 - 1,
                                           wave_sizze_26089))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_26100 = skip_waves_26101 * wave_sizze_26089;
        if (slt32(local_tid_26087 + offset_26100, sext_i64_i32(k_16569)) &&
            ((local_tid_26087 - squot32(local_tid_26087, wave_sizze_26089) *
              wave_sizze_26089) == 0 && (squot32(local_tid_26087,
                                                 wave_sizze_26089) & (2 *
                                                                      skip_waves_26101 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                v_20486 = ((__local
                            double *) red_arr_mem_26096)[sext_i32_i64(local_tid_26087 +
                                                         offset_26100)];
                i_20487 = ((__local
                            int64_t *) red_arr_mem_26098)[sext_i32_i64(local_tid_26087 +
                                                          offset_26100)];
            }
            // apply reduction operation
            {
                bool cond_20488 = acc_v_20484 == v_20486;
                double idx_res_20489;
                int64_t idx_res_20490;
                
                if (cond_20488) {
                    int64_t x_20491 = smin64(acc_i_20485, i_20487);
                    
                    idx_res_20489 = acc_v_20484;
                    idx_res_20490 = x_20491;
                } else {
                    double y_20492 = fmax64(acc_v_20484, v_20486);
                    bool cond_20493 = acc_v_20484 == y_20492;
                    double x_20494;
                    
                    if (cond_20493) {
                        x_20494 = acc_v_20484;
                    } else {
                        x_20494 = v_20486;
                    }
                    
                    int64_t x_20495;
                    
                    if (cond_20493) {
                        x_20495 = acc_i_20485;
                    } else {
                        x_20495 = i_20487;
                    }
                    idx_res_20489 = x_20494;
                    idx_res_20490 = x_20495;
                }
                acc_v_20484 = idx_res_20489;
                acc_i_20485 = idx_res_20490;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_26096)[sext_i32_i64(local_tid_26087)] =
                    acc_v_20484;
                ((__local
                  int64_t *) red_arr_mem_26098)[sext_i32_i64(local_tid_26087)] =
                    acc_i_20485;
            }
        }
        skip_waves_26101 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_2_reduce_res_20479 = ((__local
                                  double *) red_arr_mem_26096)[(int64_t) 0];
    defunc_2_reduce_res_ind_20480 = ((__local
                                      int64_t *) red_arr_mem_26098)[(int64_t) 0];
    
    double defunc_2_reduce_res_20503;
    int64_t gtid_20504 = sext_i32_i64(sext_i64_i32(ltid_pre_26091));
    int32_t phys_tid_20505 = local_tid_26087;
    __local unsigned char *red_arr_mem_26102;
    
    red_arr_mem_26102 = (__local unsigned char *) red_arr_mem_26102_backing_6;
    
    double x_20509;
    
    x_20509 = ((__local double *) color_25349)[gtid_20504];
    
    double exp_arg_20510 = x_20509 - defunc_2_reduce_res_20479;
    double exp_res_20511;
    
    exp_res_20511 = futrts_exp64(exp_arg_20510);
    ((__local double *) red_arr_mem_26102)[gtid_20504] = exp_res_20511;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_26104;
    int32_t skip_waves_26105 = 1;
    double x_20506;
    double x_20507;
    
    offset_26104 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_26087, sext_i64_i32(k_16569))) {
            x_20506 = ((__local
                        double *) red_arr_mem_26102)[sext_i32_i64(local_tid_26087 +
                                                     offset_26104)];
        }
    }
    offset_26104 = 1;
    while (slt32(offset_26104, wave_sizze_26089)) {
        if (slt32(local_tid_26087 + offset_26104, sext_i64_i32(k_16569)) &&
            ((local_tid_26087 - squot32(local_tid_26087, wave_sizze_26089) *
              wave_sizze_26089) & (2 * offset_26104 - 1)) == 0) {
            // read array element
            {
                x_20507 = ((volatile __local
                            double *) red_arr_mem_26102)[sext_i32_i64(local_tid_26087 +
                                                         offset_26104)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_20508 = x_20506 + x_20507;
                
                x_20506 = defunc_1_op_res_20508;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_26102)[sext_i32_i64(local_tid_26087)] =
                    x_20506;
            }
        }
        offset_26104 *= 2;
    }
    while (slt32(skip_waves_26105, squot32(sext_i64_i32(k_16569) +
                                           wave_sizze_26089 - 1,
                                           wave_sizze_26089))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_26104 = skip_waves_26105 * wave_sizze_26089;
        if (slt32(local_tid_26087 + offset_26104, sext_i64_i32(k_16569)) &&
            ((local_tid_26087 - squot32(local_tid_26087, wave_sizze_26089) *
              wave_sizze_26089) == 0 && (squot32(local_tid_26087,
                                                 wave_sizze_26089) & (2 *
                                                                      skip_waves_26105 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                x_20507 = ((__local
                            double *) red_arr_mem_26102)[sext_i32_i64(local_tid_26087 +
                                                         offset_26104)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_20508 = x_20506 + x_20507;
                
                x_20506 = defunc_1_op_res_20508;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_26102)[sext_i32_i64(local_tid_26087)] =
                    x_20506;
            }
        }
        skip_waves_26105 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_2_reduce_res_20503 = ((__local
                                  double *) red_arr_mem_26102)[(int64_t) 0];
    
    double binop_y_20512 = 1.0 / defunc_2_reduce_res_20503;
    double defunc_2_reduce_res_contrib_sum_20513;
    int64_t gtid_20515 = sext_i32_i64(sext_i64_i32(ltid_pre_26091));
    int32_t phys_tid_20516 = local_tid_26087;
    __local unsigned char *red_arr_mem_26106;
    
    red_arr_mem_26106 = (__local unsigned char *) red_arr_mem_26106_backing_7;
    
    double x_20520;
    
    x_20520 = ((__local double *) color_25349)[gtid_20515];
    
    double exp_arg_20521 = x_20520 - defunc_2_reduce_res_20479;
    double binop_y_20522;
    
    binop_y_20522 = futrts_exp64(exp_arg_20521);
    
    double contrib_20523 = binop_y_20512 * binop_y_20522;
    double binop_y_adj_20524 = -1.0 * contrib_20523;
    
    ((__local double *) red_arr_mem_26106)[gtid_20515] = binop_y_adj_20524;
    ((__local double *) color_25352)[gtid_20515] = contrib_20523;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_26108;
    int32_t skip_waves_26109 = 1;
    double x_20517;
    double y_20518;
    
    offset_26108 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_26087, sext_i64_i32(k_16569))) {
            x_20517 = ((__local
                        double *) red_arr_mem_26106)[sext_i32_i64(local_tid_26087 +
                                                     offset_26108)];
        }
    }
    offset_26108 = 1;
    while (slt32(offset_26108, wave_sizze_26089)) {
        if (slt32(local_tid_26087 + offset_26108, sext_i64_i32(k_16569)) &&
            ((local_tid_26087 - squot32(local_tid_26087, wave_sizze_26089) *
              wave_sizze_26089) & (2 * offset_26108 - 1)) == 0) {
            // read array element
            {
                y_20518 = ((volatile __local
                            double *) red_arr_mem_26106)[sext_i32_i64(local_tid_26087 +
                                                         offset_26108)];
            }
            // apply reduction operation
            {
                double binlam_res_20519 = x_20517 + y_20518;
                
                x_20517 = binlam_res_20519;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_26106)[sext_i32_i64(local_tid_26087)] =
                    x_20517;
            }
        }
        offset_26108 *= 2;
    }
    while (slt32(skip_waves_26109, squot32(sext_i64_i32(k_16569) +
                                           wave_sizze_26089 - 1,
                                           wave_sizze_26089))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_26108 = skip_waves_26109 * wave_sizze_26089;
        if (slt32(local_tid_26087 + offset_26108, sext_i64_i32(k_16569)) &&
            ((local_tid_26087 - squot32(local_tid_26087, wave_sizze_26089) *
              wave_sizze_26089) == 0 && (squot32(local_tid_26087,
                                                 wave_sizze_26089) & (2 *
                                                                      skip_waves_26109 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                y_20518 = ((__local
                            double *) red_arr_mem_26106)[sext_i32_i64(local_tid_26087 +
                                                         offset_26108)];
            }
            // apply reduction operation
            {
                double binlam_res_20519 = x_20517 + y_20518;
                
                x_20517 = binlam_res_20519;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_26106)[sext_i32_i64(local_tid_26087)] =
                    x_20517;
            }
        }
        skip_waves_26109 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_2_reduce_res_contrib_sum_20513 = ((__local
                                              double *) red_arr_mem_26106)[(int64_t) 0];
    
    double defunc_2_reduce_res_adj_20525 = 1.0 +
           defunc_2_reduce_res_contrib_sum_20513;
    
    ((__local double *) color_25351)[sext_i32_i64(local_tid_26087)] = 0.0;
    barrier(CLK_LOCAL_MEM_FENCE);
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_26087 == 0) {
        if (sle64((int64_t) 0, defunc_2_reduce_res_ind_20480) &&
            slt64(defunc_2_reduce_res_ind_20480, k_16569)) {
            ((__local double *) color_25351)[defunc_2_reduce_res_ind_20480] =
                defunc_2_reduce_res_adj_20525;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t gtid_20530 = sext_i32_i64(sext_i64_i32(ltid_pre_26091));
    int32_t phys_tid_20531 = local_tid_26087;
    double map_adj_p_20532;
    
    map_adj_p_20532 = ((__local double *) color_25351)[gtid_20530];
    
    double map_adj_p_20533;
    
    map_adj_p_20533 = ((__local double *) color_25352)[gtid_20530];
    
    double defunc_0_f_res_adj_20534 = map_adj_p_20532 + map_adj_p_20533;
    double binop_y_adj_20535 = -0.5 * defunc_0_f_res_adj_20534;
    
    ((__local double *) color_25350)[gtid_20530] = binop_y_adj_20535;
    ((__local double *) color_25349)[gtid_20530] = defunc_0_f_res_adj_20534;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    double tmp_26110;
    
    tmp_26110 = ((__local double *) color_25349)[sext_i32_i64(local_tid_26087)];
    ((__global double *) mem_24644)[gtid_20475 * k_16569 +
                                    sext_i32_i64(local_tid_26087)] = tmp_26110;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    double tmp_26111;
    
    tmp_26111 = ((__local double *) color_25350)[sext_i32_i64(local_tid_26087)];
    ((__global double *) mem_24648)[gtid_20475 * k_16569 +
                                    sext_i32_i64(local_tid_26087)] = tmp_26111;
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_7:
    return;
}
__kernel void 
__launch_bounds__(256, 4)
calculate_jacobianzisegmap_intragroup_22273(__global
                                                          int *global_failure,
                                                          uint color_25338_backing_offset_0,
                                                          uint color_25337_backing_offset_1,
                                                          int64_t k_16569,
                                                          int64_t d_16570,
                                                          int64_t n_16572,
                                                          int64_t gridDim_x_22266,
                                                          int64_t gridDim_y_22267,
                                                          int64_t full_tiles_22301,
                                                          int64_t kk_22524,
                                                          __global
                                                          unsigned char *ext_mem_24078,
                                                          __global
                                                          unsigned char *ext_mem_24079,
                                                          __global
                                                          unsigned char *mem_24364)
{
    #define Ty_22247 (calculate_jacobianziTy_22244)
    #define Ry_22248 (calculate_jacobianziRy_22246)
    #define Tx_22249 (calculate_jacobianziTx_22243)
    #define Rx_22250 (calculate_jacobianziRx_22245)
    #define Tk_22251 (calculate_jacobianziTk_22242)
    #define tk_div_tx_22252 (sdiv_up64(calculate_jacobianziTk_22242, calculate_jacobianziTx_22243))
    #define TxRx_22254 (calculate_jacobianziTx_22243 * calculate_jacobianziRx_22245)
    #define TyRy_22255 (calculate_jacobianziTy_22244 * calculate_jacobianziRy_22246)
    #define a_loc_szz_22260 (calculate_jacobianziTk_22242 * (calculate_jacobianziTy_22244 * calculate_jacobianziRy_22246) + smax64(calculate_jacobianziTk_22242, calculate_jacobianziTy_22244 * calculate_jacobianziRy_22246))
    #define b_loc_szz_22265 (smax64(calculate_jacobianziTk_22242, calculate_jacobianziTy_22244 * calculate_jacobianziRy_22246) + calculate_jacobianziTk_22242 * (calculate_jacobianziTx_22243 * calculate_jacobianziRx_22245))
    #define binop_y_22433 ((int64_t) 1 + calculate_jacobianziTx_22243 * calculate_jacobianziRx_22245)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *color_25338_backing_1 =
                           &shared_mem[color_25338_backing_offset_0];
    volatile unsigned char *color_25337_backing_0 =
                           &shared_mem[color_25337_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25549;
    int32_t local_tid_25550;
    int64_t group_sizze_25553;
    int32_t wave_sizze_25552;
    int32_t group_tid_25551;
    
    global_tid_25549 = get_global_id(0);
    local_tid_25550 = get_local_id(0);
    group_sizze_25553 = get_local_size(0);
    wave_sizze_25552 = LOCKSTEP_WIDTH;
    group_tid_25551 = get_group_id(0);
    
    int32_t gid_flat_22273 = group_tid_25551;
    int64_t slice_25556 = Tx_22249;
    int64_t slice_25557 = Ty_22247 * slice_25556;
    int64_t ltid_pre_25554 = squot64(sext_i32_i64(local_tid_25550),
                                     slice_25556);
    int64_t remnant_25558 = sext_i32_i64(local_tid_25550) - ltid_pre_25554 *
            slice_25556;
    int64_t ltid_pre_25555 = remnant_25558;
    int64_t remnant_25559 = remnant_25558 - ltid_pre_25555;
    int64_t slice_25562 = Tx_22249;
    int64_t slice_25563 = Tx_22249 * slice_25562;
    int64_t ltid_pre_25560 = squot64(sext_i32_i64(local_tid_25550),
                                     slice_25562);
    int64_t remnant_25564 = sext_i32_i64(local_tid_25550) - ltid_pre_25560 *
            slice_25562;
    int64_t ltid_pre_25561 = remnant_25564;
    int64_t remnant_25565 = remnant_25564 - ltid_pre_25561;
    int64_t slice_25566 = gridDim_x_22266;
    int64_t slice_25567 = gridDim_y_22267 * slice_25566;
    int64_t slice_25568 = k_16569 * slice_25567;
    int64_t gtid_19460 = squot64(sext_i32_i64(group_tid_25551), slice_25567);
    int64_t remnant_25569 = sext_i32_i64(group_tid_25551) - gtid_19460 *
            slice_25567;
    int64_t gid_y_22271 = squot64(remnant_25569, slice_25566);
    int64_t remnant_25570 = remnant_25569 - gid_y_22271 * slice_25566;
    int64_t gid_x_22272 = remnant_25570;
    int64_t remnant_25571 = remnant_25570 - gid_x_22272;
    double color_25333[Ry_22248 * Rx_22250];
    double color_25334[Ry_22248 * Rx_22250];
    double color_25335[Rx_22250];
    double color_25336[Rx_22250];
    __local unsigned char *color_25337;
    
    color_25337 = (__local unsigned char *) color_25337_backing_0;
    
    __local unsigned char *color_25338;
    
    color_25338 = (__local unsigned char *) color_25338_backing_1;
    
    double color_25339[Ry_22248 * Rx_22250];
    int64_t iii_22274 = TyRy_22255 * gid_y_22271;
    int64_t jjj_22275 = TxRx_22254 * gid_x_22272;
    int64_t ltid_y_22288 = sext_i32_i64(sext_i64_i32(ltid_pre_25554));
    int64_t ltid_x_22287 = sext_i32_i64(sext_i64_i32(ltid_pre_25555));
    int32_t ltid_flat_22289 = local_tid_25550;
    double color_25326[Ry_22248 * Rx_22250];
    
    for (int64_t i_22292 = 0; i_22292 < Ry_22248; i_22292++) {
        for (int64_t i_22295 = 0; i_22295 < Rx_22250; i_22295++) {
            color_25326[i_22292 * Rx_22250 + i_22295] = 0.0;
        }
    }
    for (int64_t i_25574 = 0; i_25574 < Ry_22248; i_25574++) {
        for (int64_t i_25575 = 0; i_25575 < Rx_22250; i_25575++) {
            double tmp_25576;
            
            tmp_25576 = color_25326[i_25574 * Rx_22250 + i_25575];
            color_25339[i_25574 * Rx_22250 + i_25575] = tmp_25576;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    double ext_mem_24278[Ry_22248 * Rx_22250];
    double mem_param_24189[Ry_22248 * Rx_22250];
    
    for (int32_t i_2 = 0; i_2 < Ry_22248 * Rx_22250; i_2++)
        mem_param_24189[i_2] = color_25339[i_2];
    for (int64_t i_22302 = 0; i_22302 < full_tiles_22301; i_22302++) {
        int64_t kk_22306 = Tk_22251 * i_22302;
        
        for (int64_t i_22307 = 0; i_22307 < tk_div_tx_22252; i_22307++) {
            int64_t binop_y_22332 = Tx_22249 * i_22307;
            
            for (int64_t i_22309 = 0; i_22309 < Rx_22250; i_22309++) {
                int64_t binop_y_22334 = Tx_22249 * i_22309;
                int64_t ltid_y_22330 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_25560));
                int64_t ltid_x_22331 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_25561));
                int32_t ltid_flat_22329 = local_tid_25550;
                int64_t k_22333 = ltid_y_22330 + binop_y_22332;
                int64_t i_22335 = ltid_x_22331 + binop_y_22334;
                int64_t gtid_22336 = iii_22274 + i_22335;
                int64_t x_seqdim_idx_22337 = kk_22306 + k_22333;
                bool cond_22338 = slt64(gtid_22336, n_16572);
                double x_elem_22339;
                
                if (cond_22338) {
                    double A_elem_22341;
                    
                    A_elem_22341 = ((__global
                                     double *) ext_mem_24079)[gtid_19460 *
                                                              (n_16572 *
                                                               d_16570) +
                                                              x_seqdim_idx_22337 *
                                                              n_16572 +
                                                              gtid_22336];
                    x_elem_22339 = A_elem_22341;
                } else {
                    x_elem_22339 = 0.0;
                }
                
                bool cond_22343 = slt64(k_22333, Tk_22251);
                int64_t x_loc_ind_22344;
                
                if (cond_22343) {
                    int64_t binop_y_22345 = (int64_t) 1 + TxRx_22254;
                    int64_t binop_y_22346 = k_22333 * binop_y_22345;
                    int64_t loc_fi_22347 = i_22335 + binop_y_22346;
                    
                    x_loc_ind_22344 = loc_fi_22347;
                } else {
                    x_loc_ind_22344 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, x_loc_ind_22344) &&
                    slt64(x_loc_ind_22344, a_loc_szz_22260)) {
                    ((__local double *) color_25338)[x_loc_ind_22344] =
                        x_elem_22339;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_22352 = 0; i_22352 < tk_div_tx_22252; i_22352++) {
            int64_t binop_y_22377 = Tx_22249 * i_22352;
            
            for (int64_t i_22354 = 0; i_22354 < Rx_22250; i_22354++) {
                int64_t binop_y_22379 = Tx_22249 * i_22354;
                int64_t ltid_y_22375 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_25560));
                int64_t ltid_x_22376 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_25561));
                int32_t ltid_flat_22374 = local_tid_25550;
                int64_t k_22378 = ltid_y_22375 + binop_y_22377;
                int64_t i_22380 = ltid_x_22376 + binop_y_22379;
                int64_t gtid_22381 = jjj_22275 + i_22380;
                int64_t x_seqdim_idx_22382 = kk_22306 + k_22378;
                bool cond_22383 = slt64(gtid_22381, d_16570);
                double x_elem_22384;
                
                if (cond_22383) {
                    double A_elem_22386;
                    
                    A_elem_22386 = ((__global
                                     double *) ext_mem_24078)[gtid_19460 *
                                                              (d_16570 *
                                                               d_16570) +
                                                              x_seqdim_idx_22382 *
                                                              d_16570 +
                                                              gtid_22381];
                    x_elem_22384 = A_elem_22386;
                } else {
                    x_elem_22384 = 0.0;
                }
                
                bool cond_22388 = slt64(k_22378, Tk_22251);
                int64_t x_loc_ind_22389;
                
                if (cond_22388) {
                    int64_t binop_y_22390 = (int64_t) 1 + TxRx_22254;
                    int64_t binop_y_22391 = k_22378 * binop_y_22390;
                    int64_t loc_fi_22392 = i_22380 + binop_y_22391;
                    
                    x_loc_ind_22389 = loc_fi_22392;
                } else {
                    x_loc_ind_22389 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, x_loc_ind_22389) &&
                    slt64(x_loc_ind_22389, b_loc_szz_22265)) {
                    ((__local double *) color_25337)[x_loc_ind_22389] =
                        x_elem_22384;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_25585 = 0; i_25585 < Ry_22248; i_25585++) {
            for (int64_t i_25586 = 0; i_25586 < Rx_22250; i_25586++) {
                double tmp_25587;
                
                tmp_25587 = mem_param_24189[i_25585 * Rx_22250 + i_25586];
                color_25333[i_25585 * Rx_22250 + i_25586] = tmp_25587;
            }
        }
        
        double ext_mem_24275[Ry_22248 * Rx_22250];
        double ext_mem_unused_25265[Ry_22248 * Rx_22250];
        double mem_param_24246[Ry_22248 * Rx_22250];
        double mem_param_out_25266[Ry_22248 * Rx_22250];
        
        for (int32_t i_3 = 0; i_3 < Ry_22248 * Rx_22250; i_3++)
            mem_param_24246[i_3] = color_25333[i_3];
        for (int32_t i_4 = 0; i_4 < Ry_22248 * Rx_22250; i_4++)
            mem_param_out_25266[i_4] = color_25334[i_4];
        for (int64_t i_22397 = 0; i_22397 < Tk_22251; i_22397++) {
            int64_t binop_y_22434 = i_22397 * binop_y_22433;
            int64_t ltid_y_22425 = sext_i32_i64(sext_i64_i32(ltid_pre_25554));
            int64_t ltid_x_22424 = sext_i32_i64(sext_i64_i32(ltid_pre_25555));
            int32_t ltid_flat_22426 = local_tid_25550;
            double color_25327[Rx_22250];
            double color_25328[Rx_22250];
            int64_t binop_y_22431 = Rx_22250 * ltid_y_22425;
            
            for (int64_t i_22429 = 0; i_22429 < Rx_22250; i_22429++) {
                int64_t binop_x_22432 = i_22429 + binop_y_22431;
                int64_t x_loc_ind_22435 = binop_x_22432 + binop_y_22434;
                
                for (int64_t i_25592 = 0; i_25592 < (int64_t) 1; i_25592++) {
                    double tmp_25593;
                    
                    tmp_25593 = ((__local
                                  double *) color_25338)[x_loc_ind_22435 +
                                                         i_25592];
                    color_25328[i_22429 + i_25592] = tmp_25593;
                }
            }
            
            int64_t binop_y_22442 = Rx_22250 * ltid_x_22424;
            
            for (int64_t i_22440 = 0; i_22440 < Rx_22250; i_22440++) {
                int64_t binop_x_22443 = i_22440 + binop_y_22442;
                int64_t x_loc_ind_22446 = binop_y_22434 + binop_x_22443;
                
                for (int64_t i_25595 = 0; i_25595 < (int64_t) 1; i_25595++) {
                    double tmp_25596;
                    
                    tmp_25596 = ((__local
                                  double *) color_25337)[x_loc_ind_22446 +
                                                         i_25595];
                    color_25327[i_22440 + i_25595] = tmp_25596;
                }
            }
            for (int64_t i_25597 = 0; i_25597 < Rx_22250; i_25597++) {
                double tmp_25598;
                
                tmp_25598 = color_25328[i_25597];
                color_25336[i_25597] = tmp_25598;
            }
            for (int64_t i_25599 = 0; i_25599 < Rx_22250; i_25599++) {
                double tmp_25600;
                
                tmp_25600 = color_25327[i_25599];
                color_25335[i_25599] = tmp_25600;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_22485 = sext_i32_i64(sext_i64_i32(ltid_pre_25554));
            int64_t ltid_x_22484 = sext_i32_i64(sext_i64_i32(ltid_pre_25555));
            int32_t ltid_flat_22486 = local_tid_25550;
            int64_t binop_y_22497 = Ry_22248 * ltid_y_22485;
            int64_t binop_y_22501 = Rx_22250 * ltid_x_22484;
            
            for (int64_t i_22491 = 0; i_22491 < Ry_22248; i_22491++) {
                int64_t binop_x_22496 = iii_22274 + i_22491;
                int64_t cmpop_x_22498 = binop_x_22496 + binop_y_22497;
                bool binop_x_22499 = slt64(cmpop_x_22498, n_16572);
                
                for (int64_t i_22494 = 0; i_22494 < Rx_22250; i_22494++) {
                    int64_t binop_x_22500 = jjj_22275 + i_22494;
                    int64_t cmpop_x_22502 = binop_x_22500 + binop_y_22501;
                    bool binop_y_22503 = slt64(cmpop_x_22502, d_16570);
                    bool cond_22504 = binop_x_22499 && binop_y_22503;
                    
                    if (cond_22504) {
                        double a_22506;
                        
                        a_22506 = color_25336[i_22491];
                        
                        double b_22507;
                        
                        b_22507 = color_25335[i_22494];
                        
                        double c_22508;
                        
                        c_22508 = mem_param_24246[i_22491 * Rx_22250 + i_22494];
                        
                        double defunc_1_f_res_22511 = a_22506 * b_22507;
                        double defunc_1_op_res_22515 = c_22508 +
                               defunc_1_f_res_22511;
                        
                        mem_param_24246[i_22491 * Rx_22250 + i_22494] =
                            defunc_1_op_res_22515;
                    }
                }
            }
            for (int64_t i_25603 = 0; i_25603 < Ry_22248; i_25603++) {
                for (int64_t i_25604 = 0; i_25604 < Rx_22250; i_25604++) {
                    double tmp_25605;
                    
                    tmp_25605 = mem_param_24246[i_25603 * Rx_22250 + i_25604];
                    mem_param_out_25266[i_25603 * Rx_22250 + i_25604] =
                        tmp_25605;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            double mem_param_tmp_25588[Ry_22248 * Rx_22250];
            
            for (int32_t i_5 = 0; i_5 < Ry_22248 * Rx_22250; i_5++)
                mem_param_tmp_25588[i_5] = mem_param_out_25266[i_5];
            
            double mem_param_out_tmp_25589[Ry_22248 * Rx_22250];
            
            for (int32_t i_6 = 0; i_6 < Ry_22248 * Rx_22250; i_6++)
                mem_param_out_tmp_25589[i_6] = mem_param_24246[i_6];
            for (int32_t i_7 = 0; i_7 < Ry_22248 * Rx_22250; i_7++)
                mem_param_24246[i_7] = mem_param_tmp_25588[i_7];
            for (int32_t i_8 = 0; i_8 < Ry_22248 * Rx_22250; i_8++)
                mem_param_out_25266[i_8] = mem_param_out_tmp_25589[i_8];
        }
        for (int32_t i_9 = 0; i_9 < Ry_22248 * Rx_22250; i_9++)
            ext_mem_24275[i_9] = mem_param_24246[i_9];
        for (int32_t i_10 = 0; i_10 < Ry_22248 * Rx_22250; i_10++)
            ext_mem_unused_25265[i_10] = mem_param_out_25266[i_10];
        
        double mem_param_tmp_25577[Ry_22248 * Rx_22250];
        
        for (int32_t i_11 = 0; i_11 < Ry_22248 * Rx_22250; i_11++)
            mem_param_tmp_25577[i_11] = ext_mem_24275[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_22248 * Rx_22250; i_12++)
            mem_param_24189[i_12] = mem_param_tmp_25577[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_22248 * Rx_22250; i_13++)
        ext_mem_24278[i_13] = mem_param_24189[i_13];
    for (int64_t i_22525 = 0; i_22525 < tk_div_tx_22252; i_22525++) {
        int64_t binop_y_22552 = Tx_22249 * i_22525;
        
        for (int64_t i_22527 = 0; i_22527 < Rx_22250; i_22527++) {
            int64_t binop_y_22554 = Tx_22249 * i_22527;
            int64_t ltid_y_22550 = sext_i32_i64(sext_i64_i32(ltid_pre_25560));
            int64_t ltid_x_22551 = sext_i32_i64(sext_i64_i32(ltid_pre_25561));
            int32_t ltid_flat_22549 = local_tid_25550;
            int64_t k_22553 = ltid_y_22550 + binop_y_22552;
            int64_t i_22555 = ltid_x_22551 + binop_y_22554;
            int64_t gtid_22556 = iii_22274 + i_22555;
            int64_t x_seqdim_idx_22557 = kk_22524 + k_22553;
            bool binop_x_22558 = slt64(gtid_22556, n_16572);
            bool binop_y_22559 = slt64(x_seqdim_idx_22557, d_16570);
            bool cond_22560 = binop_x_22558 && binop_y_22559;
            double x_elem_22561;
            
            if (cond_22560) {
                double A_elem_22563;
                
                A_elem_22563 = ((__global double *) ext_mem_24079)[gtid_19460 *
                                                                   (n_16572 *
                                                                    d_16570) +
                                                                   x_seqdim_idx_22557 *
                                                                   n_16572 +
                                                                   gtid_22556];
                x_elem_22561 = A_elem_22563;
            } else {
                x_elem_22561 = 0.0;
            }
            
            bool cond_22565 = slt64(k_22553, Tk_22251);
            int64_t x_loc_ind_22566;
            
            if (cond_22565) {
                int64_t binop_y_22567 = (int64_t) 1 + TxRx_22254;
                int64_t binop_y_22568 = k_22553 * binop_y_22567;
                int64_t loc_fi_22569 = i_22555 + binop_y_22568;
                
                x_loc_ind_22566 = loc_fi_22569;
            } else {
                x_loc_ind_22566 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, x_loc_ind_22566) && slt64(x_loc_ind_22566,
                                                             a_loc_szz_22260)) {
                ((__local double *) color_25338)[x_loc_ind_22566] =
                    x_elem_22561;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_22574 = 0; i_22574 < tk_div_tx_22252; i_22574++) {
        int64_t binop_y_22601 = Tx_22249 * i_22574;
        
        for (int64_t i_22576 = 0; i_22576 < Rx_22250; i_22576++) {
            int64_t binop_y_22603 = Tx_22249 * i_22576;
            int64_t ltid_y_22599 = sext_i32_i64(sext_i64_i32(ltid_pre_25560));
            int64_t ltid_x_22600 = sext_i32_i64(sext_i64_i32(ltid_pre_25561));
            int32_t ltid_flat_22598 = local_tid_25550;
            int64_t k_22602 = ltid_y_22599 + binop_y_22601;
            int64_t i_22604 = ltid_x_22600 + binop_y_22603;
            int64_t gtid_22605 = jjj_22275 + i_22604;
            int64_t x_seqdim_idx_22606 = kk_22524 + k_22602;
            bool binop_x_22607 = slt64(gtid_22605, d_16570);
            bool binop_y_22608 = slt64(x_seqdim_idx_22606, d_16570);
            bool cond_22609 = binop_x_22607 && binop_y_22608;
            double x_elem_22610;
            
            if (cond_22609) {
                double A_elem_22612;
                
                A_elem_22612 = ((__global double *) ext_mem_24078)[gtid_19460 *
                                                                   (d_16570 *
                                                                    d_16570) +
                                                                   x_seqdim_idx_22606 *
                                                                   d_16570 +
                                                                   gtid_22605];
                x_elem_22610 = A_elem_22612;
            } else {
                x_elem_22610 = 0.0;
            }
            
            bool cond_22614 = slt64(k_22602, Tk_22251);
            int64_t x_loc_ind_22615;
            
            if (cond_22614) {
                int64_t binop_y_22616 = (int64_t) 1 + TxRx_22254;
                int64_t binop_y_22617 = k_22602 * binop_y_22616;
                int64_t loc_fi_22618 = i_22604 + binop_y_22617;
                
                x_loc_ind_22615 = loc_fi_22618;
            } else {
                x_loc_ind_22615 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, x_loc_ind_22615) && slt64(x_loc_ind_22615,
                                                             b_loc_szz_22265)) {
                ((__local double *) color_25337)[x_loc_ind_22615] =
                    x_elem_22610;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_25610 = 0; i_25610 < Ry_22248; i_25610++) {
        for (int64_t i_25611 = 0; i_25611 < Rx_22250; i_25611++) {
            double tmp_25612;
            
            tmp_25612 = ext_mem_24278[i_25610 * Rx_22250 + i_25611];
            color_25333[i_25610 * Rx_22250 + i_25611] = tmp_25612;
        }
    }
    
    double ext_mem_24359[Ry_22248 * Rx_22250];
    double ext_mem_unused_25273[Ry_22248 * Rx_22250];
    double mem_param_24329[Ry_22248 * Rx_22250];
    double mem_param_out_25274[Ry_22248 * Rx_22250];
    
    for (int32_t i_14 = 0; i_14 < Ry_22248 * Rx_22250; i_14++)
        mem_param_24329[i_14] = color_25333[i_14];
    for (int32_t i_15 = 0; i_15 < Ry_22248 * Rx_22250; i_15++)
        mem_param_out_25274[i_15] = color_25334[i_15];
    for (int64_t i_22623 = 0; i_22623 < Tk_22251; i_22623++) {
        int64_t cmpop_x_22625 = kk_22524 + i_22623;
        bool cond_22626 = slt64(cmpop_x_22625, d_16570);
        
        if (cond_22626) {
            int64_t binop_y_22661 = (int64_t) 1 + TxRx_22254;
            int64_t binop_y_22662 = i_22623 * binop_y_22661;
            int64_t bytes_24331 = (int64_t) 8 * Rx_22250;
            int64_t ltid_y_22653 = sext_i32_i64(sext_i64_i32(ltid_pre_25554));
            int64_t ltid_x_22652 = sext_i32_i64(sext_i64_i32(ltid_pre_25555));
            int32_t ltid_flat_22654 = local_tid_25550;
            double color_25329[Rx_22250];
            double color_25330[Rx_22250];
            int64_t binop_y_22659 = Rx_22250 * ltid_y_22653;
            
            for (int64_t i_22657 = 0; i_22657 < Rx_22250; i_22657++) {
                int64_t binop_x_22660 = i_22657 + binop_y_22659;
                int64_t x_loc_ind_22663 = binop_x_22660 + binop_y_22662;
                
                for (int64_t i_25617 = 0; i_25617 < (int64_t) 1; i_25617++) {
                    double tmp_25618;
                    
                    tmp_25618 = ((__local
                                  double *) color_25338)[x_loc_ind_22663 +
                                                         i_25617];
                    color_25330[i_22657 + i_25617] = tmp_25618;
                }
            }
            
            int64_t binop_y_22670 = Rx_22250 * ltid_x_22652;
            
            for (int64_t i_22668 = 0; i_22668 < Rx_22250; i_22668++) {
                int64_t binop_x_22671 = i_22668 + binop_y_22670;
                int64_t x_loc_ind_22674 = binop_y_22662 + binop_x_22671;
                
                for (int64_t i_25620 = 0; i_25620 < (int64_t) 1; i_25620++) {
                    double tmp_25621;
                    
                    tmp_25621 = ((__local
                                  double *) color_25337)[x_loc_ind_22674 +
                                                         i_25620];
                    color_25329[i_22668 + i_25620] = tmp_25621;
                }
            }
            for (int64_t i_25622 = 0; i_25622 < Rx_22250; i_25622++) {
                double tmp_25623;
                
                tmp_25623 = color_25330[i_25622];
                color_25336[i_25622] = tmp_25623;
            }
            for (int64_t i_25624 = 0; i_25624 < Rx_22250; i_25624++) {
                double tmp_25625;
                
                tmp_25625 = color_25329[i_25624];
                color_25335[i_25624] = tmp_25625;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_22713 = sext_i32_i64(sext_i64_i32(ltid_pre_25554));
            int64_t ltid_x_22712 = sext_i32_i64(sext_i64_i32(ltid_pre_25555));
            int32_t ltid_flat_22714 = local_tid_25550;
            int64_t binop_y_22725 = Ry_22248 * ltid_y_22713;
            int64_t binop_y_22729 = Rx_22250 * ltid_x_22712;
            
            for (int64_t i_22719 = 0; i_22719 < Ry_22248; i_22719++) {
                int64_t binop_x_22724 = iii_22274 + i_22719;
                int64_t cmpop_x_22726 = binop_x_22724 + binop_y_22725;
                bool binop_x_22727 = slt64(cmpop_x_22726, n_16572);
                
                for (int64_t i_22722 = 0; i_22722 < Rx_22250; i_22722++) {
                    int64_t binop_x_22728 = jjj_22275 + i_22722;
                    int64_t cmpop_x_22730 = binop_x_22728 + binop_y_22729;
                    bool binop_y_22731 = slt64(cmpop_x_22730, d_16570);
                    bool cond_22732 = binop_x_22727 && binop_y_22731;
                    
                    if (cond_22732) {
                        double a_22734;
                        
                        a_22734 = color_25336[i_22719];
                        
                        double b_22735;
                        
                        b_22735 = color_25335[i_22722];
                        
                        double c_22736;
                        
                        c_22736 = mem_param_24329[i_22719 * Rx_22250 + i_22722];
                        
                        double defunc_1_f_res_22739 = a_22734 * b_22735;
                        double defunc_1_op_res_22743 = c_22736 +
                               defunc_1_f_res_22739;
                        
                        mem_param_24329[i_22719 * Rx_22250 + i_22722] =
                            defunc_1_op_res_22743;
                    }
                }
            }
            for (int64_t i_25628 = 0; i_25628 < Ry_22248; i_25628++) {
                for (int64_t i_25629 = 0; i_25629 < Rx_22250; i_25629++) {
                    double tmp_25630;
                    
                    tmp_25630 = mem_param_24329[i_25628 * Rx_22250 + i_25629];
                    color_25334[i_25628 * Rx_22250 + i_25629] = tmp_25630;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_25631 = 0; i_25631 < Ry_22248; i_25631++) {
                for (int64_t i_25632 = 0; i_25632 < Rx_22250; i_25632++) {
                    double tmp_25633;
                    
                    tmp_25633 = color_25334[i_25631 * Rx_22250 + i_25632];
                    mem_param_out_25274[i_25631 * Rx_22250 + i_25632] =
                        tmp_25633;
                }
            }
        } else {
            for (int64_t i_25634 = 0; i_25634 < Ry_22248; i_25634++) {
                for (int64_t i_25635 = 0; i_25635 < Rx_22250; i_25635++) {
                    double tmp_25636;
                    
                    tmp_25636 = mem_param_24329[i_25634 * Rx_22250 + i_25635];
                    mem_param_out_25274[i_25634 * Rx_22250 + i_25635] =
                        tmp_25636;
                }
            }
        }
        
        double mem_param_tmp_25613[Ry_22248 * Rx_22250];
        
        for (int32_t i_16 = 0; i_16 < Ry_22248 * Rx_22250; i_16++)
            mem_param_tmp_25613[i_16] = mem_param_out_25274[i_16];
        
        double mem_param_out_tmp_25614[Ry_22248 * Rx_22250];
        
        for (int32_t i_17 = 0; i_17 < Ry_22248 * Rx_22250; i_17++)
            mem_param_out_tmp_25614[i_17] = mem_param_24329[i_17];
        for (int32_t i_18 = 0; i_18 < Ry_22248 * Rx_22250; i_18++)
            mem_param_24329[i_18] = mem_param_tmp_25613[i_18];
        for (int32_t i_19 = 0; i_19 < Ry_22248 * Rx_22250; i_19++)
            mem_param_out_25274[i_19] = mem_param_out_tmp_25614[i_19];
    }
    for (int32_t i_20 = 0; i_20 < Ry_22248 * Rx_22250; i_20++)
        ext_mem_24359[i_20] = mem_param_24329[i_20];
    for (int32_t i_21 = 0; i_21 < Ry_22248 * Rx_22250; i_21++)
        ext_mem_unused_25273[i_21] = mem_param_out_25274[i_21];
    
    int64_t slice_25640 = Tx_22249;
    int64_t slice_25641 = Ty_22247 * slice_25640;
    int64_t slice_25642 = slice_25641;
    int64_t reg_tile_i_25637 = squot64(sext_i32_i64(local_tid_25550),
                                       slice_25641);
    int64_t remnant_25643 = sext_i32_i64(local_tid_25550) - reg_tile_i_25637 *
            slice_25641;
    int64_t reg_tile_i_25638 = squot64(remnant_25643, slice_25640);
    int64_t remnant_25644 = remnant_25643 - reg_tile_i_25638 * slice_25640;
    int64_t reg_tile_i_25639 = remnant_25644;
    int64_t remnant_25645 = remnant_25644 - reg_tile_i_25639;
    int64_t tile_dim_start_25646 = gtid_19460 + reg_tile_i_25637;
    int64_t tile_dim_start_25647 = Ry_22248 * (Ty_22247 * gid_y_22271 +
                                               reg_tile_i_25638);
    int64_t tile_dim_start_25648 = Rx_22250 * (Tx_22249 * gid_x_22272 +
                                               reg_tile_i_25639);
    
    for (int64_t nest_i_25649 = 0; nest_i_25649 < (int64_t) 1; nest_i_25649++) {
        for (int64_t nest_i_25650 = 0; nest_i_25650 < Ry_22248;
             nest_i_25650++) {
            for (int64_t nest_i_25651 = 0; nest_i_25651 < Rx_22250;
                 nest_i_25651++) {
                if ((slt64(tile_dim_start_25646 + nest_i_25649, k_16569) &&
                     slt64(tile_dim_start_25647 + nest_i_25650, n_16572)) &&
                    slt64(tile_dim_start_25648 + nest_i_25651, d_16570)) {
                    double tmp_25652;
                    
                    tmp_25652 = ext_mem_24359[squot64(reg_tile_i_25637 *
                                                      (Rx_22250 * Ry_22248 *
                                                       Tx_22249 * Ty_22247) +
                                                      reg_tile_i_25638 *
                                                      (Rx_22250 * Ry_22248 *
                                                       Tx_22249) +
                                                      reg_tile_i_25639 *
                                                      (Rx_22250 * Ry_22248) +
                                                      nest_i_25649 * (Rx_22250 *
                                                                      Ry_22248) +
                                                      nest_i_25650 * Rx_22250 +
                                                      nest_i_25651 -
                                                      squot64(reg_tile_i_25637 *
                                                              (Rx_22250 *
                                                               Ry_22248 *
                                                               Tx_22249 *
                                                               Ty_22247) +
                                                              reg_tile_i_25638 *
                                                              (Rx_22250 *
                                                               Ry_22248 *
                                                               Tx_22249) +
                                                              reg_tile_i_25639 *
                                                              (Rx_22250 *
                                                               Ry_22248) +
                                                              nest_i_25649 *
                                                              (Rx_22250 *
                                                               Ry_22248) +
                                                              nest_i_25650 *
                                                              Rx_22250 +
                                                              nest_i_25651,
                                                              Tx_22249 *
                                                              Ry_22248 *
                                                              Rx_22250) *
                                                      (Tx_22249 * Ry_22248 *
                                                       Rx_22250) -
                                                      squot64(reg_tile_i_25637 *
                                                              (Rx_22250 *
                                                               Ry_22248 *
                                                               Tx_22249 *
                                                               Ty_22247) +
                                                              reg_tile_i_25638 *
                                                              (Rx_22250 *
                                                               Ry_22248 *
                                                               Tx_22249) +
                                                              reg_tile_i_25639 *
                                                              (Rx_22250 *
                                                               Ry_22248) +
                                                              nest_i_25649 *
                                                              (Rx_22250 *
                                                               Ry_22248) +
                                                              nest_i_25650 *
                                                              Rx_22250 +
                                                              nest_i_25651 -
                                                              squot64(reg_tile_i_25637 *
                                                                      (Rx_22250 *
                                                                       Ry_22248 *
                                                                       Tx_22249 *
                                                                       Ty_22247) +
                                                                      reg_tile_i_25638 *
                                                                      (Rx_22250 *
                                                                       Ry_22248 *
                                                                       Tx_22249) +
                                                                      reg_tile_i_25639 *
                                                                      (Rx_22250 *
                                                                       Ry_22248) +
                                                                      nest_i_25649 *
                                                                      (Rx_22250 *
                                                                       Ry_22248) +
                                                                      nest_i_25650 *
                                                                      Rx_22250 +
                                                                      nest_i_25651,
                                                                      Tx_22249 *
                                                                      Ry_22248 *
                                                                      Rx_22250) *
                                                              (Tx_22249 *
                                                               Ry_22248 *
                                                               Rx_22250),
                                                              Ry_22248 *
                                                              Rx_22250) *
                                                      (Ry_22248 * Rx_22250),
                                                      Rx_22250) * Rx_22250 +
                                              (reg_tile_i_25637 * (Rx_22250 *
                                                                   Ry_22248 *
                                                                   Tx_22249 *
                                                                   Ty_22247) +
                                               reg_tile_i_25638 * (Rx_22250 *
                                                                   Ry_22248 *
                                                                   Tx_22249) +
                                               reg_tile_i_25639 * (Rx_22250 *
                                                                   Ry_22248) +
                                               nest_i_25649 * (Rx_22250 *
                                                               Ry_22248) +
                                               nest_i_25650 * Rx_22250 +
                                               nest_i_25651 -
                                               squot64(reg_tile_i_25637 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249 * Ty_22247) +
                                                       reg_tile_i_25638 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249) +
                                                       reg_tile_i_25639 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25649 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25650 * Rx_22250 +
                                                       nest_i_25651, Tx_22249 *
                                                       Ry_22248 * Rx_22250) *
                                               (Tx_22249 * Ry_22248 *
                                                Rx_22250) -
                                               squot64(reg_tile_i_25637 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249 * Ty_22247) +
                                                       reg_tile_i_25638 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249) +
                                                       reg_tile_i_25639 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25649 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25650 * Rx_22250 +
                                                       nest_i_25651 -
                                                       squot64(reg_tile_i_25637 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249 *
                                                                Ty_22247) +
                                                               reg_tile_i_25638 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249) +
                                                               reg_tile_i_25639 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25649 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25650 *
                                                               Rx_22250 +
                                                               nest_i_25651,
                                                               Tx_22249 *
                                                               Ry_22248 *
                                                               Rx_22250) *
                                                       (Tx_22249 * Ry_22248 *
                                                        Rx_22250), Ry_22248 *
                                                       Rx_22250) * (Ry_22248 *
                                                                    Rx_22250) -
                                               squot64(reg_tile_i_25637 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249 * Ty_22247) +
                                                       reg_tile_i_25638 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249) +
                                                       reg_tile_i_25639 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25649 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25650 * Rx_22250 +
                                                       nest_i_25651 -
                                                       squot64(reg_tile_i_25637 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249 *
                                                                Ty_22247) +
                                                               reg_tile_i_25638 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249) +
                                                               reg_tile_i_25639 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25649 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25650 *
                                                               Rx_22250 +
                                                               nest_i_25651,
                                                               Tx_22249 *
                                                               Ry_22248 *
                                                               Rx_22250) *
                                                       (Tx_22249 * Ry_22248 *
                                                        Rx_22250) -
                                                       squot64(reg_tile_i_25637 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249 *
                                                                Ty_22247) +
                                                               reg_tile_i_25638 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249) +
                                                               reg_tile_i_25639 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25649 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25650 *
                                                               Rx_22250 +
                                                               nest_i_25651 -
                                                               squot64(reg_tile_i_25637 *
                                                                       (Rx_22250 *
                                                                        Ry_22248 *
                                                                        Tx_22249 *
                                                                        Ty_22247) +
                                                                       reg_tile_i_25638 *
                                                                       (Rx_22250 *
                                                                        Ry_22248 *
                                                                        Tx_22249) +
                                                                       reg_tile_i_25639 *
                                                                       (Rx_22250 *
                                                                        Ry_22248) +
                                                                       nest_i_25649 *
                                                                       (Rx_22250 *
                                                                        Ry_22248) +
                                                                       nest_i_25650 *
                                                                       Rx_22250 +
                                                                       nest_i_25651,
                                                                       Tx_22249 *
                                                                       Ry_22248 *
                                                                       Rx_22250) *
                                                               (Tx_22249 *
                                                                Ry_22248 *
                                                                Rx_22250),
                                                               Ry_22248 *
                                                               Rx_22250) *
                                                       (Ry_22248 * Rx_22250),
                                                       Rx_22250) * Rx_22250)];
                    ((__global double *) mem_24364)[(tile_dim_start_25646 +
                                                     nest_i_25649) * (d_16570 *
                                                                      n_16572) +
                                                    (tile_dim_start_25647 +
                                                     nest_i_25650) * d_16570 +
                                                    (tile_dim_start_25648 +
                                                     nest_i_25651)] = tmp_25652;
                }
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_22247
    #undef Ry_22248
    #undef Tx_22249
    #undef Rx_22250
    #undef Tk_22251
    #undef tk_div_tx_22252
    #undef TxRx_22254
    #undef TyRy_22255
    #undef a_loc_szz_22260
    #undef b_loc_szz_22265
    #undef binop_y_22433
}
__kernel void calculate_jacobianzisegmap_intragroup_22784(__global
                                                          int *global_failure,
                                                          uint mem_24766_backing_offset_0,
                                                          uint mem_24763_backing_offset_1,
                                                          int64_t k_16569,
                                                          int64_t d_16570,
                                                          int64_t n_16572,
                                                          int64_t gridDim_t_22775,
                                                          int64_t gridDim_y_22776,
                                                          int64_t gridDim_x_22777,
                                                          __global
                                                          unsigned char *ext_mem_24079,
                                                          __global
                                                          unsigned char *mem_24736,
                                                          __global
                                                          unsigned char *mem_24741)
{
    #define Ty_22755 (calculate_jacobianziTy_22752)
    #define Ry_22756 (calculate_jacobianziRy_22754)
    #define Tx_22757 (calculate_jacobianziTx_22751)
    #define Rx_22758 (calculate_jacobianziRx_22753)
    #define Tk_22759 (calculate_jacobianziTk_22750)
    #define tk_div_tx_22760 (sdiv_up64(calculate_jacobianziTk_22750, calculate_jacobianziTx_22751))
    #define TxRx_22762 (calculate_jacobianziTx_22751 * calculate_jacobianziRx_22753)
    #define TyRy_22763 (calculate_jacobianziTy_22752 * calculate_jacobianziRy_22754)
    #define a_loc_szz_22768 (calculate_jacobianziTk_22750 * (calculate_jacobianziTy_22752 * calculate_jacobianziRy_22754) + smax64(calculate_jacobianziTk_22750, calculate_jacobianziTy_22752 * calculate_jacobianziRy_22754))
    #define b_loc_szz_22773 (smax64(calculate_jacobianziTk_22750, calculate_jacobianziTy_22752 * calculate_jacobianziRy_22754) + calculate_jacobianziTk_22750 * (calculate_jacobianziTx_22751 * calculate_jacobianziRx_22753))
    #define tk_rk_22774 ((int64_t) 8 * calculate_jacobianziTk_22750)
    #define binop_y_22950 ((int64_t) 1 + calculate_jacobianziTx_22751 * calculate_jacobianziRx_22753)
    #define binop_y_22961 ((int64_t) 1 + calculate_jacobianziTk_22750)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *mem_24766_backing_1 =
                           &shared_mem[mem_24766_backing_offset_0];
    volatile unsigned char *mem_24763_backing_0 =
                           &shared_mem[mem_24763_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26456;
    int32_t local_tid_26457;
    int64_t group_sizze_26460;
    int32_t wave_sizze_26459;
    int32_t group_tid_26458;
    
    global_tid_26456 = get_global_id(0);
    local_tid_26457 = get_local_id(0);
    group_sizze_26460 = get_local_size(0);
    wave_sizze_26459 = LOCKSTEP_WIDTH;
    group_tid_26458 = get_group_id(0);
    
    int32_t gid_flat_22784 = group_tid_26458;
    int64_t slice_26463 = Tx_22757;
    int64_t slice_26464 = Ty_22755 * slice_26463;
    int64_t ltid_pre_26461 = squot64(sext_i32_i64(local_tid_26457),
                                     slice_26463);
    int64_t remnant_26465 = sext_i32_i64(local_tid_26457) - ltid_pre_26461 *
            slice_26463;
    int64_t ltid_pre_26462 = remnant_26465;
    int64_t remnant_26466 = remnant_26465 - ltid_pre_26462;
    int64_t slice_26469 = Tx_22757;
    int64_t slice_26470 = Tx_22757 * slice_26469;
    int64_t ltid_pre_26467 = squot64(sext_i32_i64(local_tid_26457),
                                     slice_26469);
    int64_t remnant_26471 = sext_i32_i64(local_tid_26457) - ltid_pre_26467 *
            slice_26469;
    int64_t ltid_pre_26468 = remnant_26471;
    int64_t remnant_26472 = remnant_26471 - ltid_pre_26468;
    int64_t slice_26473 = gridDim_x_22777;
    int64_t slice_26474 = gridDim_y_22776 * slice_26473;
    int64_t slice_26475 = gridDim_t_22775 * slice_26474;
    int64_t slice_26476 = k_16569 * slice_26475;
    int64_t gtid_22210 = squot64(sext_i32_i64(group_tid_26458), slice_26475);
    int64_t remnant_26477 = sext_i32_i64(group_tid_26458) - gtid_22210 *
            slice_26475;
    int64_t gid_t_22785 = squot64(remnant_26477, slice_26474);
    int64_t remnant_26478 = remnant_26477 - gid_t_22785 * slice_26474;
    int64_t gid_y_22782 = squot64(remnant_26478, slice_26473);
    int64_t remnant_26479 = remnant_26478 - gid_y_22782 * slice_26473;
    int64_t gid_x_22783 = remnant_26479;
    int64_t remnant_26480 = remnant_26479 - gid_x_22783;
    int64_t iii_22786 = TyRy_22763 * gid_y_22782;
    int64_t jjj_22787 = TxRx_22762 * gid_x_22783;
    int64_t ttt_22788 = tk_rk_22774 * gid_t_22785;
    double mem_24760[Ry_22756 * Rx_22758];
    int64_t ltid_y_22801 = sext_i32_i64(sext_i64_i32(ltid_pre_26461));
    int64_t ltid_x_22800 = sext_i32_i64(sext_i64_i32(ltid_pre_26462));
    int32_t ltid_flat_22802 = local_tid_26457;
    double mem_24751[Ry_22756 * Rx_22758];
    
    for (int64_t i_22805 = 0; i_22805 < Ry_22756; i_22805++) {
        for (int64_t i_22808 = 0; i_22808 < Rx_22758; i_22808++) {
            mem_24751[i_22805 * Rx_22758 + i_22808] = 0.0;
        }
    }
    for (int64_t i_26483 = 0; i_26483 < Ry_22756; i_26483++) {
        for (int64_t i_26484 = 0; i_26484 < Rx_22758; i_26484++) {
            double tmp_26485;
            
            tmp_26485 = mem_24751[i_26483 * Rx_22758 + i_26484];
            mem_24760[i_26483 * Rx_22758 + i_26484] = tmp_26485;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local unsigned char *mem_24763;
    
    mem_24763 = (__local unsigned char *) mem_24763_backing_0;
    
    __local unsigned char *mem_24766;
    
    mem_24766 = (__local unsigned char *) mem_24766_backing_1;
    
    int64_t elems_on_t_22814 = n_16572 - ttt_22788;
    int64_t tiles_on_t_22815 = squot64(elems_on_t_22814, Tk_22759);
    int64_t full_tiles_22816 = smin64((int64_t) 8, tiles_on_t_22815);
    int64_t binop_x_22821 = (int64_t) 8 * gid_t_22785;
    double mem_24837[Rx_22758];
    double mem_24841[Rx_22758];
    double mem_24852[Ry_22756 * Rx_22758];
    double ext_mem_24856[Ry_22756 * Rx_22758];
    double mem_param_24767[Ry_22756 * Rx_22758];
    
    for (int32_t i_2 = 0; i_2 < Ry_22756 * Rx_22758; i_2++)
        mem_param_24767[i_2] = mem_24760[i_2];
    for (int64_t i_22817 = 0; i_22817 < full_tiles_22816; i_22817++) {
        int64_t off_t_22822 = i_22817 + binop_x_22821;
        int64_t kk_22823 = Tk_22759 * off_t_22822;
        
        for (int64_t i_22824 = 0; i_22824 < tk_div_tx_22760; i_22824++) {
            int64_t binop_y_22849 = Tx_22757 * i_22824;
            
            for (int64_t i_22826 = 0; i_22826 < Rx_22758; i_22826++) {
                int64_t binop_y_22851 = Tx_22757 * i_22826;
                int64_t ltid_y_22847 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26467));
                int64_t ltid_x_22848 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26468));
                int32_t ltid_flat_22846 = local_tid_26457;
                int64_t k_22850 = ltid_y_22847 + binop_y_22849;
                int64_t i_22852 = ltid_x_22848 + binop_y_22851;
                int64_t gtid_22853 = iii_22786 + i_22852;
                int64_t map_adjs_r_trsp_opaque_seqdim_idx_22854 = kk_22823 +
                        k_22850;
                bool cond_22855 = slt64(gtid_22853, d_16570);
                double map_adjs_r_trsp_opaque_elem_22856;
                
                if (cond_22855) {
                    double A_elem_22858;
                    
                    A_elem_22858 = ((__global double *) mem_24736)[gtid_22210 *
                                                                   (d_16570 *
                                                                    n_16572) +
                                                                   map_adjs_r_trsp_opaque_seqdim_idx_22854 *
                                                                   d_16570 +
                                                                   gtid_22853];
                    map_adjs_r_trsp_opaque_elem_22856 = A_elem_22858;
                } else {
                    map_adjs_r_trsp_opaque_elem_22856 = 0.0;
                }
                
                bool cond_22860 = slt64(k_22850, Tk_22759);
                int64_t map_adjs_r_trsp_opaque_loc_ind_22861;
                
                if (cond_22860) {
                    int64_t binop_y_22862 = (int64_t) 1 + TxRx_22762;
                    int64_t binop_y_22863 = k_22850 * binop_y_22862;
                    int64_t loc_fi_22864 = i_22852 + binop_y_22863;
                    
                    map_adjs_r_trsp_opaque_loc_ind_22861 = loc_fi_22864;
                } else {
                    map_adjs_r_trsp_opaque_loc_ind_22861 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, map_adjs_r_trsp_opaque_loc_ind_22861) &&
                    slt64(map_adjs_r_trsp_opaque_loc_ind_22861,
                          a_loc_szz_22768)) {
                    ((__local
                      double *) mem_24763)[map_adjs_r_trsp_opaque_loc_ind_22861] =
                        map_adjs_r_trsp_opaque_elem_22856;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_22869 = 0; i_22869 < Rx_22758; i_22869++) {
            int64_t binop_y_22896 = Tx_22757 * i_22869;
            
            for (int64_t i_22871 = 0; i_22871 < tk_div_tx_22760; i_22871++) {
                int64_t binop_y_22894 = Tx_22757 * i_22871;
                int64_t ltid_y_22892 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26467));
                int64_t ltid_x_22893 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26468));
                int32_t ltid_flat_22891 = local_tid_26457;
                int64_t k_22895 = ltid_x_22893 + binop_y_22894;
                int64_t i_22897 = ltid_y_22892 + binop_y_22896;
                int64_t gtid_22898 = jjj_22787 + i_22897;
                int64_t defunc_0_f_res_seqdim_idx_22899 = kk_22823 + k_22895;
                bool cond_22900 = slt64(gtid_22898, d_16570);
                double defunc_0_f_res_elem_22901;
                
                if (cond_22900) {
                    double A_elem_22903;
                    
                    A_elem_22903 = ((__global
                                     double *) ext_mem_24079)[gtid_22210 *
                                                              (n_16572 *
                                                               d_16570) +
                                                              gtid_22898 *
                                                              n_16572 +
                                                              defunc_0_f_res_seqdim_idx_22899];
                    defunc_0_f_res_elem_22901 = A_elem_22903;
                } else {
                    defunc_0_f_res_elem_22901 = 0.0;
                }
                
                bool cond_22905 = slt64(k_22895, Tk_22759);
                int64_t defunc_0_f_res_loc_ind_22906;
                
                if (cond_22905) {
                    int64_t binop_y_22907 = (int64_t) 1 + Tk_22759;
                    int64_t binop_y_22908 = i_22897 * binop_y_22907;
                    int64_t loc_fi_22909 = k_22895 + binop_y_22908;
                    
                    defunc_0_f_res_loc_ind_22906 = loc_fi_22909;
                } else {
                    defunc_0_f_res_loc_ind_22906 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, defunc_0_f_res_loc_ind_22906) &&
                    slt64(defunc_0_f_res_loc_ind_22906, b_loc_szz_22773)) {
                    ((__local
                      double *) mem_24766)[defunc_0_f_res_loc_ind_22906] =
                        defunc_0_f_res_elem_22901;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        double mem_param_in_25280[Ry_22756 * Rx_22758];
        
        for (int64_t i_26494 = 0; i_26494 < Ry_22756; i_26494++) {
            for (int64_t i_26495 = 0; i_26495 < Rx_22758; i_26495++) {
                double tmp_26496;
                
                tmp_26496 = mem_param_24767[i_26494 * Rx_22758 + i_26495];
                mem_param_in_25280[i_26494 * Rx_22758 + i_26495] = tmp_26496;
            }
        }
        
        double ext_mem_24853[Ry_22756 * Rx_22758];
        double ext_mem_unused_25281[Ry_22756 * Rx_22758];
        double mem_param_24824[Ry_22756 * Rx_22758];
        double mem_param_out_25282[Ry_22756 * Rx_22758];
        
        for (int32_t i_3 = 0; i_3 < Ry_22756 * Rx_22758; i_3++)
            mem_param_24824[i_3] = mem_param_in_25280[i_3];
        for (int32_t i_4 = 0; i_4 < Ry_22756 * Rx_22758; i_4++)
            mem_param_out_25282[i_4] = mem_24852[i_4];
        for (int64_t i_22914 = 0; i_22914 < Tk_22759; i_22914++) {
            int64_t binop_y_22951 = i_22914 * binop_y_22950;
            int64_t ltid_y_22942 = sext_i32_i64(sext_i64_i32(ltid_pre_26461));
            int64_t ltid_x_22941 = sext_i32_i64(sext_i64_i32(ltid_pre_26462));
            int32_t ltid_flat_22943 = local_tid_26457;
            double mem_24827[Rx_22758];
            int64_t binop_y_22948 = Rx_22758 * ltid_y_22942;
            
            for (int64_t i_22946 = 0; i_22946 < Rx_22758; i_22946++) {
                int64_t binop_x_22949 = i_22946 + binop_y_22948;
                int64_t map_adjs_r_trsp_opaque_loc_ind_22952 = binop_x_22949 +
                        binop_y_22951;
                
                for (int64_t i_26501 = 0; i_26501 < (int64_t) 1; i_26501++) {
                    double tmp_26502;
                    
                    tmp_26502 = ((__local
                                  double *) mem_24763)[map_adjs_r_trsp_opaque_loc_ind_22952 +
                                                       i_26501];
                    mem_24827[i_22946 + i_26501] = tmp_26502;
                }
            }
            
            double mem_24831[Rx_22758];
            int64_t binop_x_22959 = Rx_22758 * ltid_x_22941;
            
            for (int64_t i_22957 = 0; i_22957 < Rx_22758; i_22957++) {
                int64_t binop_x_22960 = i_22957 + binop_x_22959;
                int64_t binop_y_22962 = binop_x_22960 * binop_y_22961;
                int64_t defunc_0_f_res_loc_ind_22963 = i_22914 + binop_y_22962;
                
                for (int64_t i_26504 = 0; i_26504 < (int64_t) 1; i_26504++) {
                    double tmp_26505;
                    
                    tmp_26505 = ((__local
                                  double *) mem_24766)[defunc_0_f_res_loc_ind_22963 +
                                                       i_26504];
                    mem_24831[i_22957 + i_26504] = tmp_26505;
                }
            }
            for (int64_t i_26506 = 0; i_26506 < Rx_22758; i_26506++) {
                double tmp_26507;
                
                tmp_26507 = mem_24827[i_26506];
                mem_24837[i_26506] = tmp_26507;
            }
            for (int64_t i_26508 = 0; i_26508 < Rx_22758; i_26508++) {
                double tmp_26509;
                
                tmp_26509 = mem_24831[i_26508];
                mem_24841[i_26508] = tmp_26509;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_23002 = sext_i32_i64(sext_i64_i32(ltid_pre_26461));
            int64_t ltid_x_23001 = sext_i32_i64(sext_i64_i32(ltid_pre_26462));
            int32_t ltid_flat_23003 = local_tid_26457;
            int64_t binop_y_23014 = Ry_22756 * ltid_y_23002;
            int64_t binop_y_23018 = Rx_22758 * ltid_x_23001;
            
            for (int64_t i_23008 = 0; i_23008 < Ry_22756; i_23008++) {
                int64_t binop_x_23013 = iii_22786 + i_23008;
                int64_t cmpop_x_23015 = binop_x_23013 + binop_y_23014;
                bool binop_x_23016 = slt64(cmpop_x_23015, d_16570);
                
                for (int64_t i_23011 = 0; i_23011 < Rx_22758; i_23011++) {
                    int64_t binop_x_23017 = jjj_22787 + i_23011;
                    int64_t cmpop_x_23019 = binop_x_23017 + binop_y_23018;
                    bool binop_y_23020 = slt64(cmpop_x_23019, d_16570);
                    bool cond_23021 = binop_x_23016 && binop_y_23020;
                    
                    if (cond_23021) {
                        double a_23023;
                        
                        a_23023 = mem_24837[i_23008];
                        
                        double b_23024;
                        
                        b_23024 = mem_24841[i_23011];
                        
                        double c_23025;
                        
                        c_23025 = mem_param_24824[i_23008 * Rx_22758 + i_23011];
                        
                        double binop_y_adj_23028 = a_23023 * b_23024;
                        double binlam_res_23032 = c_23025 + binop_y_adj_23028;
                        
                        mem_param_24824[i_23008 * Rx_22758 + i_23011] =
                            binlam_res_23032;
                    }
                }
            }
            for (int64_t i_26512 = 0; i_26512 < Ry_22756; i_26512++) {
                for (int64_t i_26513 = 0; i_26513 < Rx_22758; i_26513++) {
                    double tmp_26514;
                    
                    tmp_26514 = mem_param_24824[i_26512 * Rx_22758 + i_26513];
                    mem_param_out_25282[i_26512 * Rx_22758 + i_26513] =
                        tmp_26514;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            double mem_param_tmp_26497[Ry_22756 * Rx_22758];
            
            for (int32_t i_5 = 0; i_5 < Ry_22756 * Rx_22758; i_5++)
                mem_param_tmp_26497[i_5] = mem_param_out_25282[i_5];
            
            double mem_param_out_tmp_26498[Ry_22756 * Rx_22758];
            
            for (int32_t i_6 = 0; i_6 < Ry_22756 * Rx_22758; i_6++)
                mem_param_out_tmp_26498[i_6] = mem_param_24824[i_6];
            for (int32_t i_7 = 0; i_7 < Ry_22756 * Rx_22758; i_7++)
                mem_param_24824[i_7] = mem_param_tmp_26497[i_7];
            for (int32_t i_8 = 0; i_8 < Ry_22756 * Rx_22758; i_8++)
                mem_param_out_25282[i_8] = mem_param_out_tmp_26498[i_8];
        }
        for (int32_t i_9 = 0; i_9 < Ry_22756 * Rx_22758; i_9++)
            ext_mem_24853[i_9] = mem_param_24824[i_9];
        for (int32_t i_10 = 0; i_10 < Ry_22756 * Rx_22758; i_10++)
            ext_mem_unused_25281[i_10] = mem_param_out_25282[i_10];
        
        double mem_param_tmp_26486[Ry_22756 * Rx_22758];
        
        for (int32_t i_11 = 0; i_11 < Ry_22756 * Rx_22758; i_11++)
            mem_param_tmp_26486[i_11] = ext_mem_24853[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_22756 * Rx_22758; i_12++)
            mem_param_24767[i_12] = mem_param_tmp_26486[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_22756 * Rx_22758; i_13++)
        ext_mem_24856[i_13] = mem_param_24767[i_13];
    
    bool binop_x_23041 = full_tiles_22816 == (int64_t) 8;
    int64_t binop_x_23042 = Tk_22759 * full_tiles_22816;
    int64_t cmpop_y_23043 = ttt_22788 + binop_x_23042;
    bool binop_y_23044 = n_16572 == cmpop_y_23043;
    bool cond_23045 = binop_x_23041 || binop_y_23044;
    double mem_25219[Ry_22756 * Rx_22758];
    double mem_24920[Rx_22758];
    double mem_24924[Rx_22758];
    double ext_mem_in_25288[Ry_22756 * Rx_22758];
    double mem_24935[Ry_22756 * Rx_22758];
    
    if (cond_23045) {
        for (int64_t i_26515 = 0; i_26515 < Ry_22756; i_26515++) {
            for (int64_t i_26516 = 0; i_26516 < Rx_22758; i_26516++) {
                double tmp_26517;
                
                tmp_26517 = ext_mem_24856[i_26515 * Rx_22758 + i_26516];
                mem_25219[i_26515 * Rx_22758 + i_26516] = tmp_26517;
            }
        }
    } else {
        int64_t off_t_23047 = full_tiles_22816 + binop_x_22821;
        int64_t kk_23048 = Tk_22759 * off_t_23047;
        
        for (int64_t i_23049 = 0; i_23049 < tk_div_tx_22760; i_23049++) {
            int64_t binop_y_23074 = Tx_22757 * i_23049;
            
            for (int64_t i_23051 = 0; i_23051 < Rx_22758; i_23051++) {
                int64_t binop_y_23076 = Tx_22757 * i_23051;
                int64_t ltid_y_23072 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26467));
                int64_t ltid_x_23073 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26468));
                int32_t ltid_flat_23071 = local_tid_26457;
                int64_t k_23075 = ltid_y_23072 + binop_y_23074;
                int64_t i_23077 = ltid_x_23073 + binop_y_23076;
                int64_t gtid_23078 = iii_22786 + i_23077;
                int64_t map_adjs_r_trsp_opaque_seqdim_idx_23079 = kk_23048 +
                        k_23075;
                bool cond_23080 = slt64(gtid_23078, d_16570);
                double map_adjs_r_trsp_opaque_elem_23081;
                
                if (cond_23080) {
                    double A_elem_23083;
                    
                    A_elem_23083 = ((__global double *) mem_24736)[gtid_22210 *
                                                                   (d_16570 *
                                                                    n_16572) +
                                                                   map_adjs_r_trsp_opaque_seqdim_idx_23079 *
                                                                   d_16570 +
                                                                   gtid_23078];
                    map_adjs_r_trsp_opaque_elem_23081 = A_elem_23083;
                } else {
                    map_adjs_r_trsp_opaque_elem_23081 = 0.0;
                }
                
                bool cond_23085 = slt64(k_23075, Tk_22759);
                int64_t map_adjs_r_trsp_opaque_loc_ind_23086;
                
                if (cond_23085) {
                    int64_t binop_y_23087 = (int64_t) 1 + TxRx_22762;
                    int64_t binop_y_23088 = k_23075 * binop_y_23087;
                    int64_t loc_fi_23089 = i_23077 + binop_y_23088;
                    
                    map_adjs_r_trsp_opaque_loc_ind_23086 = loc_fi_23089;
                } else {
                    map_adjs_r_trsp_opaque_loc_ind_23086 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, map_adjs_r_trsp_opaque_loc_ind_23086) &&
                    slt64(map_adjs_r_trsp_opaque_loc_ind_23086,
                          a_loc_szz_22768)) {
                    ((__local
                      double *) mem_24763)[map_adjs_r_trsp_opaque_loc_ind_23086] =
                        map_adjs_r_trsp_opaque_elem_23081;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_23094 = 0; i_23094 < Rx_22758; i_23094++) {
            int64_t binop_y_23121 = Tx_22757 * i_23094;
            
            for (int64_t i_23096 = 0; i_23096 < tk_div_tx_22760; i_23096++) {
                int64_t binop_y_23119 = Tx_22757 * i_23096;
                int64_t ltid_y_23117 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26467));
                int64_t ltid_x_23118 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26468));
                int32_t ltid_flat_23116 = local_tid_26457;
                int64_t k_23120 = ltid_x_23118 + binop_y_23119;
                int64_t i_23122 = ltid_y_23117 + binop_y_23121;
                int64_t gtid_23123 = jjj_22787 + i_23122;
                int64_t defunc_0_f_res_seqdim_idx_23124 = kk_23048 + k_23120;
                bool cond_23125 = slt64(gtid_23123, d_16570);
                double defunc_0_f_res_elem_23126;
                
                if (cond_23125) {
                    double A_elem_23128;
                    
                    A_elem_23128 = ((__global
                                     double *) ext_mem_24079)[gtid_22210 *
                                                              (n_16572 *
                                                               d_16570) +
                                                              gtid_23123 *
                                                              n_16572 +
                                                              defunc_0_f_res_seqdim_idx_23124];
                    defunc_0_f_res_elem_23126 = A_elem_23128;
                } else {
                    defunc_0_f_res_elem_23126 = 0.0;
                }
                
                bool cond_23130 = slt64(k_23120, Tk_22759);
                int64_t defunc_0_f_res_loc_ind_23131;
                
                if (cond_23130) {
                    int64_t binop_y_23132 = (int64_t) 1 + Tk_22759;
                    int64_t binop_y_23133 = i_23122 * binop_y_23132;
                    int64_t loc_fi_23134 = k_23120 + binop_y_23133;
                    
                    defunc_0_f_res_loc_ind_23131 = loc_fi_23134;
                } else {
                    defunc_0_f_res_loc_ind_23131 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, defunc_0_f_res_loc_ind_23131) &&
                    slt64(defunc_0_f_res_loc_ind_23131, b_loc_szz_22773)) {
                    ((__local
                      double *) mem_24766)[defunc_0_f_res_loc_ind_23131] =
                        defunc_0_f_res_elem_23126;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        int64_t binop_y_23175 = (int64_t) 1 + TxRx_22762;
        int64_t binop_y_23186 = (int64_t) 1 + Tk_22759;
        int64_t bytes_24909 = (int64_t) 8 * Rx_22758;
        
        for (int64_t i_26522 = 0; i_26522 < Ry_22756; i_26522++) {
            for (int64_t i_26523 = 0; i_26523 < Rx_22758; i_26523++) {
                double tmp_26524;
                
                tmp_26524 = ext_mem_24856[i_26522 * Rx_22758 + i_26523];
                ext_mem_in_25288[i_26522 * Rx_22758 + i_26523] = tmp_26524;
            }
        }
        
        double ext_mem_24936[Ry_22756 * Rx_22758];
        double ext_mem_unused_25289[Ry_22756 * Rx_22758];
        double mem_param_24907[Ry_22756 * Rx_22758];
        double mem_param_out_25290[Ry_22756 * Rx_22758];
        
        for (int32_t i_14 = 0; i_14 < Ry_22756 * Rx_22758; i_14++)
            mem_param_24907[i_14] = ext_mem_in_25288[i_14];
        for (int32_t i_15 = 0; i_15 < Ry_22756 * Rx_22758; i_15++)
            mem_param_out_25290[i_15] = mem_24935[i_15];
        for (int64_t i_23139 = 0; i_23139 < Tk_22759; i_23139++) {
            int64_t binop_y_23176 = i_23139 * binop_y_23175;
            int64_t ltid_y_23167 = sext_i32_i64(sext_i64_i32(ltid_pre_26461));
            int64_t ltid_x_23166 = sext_i32_i64(sext_i64_i32(ltid_pre_26462));
            int32_t ltid_flat_23168 = local_tid_26457;
            double mem_24910[Rx_22758];
            int64_t binop_y_23173 = Rx_22758 * ltid_y_23167;
            
            for (int64_t i_23171 = 0; i_23171 < Rx_22758; i_23171++) {
                int64_t binop_x_23174 = i_23171 + binop_y_23173;
                int64_t map_adjs_r_trsp_opaque_loc_ind_23177 = binop_x_23174 +
                        binop_y_23176;
                
                for (int64_t i_26529 = 0; i_26529 < (int64_t) 1; i_26529++) {
                    double tmp_26530;
                    
                    tmp_26530 = ((__local
                                  double *) mem_24763)[map_adjs_r_trsp_opaque_loc_ind_23177 +
                                                       i_26529];
                    mem_24910[i_23171 + i_26529] = tmp_26530;
                }
            }
            
            double mem_24914[Rx_22758];
            int64_t binop_x_23184 = Rx_22758 * ltid_x_23166;
            
            for (int64_t i_23182 = 0; i_23182 < Rx_22758; i_23182++) {
                int64_t binop_x_23185 = i_23182 + binop_x_23184;
                int64_t binop_y_23187 = binop_x_23185 * binop_y_23186;
                int64_t defunc_0_f_res_loc_ind_23188 = i_23139 + binop_y_23187;
                
                for (int64_t i_26532 = 0; i_26532 < (int64_t) 1; i_26532++) {
                    double tmp_26533;
                    
                    tmp_26533 = ((__local
                                  double *) mem_24766)[defunc_0_f_res_loc_ind_23188 +
                                                       i_26532];
                    mem_24914[i_23182 + i_26532] = tmp_26533;
                }
            }
            for (int64_t i_26534 = 0; i_26534 < Rx_22758; i_26534++) {
                double tmp_26535;
                
                tmp_26535 = mem_24910[i_26534];
                mem_24920[i_26534] = tmp_26535;
            }
            for (int64_t i_26536 = 0; i_26536 < Rx_22758; i_26536++) {
                double tmp_26537;
                
                tmp_26537 = mem_24914[i_26536];
                mem_24924[i_26536] = tmp_26537;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_23227 = sext_i32_i64(sext_i64_i32(ltid_pre_26461));
            int64_t ltid_x_23226 = sext_i32_i64(sext_i64_i32(ltid_pre_26462));
            int32_t ltid_flat_23228 = local_tid_26457;
            int64_t binop_y_23239 = Ry_22756 * ltid_y_23227;
            int64_t binop_y_23243 = Rx_22758 * ltid_x_23226;
            
            for (int64_t i_23233 = 0; i_23233 < Ry_22756; i_23233++) {
                int64_t binop_x_23238 = iii_22786 + i_23233;
                int64_t cmpop_x_23240 = binop_x_23238 + binop_y_23239;
                bool binop_x_23241 = slt64(cmpop_x_23240, d_16570);
                
                for (int64_t i_23236 = 0; i_23236 < Rx_22758; i_23236++) {
                    int64_t binop_x_23242 = jjj_22787 + i_23236;
                    int64_t cmpop_x_23244 = binop_x_23242 + binop_y_23243;
                    bool binop_y_23245 = slt64(cmpop_x_23244, d_16570);
                    bool cond_23246 = binop_x_23241 && binop_y_23245;
                    
                    if (cond_23246) {
                        double a_23248;
                        
                        a_23248 = mem_24920[i_23233];
                        
                        double b_23249;
                        
                        b_23249 = mem_24924[i_23236];
                        
                        double c_23250;
                        
                        c_23250 = mem_param_24907[i_23233 * Rx_22758 + i_23236];
                        
                        double binop_y_adj_23253 = a_23248 * b_23249;
                        double binlam_res_23257 = c_23250 + binop_y_adj_23253;
                        
                        mem_param_24907[i_23233 * Rx_22758 + i_23236] =
                            binlam_res_23257;
                    }
                }
            }
            for (int64_t i_26540 = 0; i_26540 < Ry_22756; i_26540++) {
                for (int64_t i_26541 = 0; i_26541 < Rx_22758; i_26541++) {
                    double tmp_26542;
                    
                    tmp_26542 = mem_param_24907[i_26540 * Rx_22758 + i_26541];
                    mem_param_out_25290[i_26540 * Rx_22758 + i_26541] =
                        tmp_26542;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            double mem_param_tmp_26525[Ry_22756 * Rx_22758];
            
            for (int32_t i_16 = 0; i_16 < Ry_22756 * Rx_22758; i_16++)
                mem_param_tmp_26525[i_16] = mem_param_out_25290[i_16];
            
            double mem_param_out_tmp_26526[Ry_22756 * Rx_22758];
            
            for (int32_t i_17 = 0; i_17 < Ry_22756 * Rx_22758; i_17++)
                mem_param_out_tmp_26526[i_17] = mem_param_24907[i_17];
            for (int32_t i_18 = 0; i_18 < Ry_22756 * Rx_22758; i_18++)
                mem_param_24907[i_18] = mem_param_tmp_26525[i_18];
            for (int32_t i_19 = 0; i_19 < Ry_22756 * Rx_22758; i_19++)
                mem_param_out_25290[i_19] = mem_param_out_tmp_26526[i_19];
        }
        for (int32_t i_20 = 0; i_20 < Ry_22756 * Rx_22758; i_20++)
            ext_mem_24936[i_20] = mem_param_24907[i_20];
        for (int32_t i_21 = 0; i_21 < Ry_22756 * Rx_22758; i_21++)
            ext_mem_unused_25289[i_21] = mem_param_out_25290[i_21];
        for (int64_t i_26543 = 0; i_26543 < Ry_22756; i_26543++) {
            for (int64_t i_26544 = 0; i_26544 < Rx_22758; i_26544++) {
                double tmp_26545;
                
                tmp_26545 = ext_mem_24936[i_26543 * Rx_22758 + i_26544];
                mem_25219[i_26543 * Rx_22758 + i_26544] = tmp_26545;
            }
        }
    }
    
    int64_t ltid_y_23286 = sext_i32_i64(sext_i64_i32(ltid_pre_26461));
    int64_t ltid_x_23285 = sext_i32_i64(sext_i64_i32(ltid_pre_26462));
    int32_t ltid_flat_23287 = local_tid_26457;
    int64_t binop_y_23289 = Ry_22756 * ltid_y_23286;
    int64_t ii_23290 = iii_22786 + binop_y_23289;
    int64_t binop_y_23291 = Rx_22758 * ltid_x_23285;
    int64_t jj_23292 = jjj_22787 + binop_y_23291;
    
    for (int64_t i_23294 = 0; i_23294 < Ry_22756; i_23294++) {
        int64_t gtid_23301 = ii_23290 + i_23294;
        bool binop_x_23303 = slt64(gtid_23301, d_16570);
        
        for (int64_t i_23297 = 0; i_23297 < Rx_22758; i_23297++) {
            int64_t gtid_23302 = jj_23292 + i_23297;
            bool binop_y_23304 = slt64(gtid_23302, d_16570);
            bool cond_23305 = binop_x_23303 && binop_y_23304;
            
            if (cond_23305) {
                double redomap_elm_23299;
                
                redomap_elm_23299 = mem_25219[i_23294 * Rx_22758 + i_23297];
                // UpdateAcc
                {
                    int64_t idx_21253 = gtid_22210;
                    int64_t idx_21254 = gtid_23301;
                    int64_t idx_21255 = gtid_23302;
                    
                    if (((sle64((int64_t) 0, gtid_22210) && slt64(gtid_22210,
                                                                  k_16569)) &&
                         (sle64((int64_t) 0, gtid_23301) && slt64(gtid_23301,
                                                                  d_16570))) &&
                        (sle64((int64_t) 0, gtid_23302) && slt64(gtid_23302,
                                                                 d_16570))) {
                        double x_21256;
                        double y_21257 = redomap_elm_23299;
                        double old_26548;
                        
                        old_26548 = atomic_fadd_f64_global(&((volatile __global
                                                              double *) mem_24741)[gtid_22210 *
                                                                                   (d_16570 *
                                                                                    d_16570) +
                                                                                   gtid_23301 *
                                                                                   d_16570 +
                                                                                   gtid_23302],
                                                           (double) y_21257);
                    }
                }
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_26457 == 0) { }
    
  error_10:
    return;
    #undef Ty_22755
    #undef Ry_22756
    #undef Tx_22757
    #undef Rx_22758
    #undef Tk_22759
    #undef tk_div_tx_22760
    #undef TxRx_22762
    #undef TyRy_22763
    #undef a_loc_szz_22768
    #undef b_loc_szz_22773
    #undef tk_rk_22774
    #undef binop_y_22950
    #undef binop_y_22961
}
__kernel void calculate_jacobianzisegmap_intragroup_23343(__global
                                                          int *global_failure,
                                                          uint mem_24958_backing_offset_0,
                                                          uint mem_24955_backing_offset_1,
                                                          int64_t k_16569,
                                                          int64_t d_16570,
                                                          int64_t n_16572,
                                                          int64_t gridDim_t_23334,
                                                          int64_t gridDim_y_23335,
                                                          int64_t gridDim_x_23336,
                                                          __global
                                                          unsigned char *ext_mem_24078,
                                                          __global
                                                          unsigned char *mem_24736,
                                                          __global
                                                          unsigned char *mem_24746)
{
    #define Ty_23314 (calculate_jacobianziTy_23311)
    #define Ry_23315 (calculate_jacobianziRy_23313)
    #define Tx_23316 (calculate_jacobianziTx_23310)
    #define Rx_23317 (calculate_jacobianziRx_23312)
    #define Tk_23318 (calculate_jacobianziTk_23309)
    #define tk_div_tx_23319 (sdiv_up64(calculate_jacobianziTk_23309, calculate_jacobianziTx_23310))
    #define TxRx_23321 (calculate_jacobianziTx_23310 * calculate_jacobianziRx_23312)
    #define TyRy_23322 (calculate_jacobianziTy_23311 * calculate_jacobianziRy_23313)
    #define a_loc_szz_23327 (calculate_jacobianziTk_23309 * (calculate_jacobianziTy_23311 * calculate_jacobianziRy_23313) + smax64(calculate_jacobianziTk_23309, calculate_jacobianziTy_23311 * calculate_jacobianziRy_23313))
    #define b_loc_szz_23332 (smax64(calculate_jacobianziTk_23309, calculate_jacobianziTy_23311 * calculate_jacobianziRy_23313) + calculate_jacobianziTk_23309 * (calculate_jacobianziTx_23310 * calculate_jacobianziRx_23312))
    #define tk_rk_23333 ((int64_t) 8 * calculate_jacobianziTk_23309)
    #define binop_y_23509 ((int64_t) 1 + calculate_jacobianziTk_23309)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *mem_24958_backing_1 =
                           &shared_mem[mem_24958_backing_offset_0];
    volatile unsigned char *mem_24955_backing_0 =
                           &shared_mem[mem_24955_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26551;
    int32_t local_tid_26552;
    int64_t group_sizze_26555;
    int32_t wave_sizze_26554;
    int32_t group_tid_26553;
    
    global_tid_26551 = get_global_id(0);
    local_tid_26552 = get_local_id(0);
    group_sizze_26555 = get_local_size(0);
    wave_sizze_26554 = LOCKSTEP_WIDTH;
    group_tid_26553 = get_group_id(0);
    
    int32_t gid_flat_23343 = group_tid_26553;
    int64_t slice_26558 = Tx_23316;
    int64_t slice_26559 = Ty_23314 * slice_26558;
    int64_t ltid_pre_26556 = squot64(sext_i32_i64(local_tid_26552),
                                     slice_26558);
    int64_t remnant_26560 = sext_i32_i64(local_tid_26552) - ltid_pre_26556 *
            slice_26558;
    int64_t ltid_pre_26557 = remnant_26560;
    int64_t remnant_26561 = remnant_26560 - ltid_pre_26557;
    int64_t slice_26564 = Tx_23316;
    int64_t slice_26565 = Tx_23316 * slice_26564;
    int64_t ltid_pre_26562 = squot64(sext_i32_i64(local_tid_26552),
                                     slice_26564);
    int64_t remnant_26566 = sext_i32_i64(local_tid_26552) - ltid_pre_26562 *
            slice_26564;
    int64_t ltid_pre_26563 = remnant_26566;
    int64_t remnant_26567 = remnant_26566 - ltid_pre_26563;
    int64_t slice_26568 = gridDim_x_23336;
    int64_t slice_26569 = gridDim_y_23335 * slice_26568;
    int64_t slice_26570 = gridDim_t_23334 * slice_26569;
    int64_t slice_26571 = k_16569 * slice_26570;
    int64_t gtid_22169 = squot64(sext_i32_i64(group_tid_26553), slice_26570);
    int64_t remnant_26572 = sext_i32_i64(group_tid_26553) - gtid_22169 *
            slice_26570;
    int64_t gid_t_23344 = squot64(remnant_26572, slice_26569);
    int64_t remnant_26573 = remnant_26572 - gid_t_23344 * slice_26569;
    int64_t gid_y_23341 = squot64(remnant_26573, slice_26568);
    int64_t remnant_26574 = remnant_26573 - gid_y_23341 * slice_26568;
    int64_t gid_x_23342 = remnant_26574;
    int64_t remnant_26575 = remnant_26574 - gid_x_23342;
    int64_t iii_23345 = TyRy_23322 * gid_y_23341;
    int64_t jjj_23346 = TxRx_23321 * gid_x_23342;
    int64_t ttt_23347 = tk_rk_23333 * gid_t_23344;
    double mem_24952[Ry_23315 * Rx_23317];
    int64_t ltid_y_23360 = sext_i32_i64(sext_i64_i32(ltid_pre_26556));
    int64_t ltid_x_23359 = sext_i32_i64(sext_i64_i32(ltid_pre_26557));
    int32_t ltid_flat_23361 = local_tid_26552;
    double mem_24943[Ry_23315 * Rx_23317];
    
    for (int64_t i_23364 = 0; i_23364 < Ry_23315; i_23364++) {
        for (int64_t i_23367 = 0; i_23367 < Rx_23317; i_23367++) {
            mem_24943[i_23364 * Rx_23317 + i_23367] = 0.0;
        }
    }
    for (int64_t i_26578 = 0; i_26578 < Ry_23315; i_26578++) {
        for (int64_t i_26579 = 0; i_26579 < Rx_23317; i_26579++) {
            double tmp_26580;
            
            tmp_26580 = mem_24943[i_26578 * Rx_23317 + i_26579];
            mem_24952[i_26578 * Rx_23317 + i_26579] = tmp_26580;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local unsigned char *mem_24955;
    
    mem_24955 = (__local unsigned char *) mem_24955_backing_0;
    
    __local unsigned char *mem_24958;
    
    mem_24958 = (__local unsigned char *) mem_24958_backing_1;
    
    int64_t elems_on_t_23373 = d_16570 - ttt_23347;
    int64_t tiles_on_t_23374 = squot64(elems_on_t_23373, Tk_23318);
    int64_t full_tiles_23375 = smin64((int64_t) 8, tiles_on_t_23374);
    int64_t binop_x_23380 = (int64_t) 8 * gid_t_23344;
    double mem_25029[Rx_23317];
    double mem_25033[Rx_23317];
    double mem_25044[Ry_23315 * Rx_23317];
    double ext_mem_25048[Ry_23315 * Rx_23317];
    double mem_param_24959[Ry_23315 * Rx_23317];
    
    for (int32_t i_2 = 0; i_2 < Ry_23315 * Rx_23317; i_2++)
        mem_param_24959[i_2] = mem_24952[i_2];
    for (int64_t i_23376 = 0; i_23376 < full_tiles_23375; i_23376++) {
        int64_t off_t_23381 = i_23376 + binop_x_23380;
        int64_t kk_23382 = Tk_23318 * off_t_23381;
        
        for (int64_t i_23383 = 0; i_23383 < Rx_23317; i_23383++) {
            int64_t binop_y_23410 = Tx_23316 * i_23383;
            
            for (int64_t i_23385 = 0; i_23385 < tk_div_tx_23319; i_23385++) {
                int64_t binop_y_23408 = Tx_23316 * i_23385;
                int64_t ltid_y_23406 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26562));
                int64_t ltid_x_23407 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26563));
                int32_t ltid_flat_23405 = local_tid_26552;
                int64_t k_23409 = ltid_x_23407 + binop_y_23408;
                int64_t i_23411 = ltid_y_23406 + binop_y_23410;
                int64_t gtid_23412 = iii_23345 + i_23411;
                int64_t map_adjs_r_seqdim_idx_23413 = kk_23382 + k_23409;
                bool cond_23414 = slt64(gtid_23412, n_16572);
                double map_adjs_r_elem_23415;
                
                if (cond_23414) {
                    double A_elem_23417;
                    
                    A_elem_23417 = ((__global double *) mem_24736)[gtid_22169 *
                                                                   (d_16570 *
                                                                    n_16572) +
                                                                   gtid_23412 *
                                                                   d_16570 +
                                                                   map_adjs_r_seqdim_idx_23413];
                    map_adjs_r_elem_23415 = A_elem_23417;
                } else {
                    map_adjs_r_elem_23415 = 0.0;
                }
                
                bool cond_23419 = slt64(k_23409, Tk_23318);
                int64_t map_adjs_r_loc_ind_23420;
                
                if (cond_23419) {
                    int64_t binop_y_23421 = (int64_t) 1 + Tk_23318;
                    int64_t binop_y_23422 = i_23411 * binop_y_23421;
                    int64_t loc_fi_23423 = k_23409 + binop_y_23422;
                    
                    map_adjs_r_loc_ind_23420 = loc_fi_23423;
                } else {
                    map_adjs_r_loc_ind_23420 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, map_adjs_r_loc_ind_23420) &&
                    slt64(map_adjs_r_loc_ind_23420, a_loc_szz_23327)) {
                    ((__local double *) mem_24955)[map_adjs_r_loc_ind_23420] =
                        map_adjs_r_elem_23415;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_23428 = 0; i_23428 < Rx_23317; i_23428++) {
            int64_t binop_y_23455 = Tx_23316 * i_23428;
            
            for (int64_t i_23430 = 0; i_23430 < tk_div_tx_23319; i_23430++) {
                int64_t binop_y_23453 = Tx_23316 * i_23430;
                int64_t ltid_y_23451 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26562));
                int64_t ltid_x_23452 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26563));
                int32_t ltid_flat_23450 = local_tid_26552;
                int64_t k_23454 = ltid_x_23452 + binop_y_23453;
                int64_t i_23456 = ltid_y_23451 + binop_y_23455;
                int64_t gtid_23457 = jjj_23346 + i_23456;
                int64_t defunc_4_map_res_seqdim_idx_23458 = kk_23382 + k_23454;
                bool cond_23459 = slt64(gtid_23457, d_16570);
                double defunc_4_map_res_elem_23460;
                
                if (cond_23459) {
                    double A_elem_23462;
                    
                    A_elem_23462 = ((__global
                                     double *) ext_mem_24078)[gtid_22169 *
                                                              (d_16570 *
                                                               d_16570) +
                                                              gtid_23457 *
                                                              d_16570 +
                                                              defunc_4_map_res_seqdim_idx_23458];
                    defunc_4_map_res_elem_23460 = A_elem_23462;
                } else {
                    defunc_4_map_res_elem_23460 = 0.0;
                }
                
                bool cond_23464 = slt64(k_23454, Tk_23318);
                int64_t defunc_4_map_res_loc_ind_23465;
                
                if (cond_23464) {
                    int64_t binop_y_23466 = (int64_t) 1 + Tk_23318;
                    int64_t binop_y_23467 = i_23456 * binop_y_23466;
                    int64_t loc_fi_23468 = k_23454 + binop_y_23467;
                    
                    defunc_4_map_res_loc_ind_23465 = loc_fi_23468;
                } else {
                    defunc_4_map_res_loc_ind_23465 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, defunc_4_map_res_loc_ind_23465) &&
                    slt64(defunc_4_map_res_loc_ind_23465, b_loc_szz_23332)) {
                    ((__local
                      double *) mem_24958)[defunc_4_map_res_loc_ind_23465] =
                        defunc_4_map_res_elem_23460;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        double mem_param_in_25296[Ry_23315 * Rx_23317];
        
        for (int64_t i_26589 = 0; i_26589 < Ry_23315; i_26589++) {
            for (int64_t i_26590 = 0; i_26590 < Rx_23317; i_26590++) {
                double tmp_26591;
                
                tmp_26591 = mem_param_24959[i_26589 * Rx_23317 + i_26590];
                mem_param_in_25296[i_26589 * Rx_23317 + i_26590] = tmp_26591;
            }
        }
        
        double ext_mem_25045[Ry_23315 * Rx_23317];
        double ext_mem_unused_25297[Ry_23315 * Rx_23317];
        double mem_param_25016[Ry_23315 * Rx_23317];
        double mem_param_out_25298[Ry_23315 * Rx_23317];
        
        for (int32_t i_3 = 0; i_3 < Ry_23315 * Rx_23317; i_3++)
            mem_param_25016[i_3] = mem_param_in_25296[i_3];
        for (int32_t i_4 = 0; i_4 < Ry_23315 * Rx_23317; i_4++)
            mem_param_out_25298[i_4] = mem_25044[i_4];
        for (int64_t i_23473 = 0; i_23473 < Tk_23318; i_23473++) {
            int64_t ltid_y_23501 = sext_i32_i64(sext_i64_i32(ltid_pre_26556));
            int64_t ltid_x_23500 = sext_i32_i64(sext_i64_i32(ltid_pre_26557));
            int32_t ltid_flat_23502 = local_tid_26552;
            double mem_25019[Rx_23317];
            int64_t binop_x_23507 = Rx_23317 * ltid_y_23501;
            
            for (int64_t i_23505 = 0; i_23505 < Rx_23317; i_23505++) {
                int64_t binop_x_23508 = i_23505 + binop_x_23507;
                int64_t binop_y_23510 = binop_x_23508 * binop_y_23509;
                int64_t map_adjs_r_loc_ind_23511 = i_23473 + binop_y_23510;
                
                for (int64_t i_26596 = 0; i_26596 < (int64_t) 1; i_26596++) {
                    double tmp_26597;
                    
                    tmp_26597 = ((__local
                                  double *) mem_24955)[map_adjs_r_loc_ind_23511 +
                                                       i_26596];
                    mem_25019[i_23505 + i_26596] = tmp_26597;
                }
            }
            
            double mem_25023[Rx_23317];
            int64_t binop_x_23518 = Rx_23317 * ltid_x_23500;
            
            for (int64_t i_23516 = 0; i_23516 < Rx_23317; i_23516++) {
                int64_t binop_x_23519 = i_23516 + binop_x_23518;
                int64_t binop_y_23521 = binop_y_23509 * binop_x_23519;
                int64_t defunc_4_map_res_loc_ind_23522 = i_23473 +
                        binop_y_23521;
                
                for (int64_t i_26599 = 0; i_26599 < (int64_t) 1; i_26599++) {
                    double tmp_26600;
                    
                    tmp_26600 = ((__local
                                  double *) mem_24958)[defunc_4_map_res_loc_ind_23522 +
                                                       i_26599];
                    mem_25023[i_23516 + i_26599] = tmp_26600;
                }
            }
            for (int64_t i_26601 = 0; i_26601 < Rx_23317; i_26601++) {
                double tmp_26602;
                
                tmp_26602 = mem_25019[i_26601];
                mem_25029[i_26601] = tmp_26602;
            }
            for (int64_t i_26603 = 0; i_26603 < Rx_23317; i_26603++) {
                double tmp_26604;
                
                tmp_26604 = mem_25023[i_26603];
                mem_25033[i_26603] = tmp_26604;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_23561 = sext_i32_i64(sext_i64_i32(ltid_pre_26556));
            int64_t ltid_x_23560 = sext_i32_i64(sext_i64_i32(ltid_pre_26557));
            int32_t ltid_flat_23562 = local_tid_26552;
            int64_t binop_y_23573 = Ry_23315 * ltid_y_23561;
            int64_t binop_y_23577 = Rx_23317 * ltid_x_23560;
            
            for (int64_t i_23567 = 0; i_23567 < Ry_23315; i_23567++) {
                int64_t binop_x_23572 = iii_23345 + i_23567;
                int64_t cmpop_x_23574 = binop_x_23572 + binop_y_23573;
                bool binop_x_23575 = slt64(cmpop_x_23574, n_16572);
                
                for (int64_t i_23570 = 0; i_23570 < Rx_23317; i_23570++) {
                    int64_t binop_x_23576 = jjj_23346 + i_23570;
                    int64_t cmpop_x_23578 = binop_x_23576 + binop_y_23577;
                    bool binop_y_23579 = slt64(cmpop_x_23578, d_16570);
                    bool cond_23580 = binop_x_23575 && binop_y_23579;
                    
                    if (cond_23580) {
                        double a_23582;
                        
                        a_23582 = mem_25029[i_23567];
                        
                        double b_23583;
                        
                        b_23583 = mem_25033[i_23570];
                        
                        double c_23584;
                        
                        c_23584 = mem_param_25016[i_23567 * Rx_23317 + i_23570];
                        
                        double binop_x_adj_23587 = a_23582 * b_23583;
                        double binlam_res_23591 = c_23584 + binop_x_adj_23587;
                        
                        mem_param_25016[i_23567 * Rx_23317 + i_23570] =
                            binlam_res_23591;
                    }
                }
            }
            for (int64_t i_26607 = 0; i_26607 < Ry_23315; i_26607++) {
                for (int64_t i_26608 = 0; i_26608 < Rx_23317; i_26608++) {
                    double tmp_26609;
                    
                    tmp_26609 = mem_param_25016[i_26607 * Rx_23317 + i_26608];
                    mem_param_out_25298[i_26607 * Rx_23317 + i_26608] =
                        tmp_26609;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            double mem_param_tmp_26592[Ry_23315 * Rx_23317];
            
            for (int32_t i_5 = 0; i_5 < Ry_23315 * Rx_23317; i_5++)
                mem_param_tmp_26592[i_5] = mem_param_out_25298[i_5];
            
            double mem_param_out_tmp_26593[Ry_23315 * Rx_23317];
            
            for (int32_t i_6 = 0; i_6 < Ry_23315 * Rx_23317; i_6++)
                mem_param_out_tmp_26593[i_6] = mem_param_25016[i_6];
            for (int32_t i_7 = 0; i_7 < Ry_23315 * Rx_23317; i_7++)
                mem_param_25016[i_7] = mem_param_tmp_26592[i_7];
            for (int32_t i_8 = 0; i_8 < Ry_23315 * Rx_23317; i_8++)
                mem_param_out_25298[i_8] = mem_param_out_tmp_26593[i_8];
        }
        for (int32_t i_9 = 0; i_9 < Ry_23315 * Rx_23317; i_9++)
            ext_mem_25045[i_9] = mem_param_25016[i_9];
        for (int32_t i_10 = 0; i_10 < Ry_23315 * Rx_23317; i_10++)
            ext_mem_unused_25297[i_10] = mem_param_out_25298[i_10];
        
        double mem_param_tmp_26581[Ry_23315 * Rx_23317];
        
        for (int32_t i_11 = 0; i_11 < Ry_23315 * Rx_23317; i_11++)
            mem_param_tmp_26581[i_11] = ext_mem_25045[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_23315 * Rx_23317; i_12++)
            mem_param_24959[i_12] = mem_param_tmp_26581[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_23315 * Rx_23317; i_13++)
        ext_mem_25048[i_13] = mem_param_24959[i_13];
    
    bool binop_x_23600 = full_tiles_23375 == (int64_t) 8;
    int64_t binop_x_23601 = Tk_23318 * full_tiles_23375;
    int64_t cmpop_y_23602 = ttt_23347 + binop_x_23601;
    bool binop_y_23603 = d_16570 == cmpop_y_23602;
    bool cond_23604 = binop_x_23600 || binop_y_23603;
    double mem_25196[Ry_23315 * Rx_23317];
    double mem_25112[Rx_23317];
    double mem_25116[Rx_23317];
    double ext_mem_in_25304[Ry_23315 * Rx_23317];
    double mem_25127[Ry_23315 * Rx_23317];
    
    if (cond_23604) {
        for (int64_t i_26610 = 0; i_26610 < Ry_23315; i_26610++) {
            for (int64_t i_26611 = 0; i_26611 < Rx_23317; i_26611++) {
                double tmp_26612;
                
                tmp_26612 = ext_mem_25048[i_26610 * Rx_23317 + i_26611];
                mem_25196[i_26610 * Rx_23317 + i_26611] = tmp_26612;
            }
        }
    } else {
        int64_t off_t_23606 = full_tiles_23375 + binop_x_23380;
        int64_t kk_23607 = Tk_23318 * off_t_23606;
        
        for (int64_t i_23608 = 0; i_23608 < Rx_23317; i_23608++) {
            int64_t binop_y_23635 = Tx_23316 * i_23608;
            
            for (int64_t i_23610 = 0; i_23610 < tk_div_tx_23319; i_23610++) {
                int64_t binop_y_23633 = Tx_23316 * i_23610;
                int64_t ltid_y_23631 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26562));
                int64_t ltid_x_23632 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26563));
                int32_t ltid_flat_23630 = local_tid_26552;
                int64_t k_23634 = ltid_x_23632 + binop_y_23633;
                int64_t i_23636 = ltid_y_23631 + binop_y_23635;
                int64_t gtid_23637 = iii_23345 + i_23636;
                int64_t map_adjs_r_seqdim_idx_23638 = kk_23607 + k_23634;
                bool cond_23639 = slt64(gtid_23637, n_16572);
                double map_adjs_r_elem_23640;
                
                if (cond_23639) {
                    double A_elem_23642;
                    
                    A_elem_23642 = ((__global double *) mem_24736)[gtid_22169 *
                                                                   (d_16570 *
                                                                    n_16572) +
                                                                   gtid_23637 *
                                                                   d_16570 +
                                                                   map_adjs_r_seqdim_idx_23638];
                    map_adjs_r_elem_23640 = A_elem_23642;
                } else {
                    map_adjs_r_elem_23640 = 0.0;
                }
                
                bool cond_23644 = slt64(k_23634, Tk_23318);
                int64_t map_adjs_r_loc_ind_23645;
                
                if (cond_23644) {
                    int64_t binop_y_23646 = (int64_t) 1 + Tk_23318;
                    int64_t binop_y_23647 = i_23636 * binop_y_23646;
                    int64_t loc_fi_23648 = k_23634 + binop_y_23647;
                    
                    map_adjs_r_loc_ind_23645 = loc_fi_23648;
                } else {
                    map_adjs_r_loc_ind_23645 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, map_adjs_r_loc_ind_23645) &&
                    slt64(map_adjs_r_loc_ind_23645, a_loc_szz_23327)) {
                    ((__local double *) mem_24955)[map_adjs_r_loc_ind_23645] =
                        map_adjs_r_elem_23640;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_23653 = 0; i_23653 < Rx_23317; i_23653++) {
            int64_t binop_y_23680 = Tx_23316 * i_23653;
            
            for (int64_t i_23655 = 0; i_23655 < tk_div_tx_23319; i_23655++) {
                int64_t binop_y_23678 = Tx_23316 * i_23655;
                int64_t ltid_y_23676 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26562));
                int64_t ltid_x_23677 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_26563));
                int32_t ltid_flat_23675 = local_tid_26552;
                int64_t k_23679 = ltid_x_23677 + binop_y_23678;
                int64_t i_23681 = ltid_y_23676 + binop_y_23680;
                int64_t gtid_23682 = jjj_23346 + i_23681;
                int64_t defunc_4_map_res_seqdim_idx_23683 = kk_23607 + k_23679;
                bool cond_23684 = slt64(gtid_23682, d_16570);
                double defunc_4_map_res_elem_23685;
                
                if (cond_23684) {
                    double A_elem_23687;
                    
                    A_elem_23687 = ((__global
                                     double *) ext_mem_24078)[gtid_22169 *
                                                              (d_16570 *
                                                               d_16570) +
                                                              gtid_23682 *
                                                              d_16570 +
                                                              defunc_4_map_res_seqdim_idx_23683];
                    defunc_4_map_res_elem_23685 = A_elem_23687;
                } else {
                    defunc_4_map_res_elem_23685 = 0.0;
                }
                
                bool cond_23689 = slt64(k_23679, Tk_23318);
                int64_t defunc_4_map_res_loc_ind_23690;
                
                if (cond_23689) {
                    int64_t binop_y_23691 = (int64_t) 1 + Tk_23318;
                    int64_t binop_y_23692 = i_23681 * binop_y_23691;
                    int64_t loc_fi_23693 = k_23679 + binop_y_23692;
                    
                    defunc_4_map_res_loc_ind_23690 = loc_fi_23693;
                } else {
                    defunc_4_map_res_loc_ind_23690 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, defunc_4_map_res_loc_ind_23690) &&
                    slt64(defunc_4_map_res_loc_ind_23690, b_loc_szz_23332)) {
                    ((__local
                      double *) mem_24958)[defunc_4_map_res_loc_ind_23690] =
                        defunc_4_map_res_elem_23685;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        int64_t binop_y_23734 = (int64_t) 1 + Tk_23318;
        int64_t bytes_25101 = (int64_t) 8 * Rx_23317;
        
        for (int64_t i_26617 = 0; i_26617 < Ry_23315; i_26617++) {
            for (int64_t i_26618 = 0; i_26618 < Rx_23317; i_26618++) {
                double tmp_26619;
                
                tmp_26619 = ext_mem_25048[i_26617 * Rx_23317 + i_26618];
                ext_mem_in_25304[i_26617 * Rx_23317 + i_26618] = tmp_26619;
            }
        }
        
        double ext_mem_25128[Ry_23315 * Rx_23317];
        double ext_mem_unused_25305[Ry_23315 * Rx_23317];
        double mem_param_25099[Ry_23315 * Rx_23317];
        double mem_param_out_25306[Ry_23315 * Rx_23317];
        
        for (int32_t i_14 = 0; i_14 < Ry_23315 * Rx_23317; i_14++)
            mem_param_25099[i_14] = ext_mem_in_25304[i_14];
        for (int32_t i_15 = 0; i_15 < Ry_23315 * Rx_23317; i_15++)
            mem_param_out_25306[i_15] = mem_25127[i_15];
        for (int64_t i_23698 = 0; i_23698 < Tk_23318; i_23698++) {
            int64_t ltid_y_23726 = sext_i32_i64(sext_i64_i32(ltid_pre_26556));
            int64_t ltid_x_23725 = sext_i32_i64(sext_i64_i32(ltid_pre_26557));
            int32_t ltid_flat_23727 = local_tid_26552;
            double mem_25102[Rx_23317];
            int64_t binop_x_23732 = Rx_23317 * ltid_y_23726;
            
            for (int64_t i_23730 = 0; i_23730 < Rx_23317; i_23730++) {
                int64_t binop_x_23733 = i_23730 + binop_x_23732;
                int64_t binop_y_23735 = binop_x_23733 * binop_y_23734;
                int64_t map_adjs_r_loc_ind_23736 = i_23698 + binop_y_23735;
                
                for (int64_t i_26624 = 0; i_26624 < (int64_t) 1; i_26624++) {
                    double tmp_26625;
                    
                    tmp_26625 = ((__local
                                  double *) mem_24955)[map_adjs_r_loc_ind_23736 +
                                                       i_26624];
                    mem_25102[i_23730 + i_26624] = tmp_26625;
                }
            }
            
            double mem_25106[Rx_23317];
            int64_t binop_x_23743 = Rx_23317 * ltid_x_23725;
            
            for (int64_t i_23741 = 0; i_23741 < Rx_23317; i_23741++) {
                int64_t binop_x_23744 = i_23741 + binop_x_23743;
                int64_t binop_y_23746 = binop_y_23734 * binop_x_23744;
                int64_t defunc_4_map_res_loc_ind_23747 = i_23698 +
                        binop_y_23746;
                
                for (int64_t i_26627 = 0; i_26627 < (int64_t) 1; i_26627++) {
                    double tmp_26628;
                    
                    tmp_26628 = ((__local
                                  double *) mem_24958)[defunc_4_map_res_loc_ind_23747 +
                                                       i_26627];
                    mem_25106[i_23741 + i_26627] = tmp_26628;
                }
            }
            for (int64_t i_26629 = 0; i_26629 < Rx_23317; i_26629++) {
                double tmp_26630;
                
                tmp_26630 = mem_25102[i_26629];
                mem_25112[i_26629] = tmp_26630;
            }
            for (int64_t i_26631 = 0; i_26631 < Rx_23317; i_26631++) {
                double tmp_26632;
                
                tmp_26632 = mem_25106[i_26631];
                mem_25116[i_26631] = tmp_26632;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_23786 = sext_i32_i64(sext_i64_i32(ltid_pre_26556));
            int64_t ltid_x_23785 = sext_i32_i64(sext_i64_i32(ltid_pre_26557));
            int32_t ltid_flat_23787 = local_tid_26552;
            int64_t binop_y_23798 = Ry_23315 * ltid_y_23786;
            int64_t binop_y_23802 = Rx_23317 * ltid_x_23785;
            
            for (int64_t i_23792 = 0; i_23792 < Ry_23315; i_23792++) {
                int64_t binop_x_23797 = iii_23345 + i_23792;
                int64_t cmpop_x_23799 = binop_x_23797 + binop_y_23798;
                bool binop_x_23800 = slt64(cmpop_x_23799, n_16572);
                
                for (int64_t i_23795 = 0; i_23795 < Rx_23317; i_23795++) {
                    int64_t binop_x_23801 = jjj_23346 + i_23795;
                    int64_t cmpop_x_23803 = binop_x_23801 + binop_y_23802;
                    bool binop_y_23804 = slt64(cmpop_x_23803, d_16570);
                    bool cond_23805 = binop_x_23800 && binop_y_23804;
                    
                    if (cond_23805) {
                        double a_23807;
                        
                        a_23807 = mem_25112[i_23792];
                        
                        double b_23808;
                        
                        b_23808 = mem_25116[i_23795];
                        
                        double c_23809;
                        
                        c_23809 = mem_param_25099[i_23792 * Rx_23317 + i_23795];
                        
                        double binop_x_adj_23812 = a_23807 * b_23808;
                        double binlam_res_23816 = c_23809 + binop_x_adj_23812;
                        
                        mem_param_25099[i_23792 * Rx_23317 + i_23795] =
                            binlam_res_23816;
                    }
                }
            }
            for (int64_t i_26635 = 0; i_26635 < Ry_23315; i_26635++) {
                for (int64_t i_26636 = 0; i_26636 < Rx_23317; i_26636++) {
                    double tmp_26637;
                    
                    tmp_26637 = mem_param_25099[i_26635 * Rx_23317 + i_26636];
                    mem_param_out_25306[i_26635 * Rx_23317 + i_26636] =
                        tmp_26637;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            double mem_param_tmp_26620[Ry_23315 * Rx_23317];
            
            for (int32_t i_16 = 0; i_16 < Ry_23315 * Rx_23317; i_16++)
                mem_param_tmp_26620[i_16] = mem_param_out_25306[i_16];
            
            double mem_param_out_tmp_26621[Ry_23315 * Rx_23317];
            
            for (int32_t i_17 = 0; i_17 < Ry_23315 * Rx_23317; i_17++)
                mem_param_out_tmp_26621[i_17] = mem_param_25099[i_17];
            for (int32_t i_18 = 0; i_18 < Ry_23315 * Rx_23317; i_18++)
                mem_param_25099[i_18] = mem_param_tmp_26620[i_18];
            for (int32_t i_19 = 0; i_19 < Ry_23315 * Rx_23317; i_19++)
                mem_param_out_25306[i_19] = mem_param_out_tmp_26621[i_19];
        }
        for (int32_t i_20 = 0; i_20 < Ry_23315 * Rx_23317; i_20++)
            ext_mem_25128[i_20] = mem_param_25099[i_20];
        for (int32_t i_21 = 0; i_21 < Ry_23315 * Rx_23317; i_21++)
            ext_mem_unused_25305[i_21] = mem_param_out_25306[i_21];
        for (int64_t i_26638 = 0; i_26638 < Ry_23315; i_26638++) {
            for (int64_t i_26639 = 0; i_26639 < Rx_23317; i_26639++) {
                double tmp_26640;
                
                tmp_26640 = ext_mem_25128[i_26638 * Rx_23317 + i_26639];
                mem_25196[i_26638 * Rx_23317 + i_26639] = tmp_26640;
            }
        }
    }
    
    int64_t ltid_y_23845 = sext_i32_i64(sext_i64_i32(ltid_pre_26556));
    int64_t ltid_x_23844 = sext_i32_i64(sext_i64_i32(ltid_pre_26557));
    int32_t ltid_flat_23846 = local_tid_26552;
    int64_t binop_y_23848 = Ry_23315 * ltid_y_23845;
    int64_t ii_23849 = iii_23345 + binop_y_23848;
    int64_t binop_y_23850 = Rx_23317 * ltid_x_23844;
    int64_t jj_23851 = jjj_23346 + binop_y_23850;
    
    for (int64_t i_23853 = 0; i_23853 < Ry_23315; i_23853++) {
        int64_t gtid_23860 = ii_23849 + i_23853;
        bool binop_x_23862 = slt64(gtid_23860, n_16572);
        
        for (int64_t i_23856 = 0; i_23856 < Rx_23317; i_23856++) {
            int64_t gtid_23861 = jj_23851 + i_23856;
            bool binop_y_23863 = slt64(gtid_23861, d_16570);
            bool cond_23864 = binop_x_23862 && binop_y_23863;
            
            if (cond_23864) {
                double redomap_elm_23858;
                
                redomap_elm_23858 = mem_25196[i_23853 * Rx_23317 + i_23856];
                // UpdateAcc
                {
                    int64_t idx_21280 = gtid_22169;
                    int64_t idx_21281 = gtid_23860;
                    int64_t idx_21282 = gtid_23861;
                    
                    if (((sle64((int64_t) 0, gtid_22169) && slt64(gtid_22169,
                                                                  k_16569)) &&
                         (sle64((int64_t) 0, gtid_23860) && slt64(gtid_23860,
                                                                  n_16572))) &&
                        (sle64((int64_t) 0, gtid_23861) && slt64(gtid_23861,
                                                                 d_16570))) {
                        double x_21283;
                        double y_21284 = redomap_elm_23858;
                        double old_26643;
                        
                        old_26643 = atomic_fadd_f64_global(&((volatile __global
                                                              double *) mem_24746)[gtid_22169 *
                                                                                   (d_16570 *
                                                                                    n_16572) +
                                                                                   gtid_23860 *
                                                                                   d_16570 +
                                                                                   gtid_23861],
                                                           (double) y_21284);
                    }
                }
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_26552 == 0) { }
    
  error_10:
    return;
    #undef Ty_23314
    #undef Ry_23315
    #undef Tx_23316
    #undef Rx_23317
    #undef Tk_23318
    #undef tk_div_tx_23319
    #undef TxRx_23321
    #undef TyRy_23322
    #undef a_loc_szz_23327
    #undef b_loc_szz_23332
    #undef tk_rk_23333
    #undef binop_y_23509
}
__kernel void calculate_jacobianzisegred_large_19485(__global
                                                     int *global_failure,
                                                     uint sync_arr_mem_25700_backing_offset_0,
                                                     uint red_arr_mem_25698_backing_offset_1,
                                                     int64_t k_16569,
                                                     int64_t d_16570,
                                                     int64_t n_16572,
                                                     int64_t num_groups_19478,
                                                     int64_t groups_per_segment_25684,
                                                     int64_t elements_per_thread_25685,
                                                     int64_t virt_num_groups_25686,
                                                     int64_t threads_per_segment_25688,
                                                     __global
                                                     unsigned char *mem_24368,
                                                     __global
                                                     unsigned char *mem_24372,
                                                     __global
                                                     unsigned char *mem_24378,
                                                     __global
                                                     unsigned char *segred_tmp_mem_25689,
                                                     __global
                                                     unsigned char *calculate_jacobianzicounter_mem_25691)
{
    #define segred_group_sizze_19477 (calculate_jacobianzisegred_group_sizze_19330)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_25700_backing_1 =
                           &shared_mem[sync_arr_mem_25700_backing_offset_0];
    volatile unsigned char *red_arr_mem_25698_backing_0 =
                           &shared_mem[red_arr_mem_25698_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25693;
    int32_t local_tid_25694;
    int64_t group_sizze_25697;
    int32_t wave_sizze_25696;
    int32_t group_tid_25695;
    
    global_tid_25693 = get_global_id(0);
    local_tid_25694 = get_local_id(0);
    group_sizze_25697 = get_local_size(0);
    wave_sizze_25696 = LOCKSTEP_WIDTH;
    group_tid_25695 = get_group_id(0);
    
    int32_t phys_tid_19485 = global_tid_25693;
    __local unsigned char *red_arr_mem_25698;
    
    red_arr_mem_25698 = (__local unsigned char *) red_arr_mem_25698_backing_0;
    
    __local unsigned char *sync_arr_mem_25700;
    
    sync_arr_mem_25700 = (__local unsigned char *) sync_arr_mem_25700_backing_1;
    
    int32_t phys_group_id_25702;
    
    phys_group_id_25702 = get_group_id(0);
    for (int32_t i_25703 = 0; i_25703 <
         sdiv_up32(sext_i64_i32(virt_num_groups_25686) - phys_group_id_25702,
                   sext_i64_i32(num_groups_19478)); i_25703++) {
        int32_t virt_group_id_25704 = phys_group_id_25702 + i_25703 *
                sext_i64_i32(num_groups_19478);
        int32_t flat_segment_id_25705 = squot32(virt_group_id_25704,
                                                sext_i64_i32(groups_per_segment_25684));
        int64_t global_tid_25706 = srem64(sext_i32_i64(virt_group_id_25704) *
                                          segred_group_sizze_19477 +
                                          sext_i32_i64(local_tid_25694),
                                          segred_group_sizze_19477 *
                                          groups_per_segment_25684);
        int64_t slice_25707 = d_16570;
        int64_t slice_25708 = n_16572 * slice_25707;
        int64_t slice_25709 = k_16569 * slice_25708;
        int64_t gtid_19481 = squot64(sext_i32_i64(flat_segment_id_25705),
                                     slice_25708);
        int64_t remnant_25710 = sext_i32_i64(flat_segment_id_25705) -
                gtid_19481 * slice_25708;
        int64_t gtid_19482 = squot64(remnant_25710, slice_25707);
        int64_t remnant_25711 = remnant_25710 - gtid_19482 * slice_25707;
        int64_t gtid_19483 = remnant_25711;
        int64_t remnant_25712 = remnant_25711 - gtid_19483;
        int64_t gtid_19484;
        double x_acc_25713;
        int64_t chunk_sizze_25714 = smin64(elements_per_thread_25685,
                                           sdiv_up64(d_16570 - global_tid_25706,
                                                     threads_per_segment_25688));
        double x_19486;
        double x_19487;
        
        // neutral-initialise the accumulators
        {
            x_acc_25713 = 0.0;
        }
        for (int64_t i_25718 = 0; i_25718 < chunk_sizze_25714; i_25718++) {
            gtid_19484 = global_tid_25706 + threads_per_segment_25688 * i_25718;
            // apply map function
            {
                double x_19493;
                
                x_19493 = ((__global double *) mem_24368)[gtid_19482 *
                                                          (d_16570 * k_16569) +
                                                          gtid_19481 * d_16570 +
                                                          gtid_19484];
                
                double x_19494;
                
                x_19494 = ((__global double *) mem_24372)[gtid_19481 *
                                                          (d_16570 * d_16570) +
                                                          gtid_19483 * d_16570 +
                                                          gtid_19484];
                
                double defunc_1_f_res_19495 = x_19493 * x_19494;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_19486 = x_acc_25713;
                }
                // load new values
                {
                    x_19487 = defunc_1_f_res_19495;
                }
                // apply reduction operator
                {
                    double defunc_1_op_res_19488 = x_19486 + x_19487;
                    
                    // store in accumulator
                    {
                        x_acc_25713 = defunc_1_op_res_19488;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_19486 = x_acc_25713;
            ((__local
              double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694)] =
                x_19486;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_25719;
        int32_t skip_waves_25720 = 1;
        double x_25715;
        double x_25716;
        
        offset_25719 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_25694,
                      sext_i64_i32(segred_group_sizze_19477))) {
                x_25715 = ((__local
                            double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694 +
                                                         offset_25719)];
            }
        }
        offset_25719 = 1;
        while (slt32(offset_25719, wave_sizze_25696)) {
            if (slt32(local_tid_25694 + offset_25719,
                      sext_i64_i32(segred_group_sizze_19477)) &&
                ((local_tid_25694 - squot32(local_tid_25694, wave_sizze_25696) *
                  wave_sizze_25696) & (2 * offset_25719 - 1)) == 0) {
                // read array element
                {
                    x_25716 = ((volatile __local
                                double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694 +
                                                             offset_25719)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25717 = x_25715 + x_25716;
                    
                    x_25715 = defunc_1_op_res_25717;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694)] =
                        x_25715;
                }
            }
            offset_25719 *= 2;
        }
        while (slt32(skip_waves_25720,
                     squot32(sext_i64_i32(segred_group_sizze_19477) +
                             wave_sizze_25696 - 1, wave_sizze_25696))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_25719 = skip_waves_25720 * wave_sizze_25696;
            if (slt32(local_tid_25694 + offset_25719,
                      sext_i64_i32(segred_group_sizze_19477)) &&
                ((local_tid_25694 - squot32(local_tid_25694, wave_sizze_25696) *
                  wave_sizze_25696) == 0 && (squot32(local_tid_25694,
                                                     wave_sizze_25696) & (2 *
                                                                          skip_waves_25720 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_25716 = ((__local
                                double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694 +
                                                             offset_25719)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25717 = x_25715 + x_25716;
                    
                    x_25715 = defunc_1_op_res_25717;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694)] =
                        x_25715;
                }
            }
            skip_waves_25720 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_25694) == (int64_t) 0) {
                x_acc_25713 = x_25715;
            }
        }
        if (groups_per_segment_25684 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_25694 == 0) {
                    ((__global double *) mem_24378)[gtid_19481 * (d_16570 *
                                                                  n_16572) +
                                                    gtid_19482 * d_16570 +
                                                    gtid_19483] = x_acc_25713;
                }
            }
        } else {
            int32_t old_counter_25721;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_25694 == 0) {
                    ((__global
                      double *) segred_tmp_mem_25689)[sext_i32_i64(virt_group_id_25704)] =
                        x_acc_25713;
                    mem_fence_global();
                    old_counter_25721 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_25691)[sext_i32_i64(srem32(flat_segment_id_25705,
                                                                                                                   10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_25700)[(int64_t) 0] =
                        old_counter_25721 == groups_per_segment_25684 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_25722;
            
            is_last_group_25722 = ((__local
                                    bool *) sync_arr_mem_25700)[(int64_t) 0];
            if (is_last_group_25722) {
                if (local_tid_25694 == 0) {
                    old_counter_25721 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_25691)[sext_i32_i64(srem32(flat_segment_id_25705,
                                                                                                                   10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_25684));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_25723 =
                            sdiv_up64(groups_per_segment_25684,
                                      segred_group_sizze_19477);
                    
                    x_19486 = 0.0;
                    for (int64_t i_25724 = 0; i_25724 < read_per_thread_25723;
                         i_25724++) {
                        int64_t group_res_id_25725 =
                                sext_i32_i64(local_tid_25694) *
                                read_per_thread_25723 + i_25724;
                        int64_t index_of_group_res_25726 =
                                sext_i32_i64(flat_segment_id_25705) *
                                groups_per_segment_25684 + group_res_id_25725;
                        
                        if (slt64(group_res_id_25725,
                                  groups_per_segment_25684)) {
                            x_19487 = ((__global
                                        double *) segred_tmp_mem_25689)[index_of_group_res_25726];
                            
                            double defunc_1_op_res_19488 = x_19486 + x_19487;
                            
                            x_19486 = defunc_1_op_res_19488;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694)] =
                    x_19486;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_25727;
                    int32_t skip_waves_25728 = 1;
                    double x_25715;
                    double x_25716;
                    
                    offset_25727 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_25694,
                                  sext_i64_i32(segred_group_sizze_19477))) {
                            x_25715 = ((__local
                                        double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694 +
                                                                     offset_25727)];
                        }
                    }
                    offset_25727 = 1;
                    while (slt32(offset_25727, wave_sizze_25696)) {
                        if (slt32(local_tid_25694 + offset_25727,
                                  sext_i64_i32(segred_group_sizze_19477)) &&
                            ((local_tid_25694 - squot32(local_tid_25694,
                                                        wave_sizze_25696) *
                              wave_sizze_25696) & (2 * offset_25727 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_25716 = ((volatile __local
                                            double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694 +
                                                                         offset_25727)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25717 = x_25715 +
                                       x_25716;
                                
                                x_25715 = defunc_1_op_res_25717;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694)] =
                                    x_25715;
                            }
                        }
                        offset_25727 *= 2;
                    }
                    while (slt32(skip_waves_25728,
                                 squot32(sext_i64_i32(segred_group_sizze_19477) +
                                         wave_sizze_25696 - 1,
                                         wave_sizze_25696))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_25727 = skip_waves_25728 * wave_sizze_25696;
                        if (slt32(local_tid_25694 + offset_25727,
                                  sext_i64_i32(segred_group_sizze_19477)) &&
                            ((local_tid_25694 - squot32(local_tid_25694,
                                                        wave_sizze_25696) *
                              wave_sizze_25696) == 0 &&
                             (squot32(local_tid_25694, wave_sizze_25696) & (2 *
                                                                            skip_waves_25728 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_25716 = ((__local
                                            double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694 +
                                                                         offset_25727)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25717 = x_25715 +
                                       x_25716;
                                
                                x_25715 = defunc_1_op_res_25717;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_25698)[sext_i32_i64(local_tid_25694)] =
                                    x_25715;
                            }
                        }
                        skip_waves_25728 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_25694 == 0) {
                            ((__global double *) mem_24378)[gtid_19481 *
                                                            (d_16570 *
                                                             n_16572) +
                                                            gtid_19482 *
                                                            d_16570 +
                                                            gtid_19483] =
                                x_25715;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_19477
}
__kernel void calculate_jacobianzisegred_large_19629(__global
                                                     int *global_failure,
                                                     uint sync_arr_mem_25805_backing_offset_0,
                                                     uint red_arr_mem_25803_backing_offset_1,
                                                     int64_t k_16569,
                                                     int64_t d_16570,
                                                     int64_t n_16572,
                                                     int64_t num_groups_19623,
                                                     int64_t groups_per_segment_25789,
                                                     int64_t elements_per_thread_25790,
                                                     int64_t virt_num_groups_25791,
                                                     int64_t threads_per_segment_25793,
                                                     __global
                                                     unsigned char *ext_mem_24393,
                                                     __global
                                                     unsigned char *mem_24430,
                                                     __global
                                                     unsigned char *segred_tmp_mem_25794,
                                                     __global
                                                     unsigned char *calculate_jacobianzicounter_mem_25796)
{
    #define segred_group_sizze_19622 (calculate_jacobianzisegred_group_sizze_19563)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_25805_backing_1 =
                           &shared_mem[sync_arr_mem_25805_backing_offset_0];
    volatile unsigned char *red_arr_mem_25803_backing_0 =
                           &shared_mem[red_arr_mem_25803_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25798;
    int32_t local_tid_25799;
    int64_t group_sizze_25802;
    int32_t wave_sizze_25801;
    int32_t group_tid_25800;
    
    global_tid_25798 = get_global_id(0);
    local_tid_25799 = get_local_id(0);
    group_sizze_25802 = get_local_size(0);
    wave_sizze_25801 = LOCKSTEP_WIDTH;
    group_tid_25800 = get_group_id(0);
    
    int32_t phys_tid_19629 = global_tid_25798;
    __local unsigned char *red_arr_mem_25803;
    
    red_arr_mem_25803 = (__local unsigned char *) red_arr_mem_25803_backing_0;
    
    __local unsigned char *sync_arr_mem_25805;
    
    sync_arr_mem_25805 = (__local unsigned char *) sync_arr_mem_25805_backing_1;
    
    int32_t phys_group_id_25807;
    
    phys_group_id_25807 = get_group_id(0);
    for (int32_t i_25808 = 0; i_25808 <
         sdiv_up32(sext_i64_i32(virt_num_groups_25791) - phys_group_id_25807,
                   sext_i64_i32(num_groups_19623)); i_25808++) {
        int32_t virt_group_id_25809 = phys_group_id_25807 + i_25808 *
                sext_i64_i32(num_groups_19623);
        int32_t flat_segment_id_25810 = squot32(virt_group_id_25809,
                                                sext_i64_i32(groups_per_segment_25789));
        int64_t global_tid_25811 = srem64(sext_i32_i64(virt_group_id_25809) *
                                          segred_group_sizze_19622 +
                                          sext_i32_i64(local_tid_25799),
                                          segred_group_sizze_19622 *
                                          groups_per_segment_25789);
        int64_t slice_25812 = n_16572;
        int64_t slice_25813 = k_16569 * slice_25812;
        int64_t gtid_19626 = squot64(sext_i32_i64(flat_segment_id_25810),
                                     slice_25812);
        int64_t remnant_25814 = sext_i32_i64(flat_segment_id_25810) -
                gtid_19626 * slice_25812;
        int64_t gtid_19627 = remnant_25814;
        int64_t remnant_25815 = remnant_25814 - gtid_19627;
        int64_t gtid_19628;
        double x_acc_25816;
        int64_t chunk_sizze_25817 = smin64(elements_per_thread_25790,
                                           sdiv_up64(d_16570 - global_tid_25811,
                                                     threads_per_segment_25793));
        double x_19630;
        double x_19631;
        
        // neutral-initialise the accumulators
        {
            x_acc_25816 = 0.0;
        }
        for (int64_t i_25821 = 0; i_25821 < chunk_sizze_25817; i_25821++) {
            gtid_19628 = global_tid_25811 + threads_per_segment_25793 * i_25821;
            // apply map function
            {
                double x_19635;
                
                x_19635 = ((__global double *) ext_mem_24393)[gtid_19626 *
                                                              (d_16570 *
                                                               n_16572) +
                                                              gtid_19627 *
                                                              d_16570 +
                                                              gtid_19628];
                
                double defunc_0_f_res_19636 = x_19635 * x_19635;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_19630 = x_acc_25816;
                }
                // load new values
                {
                    x_19631 = defunc_0_f_res_19636;
                }
                // apply reduction operator
                {
                    double defunc_1_op_res_19632 = x_19630 + x_19631;
                    
                    // store in accumulator
                    {
                        x_acc_25816 = defunc_1_op_res_19632;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_19630 = x_acc_25816;
            ((__local
              double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799)] =
                x_19630;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_25822;
        int32_t skip_waves_25823 = 1;
        double x_25818;
        double x_25819;
        
        offset_25822 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_25799,
                      sext_i64_i32(segred_group_sizze_19622))) {
                x_25818 = ((__local
                            double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799 +
                                                         offset_25822)];
            }
        }
        offset_25822 = 1;
        while (slt32(offset_25822, wave_sizze_25801)) {
            if (slt32(local_tid_25799 + offset_25822,
                      sext_i64_i32(segred_group_sizze_19622)) &&
                ((local_tid_25799 - squot32(local_tid_25799, wave_sizze_25801) *
                  wave_sizze_25801) & (2 * offset_25822 - 1)) == 0) {
                // read array element
                {
                    x_25819 = ((volatile __local
                                double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799 +
                                                             offset_25822)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25820 = x_25818 + x_25819;
                    
                    x_25818 = defunc_1_op_res_25820;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799)] =
                        x_25818;
                }
            }
            offset_25822 *= 2;
        }
        while (slt32(skip_waves_25823,
                     squot32(sext_i64_i32(segred_group_sizze_19622) +
                             wave_sizze_25801 - 1, wave_sizze_25801))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_25822 = skip_waves_25823 * wave_sizze_25801;
            if (slt32(local_tid_25799 + offset_25822,
                      sext_i64_i32(segred_group_sizze_19622)) &&
                ((local_tid_25799 - squot32(local_tid_25799, wave_sizze_25801) *
                  wave_sizze_25801) == 0 && (squot32(local_tid_25799,
                                                     wave_sizze_25801) & (2 *
                                                                          skip_waves_25823 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_25819 = ((__local
                                double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799 +
                                                             offset_25822)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25820 = x_25818 + x_25819;
                    
                    x_25818 = defunc_1_op_res_25820;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799)] =
                        x_25818;
                }
            }
            skip_waves_25823 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_25799) == (int64_t) 0) {
                x_acc_25816 = x_25818;
            }
        }
        if (groups_per_segment_25789 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_25799 == 0) {
                    ((__global double *) mem_24430)[gtid_19626 * n_16572 +
                                                    gtid_19627] = x_acc_25816;
                }
            }
        } else {
            int32_t old_counter_25824;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_25799 == 0) {
                    ((__global
                      double *) segred_tmp_mem_25794)[sext_i32_i64(virt_group_id_25809)] =
                        x_acc_25816;
                    mem_fence_global();
                    old_counter_25824 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_25796)[sext_i32_i64(srem32(flat_segment_id_25810,
                                                                                                                   10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_25805)[(int64_t) 0] =
                        old_counter_25824 == groups_per_segment_25789 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_25825;
            
            is_last_group_25825 = ((__local
                                    bool *) sync_arr_mem_25805)[(int64_t) 0];
            if (is_last_group_25825) {
                if (local_tid_25799 == 0) {
                    old_counter_25824 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_25796)[sext_i32_i64(srem32(flat_segment_id_25810,
                                                                                                                   10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_25789));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_25826 =
                            sdiv_up64(groups_per_segment_25789,
                                      segred_group_sizze_19622);
                    
                    x_19630 = 0.0;
                    for (int64_t i_25827 = 0; i_25827 < read_per_thread_25826;
                         i_25827++) {
                        int64_t group_res_id_25828 =
                                sext_i32_i64(local_tid_25799) *
                                read_per_thread_25826 + i_25827;
                        int64_t index_of_group_res_25829 =
                                sext_i32_i64(flat_segment_id_25810) *
                                groups_per_segment_25789 + group_res_id_25828;
                        
                        if (slt64(group_res_id_25828,
                                  groups_per_segment_25789)) {
                            x_19631 = ((__global
                                        double *) segred_tmp_mem_25794)[index_of_group_res_25829];
                            
                            double defunc_1_op_res_19632 = x_19630 + x_19631;
                            
                            x_19630 = defunc_1_op_res_19632;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799)] =
                    x_19630;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_25830;
                    int32_t skip_waves_25831 = 1;
                    double x_25818;
                    double x_25819;
                    
                    offset_25830 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_25799,
                                  sext_i64_i32(segred_group_sizze_19622))) {
                            x_25818 = ((__local
                                        double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799 +
                                                                     offset_25830)];
                        }
                    }
                    offset_25830 = 1;
                    while (slt32(offset_25830, wave_sizze_25801)) {
                        if (slt32(local_tid_25799 + offset_25830,
                                  sext_i64_i32(segred_group_sizze_19622)) &&
                            ((local_tid_25799 - squot32(local_tid_25799,
                                                        wave_sizze_25801) *
                              wave_sizze_25801) & (2 * offset_25830 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_25819 = ((volatile __local
                                            double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799 +
                                                                         offset_25830)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25820 = x_25818 +
                                       x_25819;
                                
                                x_25818 = defunc_1_op_res_25820;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799)] =
                                    x_25818;
                            }
                        }
                        offset_25830 *= 2;
                    }
                    while (slt32(skip_waves_25831,
                                 squot32(sext_i64_i32(segred_group_sizze_19622) +
                                         wave_sizze_25801 - 1,
                                         wave_sizze_25801))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_25830 = skip_waves_25831 * wave_sizze_25801;
                        if (slt32(local_tid_25799 + offset_25830,
                                  sext_i64_i32(segred_group_sizze_19622)) &&
                            ((local_tid_25799 - squot32(local_tid_25799,
                                                        wave_sizze_25801) *
                              wave_sizze_25801) == 0 &&
                             (squot32(local_tid_25799, wave_sizze_25801) & (2 *
                                                                            skip_waves_25831 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_25819 = ((__local
                                            double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799 +
                                                                         offset_25830)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25820 = x_25818 +
                                       x_25819;
                                
                                x_25818 = defunc_1_op_res_25820;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_25803)[sext_i32_i64(local_tid_25799)] =
                                    x_25818;
                            }
                        }
                        skip_waves_25831 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_25799 == 0) {
                            ((__global double *) mem_24430)[gtid_19626 *
                                                            n_16572 +
                                                            gtid_19627] =
                                x_25818;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_19622
}
__kernel void calculate_jacobianzisegred_large_19798(__global
                                                     int *global_failure,
                                                     uint sync_arr_mem_25920_backing_offset_0,
                                                     uint red_arr_mem_25918_backing_offset_1,
                                                     int64_t k_16569,
                                                     int64_t d_16570,
                                                     int64_t dz2080U_16571,
                                                     int64_t num_groups_19793,
                                                     int64_t groups_per_segment_25904,
                                                     int64_t elements_per_thread_25905,
                                                     int64_t virt_num_groups_25906,
                                                     int64_t threads_per_segment_25908,
                                                     __global
                                                     unsigned char *icf_mem_24019,
                                                     __global
                                                     unsigned char *mem_24460,
                                                     __global
                                                     unsigned char *segred_tmp_mem_25909,
                                                     __global
                                                     unsigned char *calculate_jacobianzicounter_mem_25911)
{
    #define segred_group_sizze_19792 (calculate_jacobianzisegred_group_sizze_19722)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_25920_backing_1 =
                           &shared_mem[sync_arr_mem_25920_backing_offset_0];
    volatile unsigned char *red_arr_mem_25918_backing_0 =
                           &shared_mem[red_arr_mem_25918_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25913;
    int32_t local_tid_25914;
    int64_t group_sizze_25917;
    int32_t wave_sizze_25916;
    int32_t group_tid_25915;
    
    global_tid_25913 = get_global_id(0);
    local_tid_25914 = get_local_id(0);
    group_sizze_25917 = get_local_size(0);
    wave_sizze_25916 = LOCKSTEP_WIDTH;
    group_tid_25915 = get_group_id(0);
    
    int32_t phys_tid_19798 = global_tid_25913;
    __local unsigned char *red_arr_mem_25918;
    
    red_arr_mem_25918 = (__local unsigned char *) red_arr_mem_25918_backing_0;
    
    __local unsigned char *sync_arr_mem_25920;
    
    sync_arr_mem_25920 = (__local unsigned char *) sync_arr_mem_25920_backing_1;
    
    int32_t phys_group_id_25922;
    
    phys_group_id_25922 = get_group_id(0);
    for (int32_t i_25923 = 0; i_25923 <
         sdiv_up32(sext_i64_i32(virt_num_groups_25906) - phys_group_id_25922,
                   sext_i64_i32(num_groups_19793)); i_25923++) {
        int32_t virt_group_id_25924 = phys_group_id_25922 + i_25923 *
                sext_i64_i32(num_groups_19793);
        int32_t flat_segment_id_25925 = squot32(virt_group_id_25924,
                                                sext_i64_i32(groups_per_segment_25904));
        int64_t global_tid_25926 = srem64(sext_i32_i64(virt_group_id_25924) *
                                          segred_group_sizze_19792 +
                                          sext_i32_i64(local_tid_25914),
                                          segred_group_sizze_19792 *
                                          groups_per_segment_25904);
        int64_t slice_25927 = k_16569;
        int64_t gtid_19796 = sext_i32_i64(flat_segment_id_25925);
        int64_t remnant_25928 = sext_i32_i64(flat_segment_id_25925) -
                gtid_19796;
        int64_t gtid_19797;
        double x_acc_25929;
        int64_t chunk_sizze_25930 = smin64(elements_per_thread_25905,
                                           sdiv_up64(d_16570 - global_tid_25926,
                                                     threads_per_segment_25908));
        double x_19799;
        double x_19800;
        
        // neutral-initialise the accumulators
        {
            x_acc_25929 = 0.0;
        }
        for (int64_t i_25934 = 0; i_25934 < chunk_sizze_25930; i_25934++) {
            gtid_19797 = global_tid_25926 + threads_per_segment_25908 * i_25934;
            // apply map function
            {
                double x_19803;
                
                x_19803 = ((__global double *) icf_mem_24019)[gtid_19796 *
                                                              dz2080U_16571 +
                                                              gtid_19797];
                // save map-out results
                { }
                // load accumulator
                {
                    x_19799 = x_acc_25929;
                }
                // load new values
                {
                    x_19800 = x_19803;
                }
                // apply reduction operator
                {
                    double defunc_1_op_res_19801 = x_19799 + x_19800;
                    
                    // store in accumulator
                    {
                        x_acc_25929 = defunc_1_op_res_19801;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_19799 = x_acc_25929;
            ((__local
              double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914)] =
                x_19799;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_25935;
        int32_t skip_waves_25936 = 1;
        double x_25931;
        double x_25932;
        
        offset_25935 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_25914,
                      sext_i64_i32(segred_group_sizze_19792))) {
                x_25931 = ((__local
                            double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914 +
                                                         offset_25935)];
            }
        }
        offset_25935 = 1;
        while (slt32(offset_25935, wave_sizze_25916)) {
            if (slt32(local_tid_25914 + offset_25935,
                      sext_i64_i32(segred_group_sizze_19792)) &&
                ((local_tid_25914 - squot32(local_tid_25914, wave_sizze_25916) *
                  wave_sizze_25916) & (2 * offset_25935 - 1)) == 0) {
                // read array element
                {
                    x_25932 = ((volatile __local
                                double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914 +
                                                             offset_25935)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25933 = x_25931 + x_25932;
                    
                    x_25931 = defunc_1_op_res_25933;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914)] =
                        x_25931;
                }
            }
            offset_25935 *= 2;
        }
        while (slt32(skip_waves_25936,
                     squot32(sext_i64_i32(segred_group_sizze_19792) +
                             wave_sizze_25916 - 1, wave_sizze_25916))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_25935 = skip_waves_25936 * wave_sizze_25916;
            if (slt32(local_tid_25914 + offset_25935,
                      sext_i64_i32(segred_group_sizze_19792)) &&
                ((local_tid_25914 - squot32(local_tid_25914, wave_sizze_25916) *
                  wave_sizze_25916) == 0 && (squot32(local_tid_25914,
                                                     wave_sizze_25916) & (2 *
                                                                          skip_waves_25936 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_25932 = ((__local
                                double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914 +
                                                             offset_25935)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25933 = x_25931 + x_25932;
                    
                    x_25931 = defunc_1_op_res_25933;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914)] =
                        x_25931;
                }
            }
            skip_waves_25936 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_25914) == (int64_t) 0) {
                x_acc_25929 = x_25931;
            }
        }
        if (groups_per_segment_25904 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_25914 == 0) {
                    ((__global double *) mem_24460)[gtid_19796] = x_acc_25929;
                }
            }
        } else {
            int32_t old_counter_25937;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_25914 == 0) {
                    ((__global
                      double *) segred_tmp_mem_25909)[sext_i32_i64(virt_group_id_25924)] =
                        x_acc_25929;
                    mem_fence_global();
                    old_counter_25937 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_25911)[sext_i32_i64(srem32(flat_segment_id_25925,
                                                                                                                   10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_25920)[(int64_t) 0] =
                        old_counter_25937 == groups_per_segment_25904 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_25938;
            
            is_last_group_25938 = ((__local
                                    bool *) sync_arr_mem_25920)[(int64_t) 0];
            if (is_last_group_25938) {
                if (local_tid_25914 == 0) {
                    old_counter_25937 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_25911)[sext_i32_i64(srem32(flat_segment_id_25925,
                                                                                                                   10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_25904));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_25939 =
                            sdiv_up64(groups_per_segment_25904,
                                      segred_group_sizze_19792);
                    
                    x_19799 = 0.0;
                    for (int64_t i_25940 = 0; i_25940 < read_per_thread_25939;
                         i_25940++) {
                        int64_t group_res_id_25941 =
                                sext_i32_i64(local_tid_25914) *
                                read_per_thread_25939 + i_25940;
                        int64_t index_of_group_res_25942 =
                                sext_i32_i64(flat_segment_id_25925) *
                                groups_per_segment_25904 + group_res_id_25941;
                        
                        if (slt64(group_res_id_25941,
                                  groups_per_segment_25904)) {
                            x_19800 = ((__global
                                        double *) segred_tmp_mem_25909)[index_of_group_res_25942];
                            
                            double defunc_1_op_res_19801 = x_19799 + x_19800;
                            
                            x_19799 = defunc_1_op_res_19801;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914)] =
                    x_19799;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_25943;
                    int32_t skip_waves_25944 = 1;
                    double x_25931;
                    double x_25932;
                    
                    offset_25943 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_25914,
                                  sext_i64_i32(segred_group_sizze_19792))) {
                            x_25931 = ((__local
                                        double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914 +
                                                                     offset_25943)];
                        }
                    }
                    offset_25943 = 1;
                    while (slt32(offset_25943, wave_sizze_25916)) {
                        if (slt32(local_tid_25914 + offset_25943,
                                  sext_i64_i32(segred_group_sizze_19792)) &&
                            ((local_tid_25914 - squot32(local_tid_25914,
                                                        wave_sizze_25916) *
                              wave_sizze_25916) & (2 * offset_25943 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_25932 = ((volatile __local
                                            double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914 +
                                                                         offset_25943)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25933 = x_25931 +
                                       x_25932;
                                
                                x_25931 = defunc_1_op_res_25933;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914)] =
                                    x_25931;
                            }
                        }
                        offset_25943 *= 2;
                    }
                    while (slt32(skip_waves_25944,
                                 squot32(sext_i64_i32(segred_group_sizze_19792) +
                                         wave_sizze_25916 - 1,
                                         wave_sizze_25916))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_25943 = skip_waves_25944 * wave_sizze_25916;
                        if (slt32(local_tid_25914 + offset_25943,
                                  sext_i64_i32(segred_group_sizze_19792)) &&
                            ((local_tid_25914 - squot32(local_tid_25914,
                                                        wave_sizze_25916) *
                              wave_sizze_25916) == 0 &&
                             (squot32(local_tid_25914, wave_sizze_25916) & (2 *
                                                                            skip_waves_25944 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_25932 = ((__local
                                            double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914 +
                                                                         offset_25943)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25933 = x_25931 +
                                       x_25932;
                                
                                x_25931 = defunc_1_op_res_25933;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_25918)[sext_i32_i64(local_tid_25914)] =
                                    x_25931;
                            }
                        }
                        skip_waves_25944 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_25914 == 0) {
                            ((__global double *) mem_24460)[gtid_19796] =
                                x_25931;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_19792
}
__kernel void calculate_jacobianzisegred_large_20546(__global
                                                     int *global_failure,
                                                     uint sync_arr_mem_26171_backing_offset_0,
                                                     uint red_arr_mem_26169_backing_offset_1,
                                                     uint red_arr_mem_26167_backing_offset_2,
                                                     int64_t k_16569,
                                                     int64_t n_16572,
                                                     int64_t num_groups_20539,
                                                     int64_t groups_per_segment_26151,
                                                     int64_t elements_per_thread_26152,
                                                     int64_t virt_num_groups_26153,
                                                     int64_t threads_per_segment_26155,
                                                     __global
                                                     unsigned char *alphas_mem_24017,
                                                     __global
                                                     unsigned char *ext_mem_24474,
                                                     __global
                                                     unsigned char *mem_24651,
                                                     __global
                                                     unsigned char *mem_24655,
                                                     __global
                                                     unsigned char *mem_24658,
                                                     __global
                                                     unsigned char *mem_24662,
                                                     __global
                                                     unsigned char *segred_tmp_mem_26156,
                                                     __global
                                                     unsigned char *segred_tmp_mem_26158,
                                                     __global
                                                     unsigned char *calculate_jacobianzicounter_mem_26160)
{
    #define segred_group_sizze_20538 (calculate_jacobianzisegred_group_sizze_20247)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_26171_backing_2 =
                           &shared_mem[sync_arr_mem_26171_backing_offset_0];
    volatile unsigned char *red_arr_mem_26169_backing_1 =
                           &shared_mem[red_arr_mem_26169_backing_offset_1];
    volatile unsigned char *red_arr_mem_26167_backing_0 =
                           &shared_mem[red_arr_mem_26167_backing_offset_2];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26162;
    int32_t local_tid_26163;
    int64_t group_sizze_26166;
    int32_t wave_sizze_26165;
    int32_t group_tid_26164;
    
    global_tid_26162 = get_global_id(0);
    local_tid_26163 = get_local_id(0);
    group_sizze_26166 = get_local_size(0);
    wave_sizze_26165 = LOCKSTEP_WIDTH;
    group_tid_26164 = get_group_id(0);
    
    int32_t phys_tid_20546 = global_tid_26162;
    __local unsigned char *red_arr_mem_26167;
    
    red_arr_mem_26167 = (__local unsigned char *) red_arr_mem_26167_backing_0;
    
    __local unsigned char *red_arr_mem_26169;
    
    red_arr_mem_26169 = (__local unsigned char *) red_arr_mem_26169_backing_1;
    
    __local unsigned char *sync_arr_mem_26171;
    
    sync_arr_mem_26171 = (__local unsigned char *) sync_arr_mem_26171_backing_2;
    
    int32_t phys_group_id_26173;
    
    phys_group_id_26173 = get_group_id(0);
    for (int32_t i_26174 = 0; i_26174 <
         sdiv_up32(sext_i64_i32(virt_num_groups_26153) - phys_group_id_26173,
                   sext_i64_i32(num_groups_20539)); i_26174++) {
        int32_t virt_group_id_26175 = phys_group_id_26173 + i_26174 *
                sext_i64_i32(num_groups_20539);
        int32_t flat_segment_id_26176 = squot32(virt_group_id_26175,
                                                sext_i64_i32(groups_per_segment_26151));
        int64_t global_tid_26177 = srem64(sext_i32_i64(virt_group_id_26175) *
                                          segred_group_sizze_20538 +
                                          sext_i32_i64(local_tid_26163),
                                          segred_group_sizze_20538 *
                                          groups_per_segment_26151);
        int64_t slice_26178 = n_16572;
        int64_t gtid_20544 = sext_i32_i64(flat_segment_id_26176);
        int64_t remnant_26179 = sext_i32_i64(flat_segment_id_26176) -
                gtid_20544;
        int64_t gtid_20545;
        double acc_v_acc_26180;
        int64_t acc_i_acc_26181;
        int64_t chunk_sizze_26182 = smin64(elements_per_thread_26152,
                                           sdiv_up64(k_16569 - global_tid_26177,
                                                     threads_per_segment_26155));
        double acc_v_20547;
        int64_t acc_i_20548;
        double v_20549;
        int64_t i_20550;
        
        // neutral-initialise the accumulators
        {
            acc_v_acc_26180 = -INFINITY;
            acc_i_acc_26181 = (int64_t) -1;
        }
        for (int64_t i_26195 = 0; i_26195 < chunk_sizze_26182; i_26195++) {
            gtid_20545 = global_tid_26177 + threads_per_segment_26155 * i_26195;
            // apply map function
            {
                double x_20560;
                
                x_20560 = ((__global double *) mem_24651)[gtid_20544 * k_16569 +
                                                          gtid_20545];
                
                double x_wasfree_20561;
                
                x_wasfree_20561 = ((__global
                                    double *) alphas_mem_24017)[gtid_20545];
                
                double x_wasfree_20562;
                
                x_wasfree_20562 = ((__global
                                    double *) ext_mem_24474)[gtid_20545];
                
                double x_20564 = -0.5 * x_20560;
                double x_20565 = x_wasfree_20561 + x_20564;
                double defunc_0_f_res_20566 = x_wasfree_20562 + x_20565;
                
                // save map-out results
                {
                    ((__global double *) mem_24662)[gtid_20544 * k_16569 +
                                                    gtid_20545] =
                        defunc_0_f_res_20566;
                }
                // load accumulator
                {
                    acc_v_20547 = acc_v_acc_26180;
                    acc_i_20548 = acc_i_acc_26181;
                }
                // load new values
                {
                    v_20549 = defunc_0_f_res_20566;
                    i_20550 = gtid_20545;
                }
                // apply reduction operator
                {
                    bool cond_20551 = acc_v_20547 == v_20549;
                    double idx_res_20552;
                    int64_t idx_res_20553;
                    
                    if (cond_20551) {
                        int64_t x_20554 = smin64(acc_i_20548, i_20550);
                        
                        idx_res_20552 = acc_v_20547;
                        idx_res_20553 = x_20554;
                    } else {
                        double y_20555 = fmax64(acc_v_20547, v_20549);
                        bool cond_20556 = acc_v_20547 == y_20555;
                        double x_20557;
                        
                        if (cond_20556) {
                            x_20557 = acc_v_20547;
                        } else {
                            x_20557 = v_20549;
                        }
                        
                        int64_t x_20558;
                        
                        if (cond_20556) {
                            x_20558 = acc_i_20548;
                        } else {
                            x_20558 = i_20550;
                        }
                        idx_res_20552 = x_20557;
                        idx_res_20553 = x_20558;
                    }
                    // store in accumulator
                    {
                        acc_v_acc_26180 = idx_res_20552;
                        acc_i_acc_26181 = idx_res_20553;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            acc_v_20547 = acc_v_acc_26180;
            acc_i_20548 = acc_i_acc_26181;
            ((__local
              double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163)] =
                acc_v_20547;
            ((__local
              int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163)] =
                acc_i_20548;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_26196;
        int32_t skip_waves_26197 = 1;
        double acc_v_26183;
        int64_t acc_i_26184;
        double v_26185;
        int64_t i_26186;
        
        offset_26196 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_26163,
                      sext_i64_i32(segred_group_sizze_20538))) {
                acc_v_26183 = ((__local
                                double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163 +
                                                             offset_26196)];
                acc_i_26184 = ((__local
                                int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163 +
                                                              offset_26196)];
            }
        }
        offset_26196 = 1;
        while (slt32(offset_26196, wave_sizze_26165)) {
            if (slt32(local_tid_26163 + offset_26196,
                      sext_i64_i32(segred_group_sizze_20538)) &&
                ((local_tid_26163 - squot32(local_tid_26163, wave_sizze_26165) *
                  wave_sizze_26165) & (2 * offset_26196 - 1)) == 0) {
                // read array element
                {
                    v_26185 = ((volatile __local
                                double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163 +
                                                             offset_26196)];
                    i_26186 = ((volatile __local
                                int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163 +
                                                              offset_26196)];
                }
                // apply reduction operation
                {
                    bool cond_26187 = acc_v_26183 == v_26185;
                    double idx_res_26188;
                    int64_t idx_res_26189;
                    
                    if (cond_26187) {
                        int64_t x_26190 = smin64(acc_i_26184, i_26186);
                        
                        idx_res_26188 = acc_v_26183;
                        idx_res_26189 = x_26190;
                    } else {
                        double y_26191 = fmax64(acc_v_26183, v_26185);
                        bool cond_26192 = acc_v_26183 == y_26191;
                        double x_26193;
                        
                        if (cond_26192) {
                            x_26193 = acc_v_26183;
                        } else {
                            x_26193 = v_26185;
                        }
                        
                        int64_t x_26194;
                        
                        if (cond_26192) {
                            x_26194 = acc_i_26184;
                        } else {
                            x_26194 = i_26186;
                        }
                        idx_res_26188 = x_26193;
                        idx_res_26189 = x_26194;
                    }
                    acc_v_26183 = idx_res_26188;
                    acc_i_26184 = idx_res_26189;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163)] =
                        acc_v_26183;
                    ((volatile __local
                      int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163)] =
                        acc_i_26184;
                }
            }
            offset_26196 *= 2;
        }
        while (slt32(skip_waves_26197,
                     squot32(sext_i64_i32(segred_group_sizze_20538) +
                             wave_sizze_26165 - 1, wave_sizze_26165))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_26196 = skip_waves_26197 * wave_sizze_26165;
            if (slt32(local_tid_26163 + offset_26196,
                      sext_i64_i32(segred_group_sizze_20538)) &&
                ((local_tid_26163 - squot32(local_tid_26163, wave_sizze_26165) *
                  wave_sizze_26165) == 0 && (squot32(local_tid_26163,
                                                     wave_sizze_26165) & (2 *
                                                                          skip_waves_26197 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    v_26185 = ((__local
                                double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163 +
                                                             offset_26196)];
                    i_26186 = ((__local
                                int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163 +
                                                              offset_26196)];
                }
                // apply reduction operation
                {
                    bool cond_26187 = acc_v_26183 == v_26185;
                    double idx_res_26188;
                    int64_t idx_res_26189;
                    
                    if (cond_26187) {
                        int64_t x_26190 = smin64(acc_i_26184, i_26186);
                        
                        idx_res_26188 = acc_v_26183;
                        idx_res_26189 = x_26190;
                    } else {
                        double y_26191 = fmax64(acc_v_26183, v_26185);
                        bool cond_26192 = acc_v_26183 == y_26191;
                        double x_26193;
                        
                        if (cond_26192) {
                            x_26193 = acc_v_26183;
                        } else {
                            x_26193 = v_26185;
                        }
                        
                        int64_t x_26194;
                        
                        if (cond_26192) {
                            x_26194 = acc_i_26184;
                        } else {
                            x_26194 = i_26186;
                        }
                        idx_res_26188 = x_26193;
                        idx_res_26189 = x_26194;
                    }
                    acc_v_26183 = idx_res_26188;
                    acc_i_26184 = idx_res_26189;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163)] =
                        acc_v_26183;
                    ((__local
                      int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163)] =
                        acc_i_26184;
                }
            }
            skip_waves_26197 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_26163) == (int64_t) 0) {
                acc_v_acc_26180 = acc_v_26183;
                acc_i_acc_26181 = acc_i_26184;
            }
        }
        if (groups_per_segment_26151 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_26163 == 0) {
                    ((__global double *) mem_24655)[gtid_20544] =
                        acc_v_acc_26180;
                    ((__global int64_t *) mem_24658)[gtid_20544] =
                        acc_i_acc_26181;
                }
            }
        } else {
            int32_t old_counter_26198;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_26163 == 0) {
                    ((__global
                      double *) segred_tmp_mem_26156)[sext_i32_i64(virt_group_id_26175)] =
                        acc_v_acc_26180;
                    ((__global
                      int64_t *) segred_tmp_mem_26158)[sext_i32_i64(virt_group_id_26175)] =
                        acc_i_acc_26181;
                    mem_fence_global();
                    old_counter_26198 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_26160)[sext_i32_i64(srem32(flat_segment_id_26176,
                                                                                                                   10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_26171)[(int64_t) 0] =
                        old_counter_26198 == groups_per_segment_26151 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_26199;
            
            is_last_group_26199 = ((__local
                                    bool *) sync_arr_mem_26171)[(int64_t) 0];
            if (is_last_group_26199) {
                if (local_tid_26163 == 0) {
                    old_counter_26198 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_26160)[sext_i32_i64(srem32(flat_segment_id_26176,
                                                                                                                   10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_26151));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_26200 =
                            sdiv_up64(groups_per_segment_26151,
                                      segred_group_sizze_20538);
                    
                    acc_v_20547 = -INFINITY;
                    acc_i_20548 = (int64_t) -1;
                    for (int64_t i_26201 = 0; i_26201 < read_per_thread_26200;
                         i_26201++) {
                        int64_t group_res_id_26202 =
                                sext_i32_i64(local_tid_26163) *
                                read_per_thread_26200 + i_26201;
                        int64_t index_of_group_res_26203 =
                                sext_i32_i64(flat_segment_id_26176) *
                                groups_per_segment_26151 + group_res_id_26202;
                        
                        if (slt64(group_res_id_26202,
                                  groups_per_segment_26151)) {
                            v_20549 = ((__global
                                        double *) segred_tmp_mem_26156)[index_of_group_res_26203];
                            i_20550 = ((__global
                                        int64_t *) segred_tmp_mem_26158)[index_of_group_res_26203];
                            
                            bool cond_20551 = acc_v_20547 == v_20549;
                            double idx_res_20552;
                            int64_t idx_res_20553;
                            
                            if (cond_20551) {
                                int64_t x_20554 = smin64(acc_i_20548, i_20550);
                                
                                idx_res_20552 = acc_v_20547;
                                idx_res_20553 = x_20554;
                            } else {
                                double y_20555 = fmax64(acc_v_20547, v_20549);
                                bool cond_20556 = acc_v_20547 == y_20555;
                                double x_20557;
                                
                                if (cond_20556) {
                                    x_20557 = acc_v_20547;
                                } else {
                                    x_20557 = v_20549;
                                }
                                
                                int64_t x_20558;
                                
                                if (cond_20556) {
                                    x_20558 = acc_i_20548;
                                } else {
                                    x_20558 = i_20550;
                                }
                                idx_res_20552 = x_20557;
                                idx_res_20553 = x_20558;
                            }
                            acc_v_20547 = idx_res_20552;
                            acc_i_20548 = idx_res_20553;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163)] =
                    acc_v_20547;
                ((__local
                  int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163)] =
                    acc_i_20548;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_26204;
                    int32_t skip_waves_26205 = 1;
                    double acc_v_26183;
                    int64_t acc_i_26184;
                    double v_26185;
                    int64_t i_26186;
                    
                    offset_26204 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_26163,
                                  sext_i64_i32(segred_group_sizze_20538))) {
                            acc_v_26183 = ((__local
                                            double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163 +
                                                                         offset_26204)];
                            acc_i_26184 = ((__local
                                            int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163 +
                                                                          offset_26204)];
                        }
                    }
                    offset_26204 = 1;
                    while (slt32(offset_26204, wave_sizze_26165)) {
                        if (slt32(local_tid_26163 + offset_26204,
                                  sext_i64_i32(segred_group_sizze_20538)) &&
                            ((local_tid_26163 - squot32(local_tid_26163,
                                                        wave_sizze_26165) *
                              wave_sizze_26165) & (2 * offset_26204 - 1)) ==
                            0) {
                            // read array element
                            {
                                v_26185 = ((volatile __local
                                            double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163 +
                                                                         offset_26204)];
                                i_26186 = ((volatile __local
                                            int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163 +
                                                                          offset_26204)];
                            }
                            // apply reduction operation
                            {
                                bool cond_26187 = acc_v_26183 == v_26185;
                                double idx_res_26188;
                                int64_t idx_res_26189;
                                
                                if (cond_26187) {
                                    int64_t x_26190 = smin64(acc_i_26184,
                                                             i_26186);
                                    
                                    idx_res_26188 = acc_v_26183;
                                    idx_res_26189 = x_26190;
                                } else {
                                    double y_26191 = fmax64(acc_v_26183,
                                                            v_26185);
                                    bool cond_26192 = acc_v_26183 == y_26191;
                                    double x_26193;
                                    
                                    if (cond_26192) {
                                        x_26193 = acc_v_26183;
                                    } else {
                                        x_26193 = v_26185;
                                    }
                                    
                                    int64_t x_26194;
                                    
                                    if (cond_26192) {
                                        x_26194 = acc_i_26184;
                                    } else {
                                        x_26194 = i_26186;
                                    }
                                    idx_res_26188 = x_26193;
                                    idx_res_26189 = x_26194;
                                }
                                acc_v_26183 = idx_res_26188;
                                acc_i_26184 = idx_res_26189;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163)] =
                                    acc_v_26183;
                                ((volatile __local
                                  int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163)] =
                                    acc_i_26184;
                            }
                        }
                        offset_26204 *= 2;
                    }
                    while (slt32(skip_waves_26205,
                                 squot32(sext_i64_i32(segred_group_sizze_20538) +
                                         wave_sizze_26165 - 1,
                                         wave_sizze_26165))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_26204 = skip_waves_26205 * wave_sizze_26165;
                        if (slt32(local_tid_26163 + offset_26204,
                                  sext_i64_i32(segred_group_sizze_20538)) &&
                            ((local_tid_26163 - squot32(local_tid_26163,
                                                        wave_sizze_26165) *
                              wave_sizze_26165) == 0 &&
                             (squot32(local_tid_26163, wave_sizze_26165) & (2 *
                                                                            skip_waves_26205 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                v_26185 = ((__local
                                            double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163 +
                                                                         offset_26204)];
                                i_26186 = ((__local
                                            int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163 +
                                                                          offset_26204)];
                            }
                            // apply reduction operation
                            {
                                bool cond_26187 = acc_v_26183 == v_26185;
                                double idx_res_26188;
                                int64_t idx_res_26189;
                                
                                if (cond_26187) {
                                    int64_t x_26190 = smin64(acc_i_26184,
                                                             i_26186);
                                    
                                    idx_res_26188 = acc_v_26183;
                                    idx_res_26189 = x_26190;
                                } else {
                                    double y_26191 = fmax64(acc_v_26183,
                                                            v_26185);
                                    bool cond_26192 = acc_v_26183 == y_26191;
                                    double x_26193;
                                    
                                    if (cond_26192) {
                                        x_26193 = acc_v_26183;
                                    } else {
                                        x_26193 = v_26185;
                                    }
                                    
                                    int64_t x_26194;
                                    
                                    if (cond_26192) {
                                        x_26194 = acc_i_26184;
                                    } else {
                                        x_26194 = i_26186;
                                    }
                                    idx_res_26188 = x_26193;
                                    idx_res_26189 = x_26194;
                                }
                                acc_v_26183 = idx_res_26188;
                                acc_i_26184 = idx_res_26189;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_26167)[sext_i32_i64(local_tid_26163)] =
                                    acc_v_26183;
                                ((__local
                                  int64_t *) red_arr_mem_26169)[sext_i32_i64(local_tid_26163)] =
                                    acc_i_26184;
                            }
                        }
                        skip_waves_26205 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_26163 == 0) {
                            ((__global double *) mem_24655)[gtid_20544] =
                                acc_v_26183;
                            ((__global int64_t *) mem_24658)[gtid_20544] =
                                acc_i_26184;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_20538
}
__kernel void calculate_jacobianzisegred_large_20575(__global
                                                     int *global_failure,
                                                     uint sync_arr_mem_26249_backing_offset_0,
                                                     uint red_arr_mem_26247_backing_offset_1,
                                                     int64_t k_16569,
                                                     int64_t n_16572,
                                                     int64_t num_groups_20570,
                                                     int64_t groups_per_segment_26233,
                                                     int64_t elements_per_thread_26234,
                                                     int64_t virt_num_groups_26235,
                                                     int64_t threads_per_segment_26237,
                                                     __global
                                                     unsigned char *mem_24655,
                                                     __global
                                                     unsigned char *mem_24662,
                                                     __global
                                                     unsigned char *mem_24666,
                                                     __global
                                                     unsigned char *segred_tmp_mem_26238,
                                                     __global
                                                     unsigned char *calculate_jacobianzicounter_mem_26240)
{
    #define segred_group_sizze_20569 (calculate_jacobianzisegred_group_sizze_20226)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_26249_backing_1 =
                           &shared_mem[sync_arr_mem_26249_backing_offset_0];
    volatile unsigned char *red_arr_mem_26247_backing_0 =
                           &shared_mem[red_arr_mem_26247_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26242;
    int32_t local_tid_26243;
    int64_t group_sizze_26246;
    int32_t wave_sizze_26245;
    int32_t group_tid_26244;
    
    global_tid_26242 = get_global_id(0);
    local_tid_26243 = get_local_id(0);
    group_sizze_26246 = get_local_size(0);
    wave_sizze_26245 = LOCKSTEP_WIDTH;
    group_tid_26244 = get_group_id(0);
    
    int32_t phys_tid_20575 = global_tid_26242;
    __local unsigned char *red_arr_mem_26247;
    
    red_arr_mem_26247 = (__local unsigned char *) red_arr_mem_26247_backing_0;
    
    __local unsigned char *sync_arr_mem_26249;
    
    sync_arr_mem_26249 = (__local unsigned char *) sync_arr_mem_26249_backing_1;
    
    int32_t phys_group_id_26251;
    
    phys_group_id_26251 = get_group_id(0);
    for (int32_t i_26252 = 0; i_26252 <
         sdiv_up32(sext_i64_i32(virt_num_groups_26235) - phys_group_id_26251,
                   sext_i64_i32(num_groups_20570)); i_26252++) {
        int32_t virt_group_id_26253 = phys_group_id_26251 + i_26252 *
                sext_i64_i32(num_groups_20570);
        int32_t flat_segment_id_26254 = squot32(virt_group_id_26253,
                                                sext_i64_i32(groups_per_segment_26233));
        int64_t global_tid_26255 = srem64(sext_i32_i64(virt_group_id_26253) *
                                          segred_group_sizze_20569 +
                                          sext_i32_i64(local_tid_26243),
                                          segred_group_sizze_20569 *
                                          groups_per_segment_26233);
        int64_t slice_26256 = n_16572;
        int64_t gtid_20573 = sext_i32_i64(flat_segment_id_26254);
        int64_t remnant_26257 = sext_i32_i64(flat_segment_id_26254) -
                gtid_20573;
        int64_t gtid_20574;
        double x_acc_26258;
        int64_t chunk_sizze_26259 = smin64(elements_per_thread_26234,
                                           sdiv_up64(k_16569 - global_tid_26255,
                                                     threads_per_segment_26237));
        double x_20576;
        double x_20577;
        
        // neutral-initialise the accumulators
        {
            x_acc_26258 = 0.0;
        }
        for (int64_t i_26263 = 0; i_26263 < chunk_sizze_26259; i_26263++) {
            gtid_20574 = global_tid_26255 + threads_per_segment_26237 * i_26263;
            // apply map function
            {
                double defunc_2_reduce_res_20579;
                
                defunc_2_reduce_res_20579 = ((__global
                                              double *) mem_24655)[gtid_20573];
                
                double x_20581;
                
                x_20581 = ((__global double *) mem_24662)[gtid_20573 * k_16569 +
                                                          gtid_20574];
                
                double exp_arg_20582 = x_20581 - defunc_2_reduce_res_20579;
                double exp_res_20583;
                
                exp_res_20583 = futrts_exp64(exp_arg_20582);
                // save map-out results
                { }
                // load accumulator
                {
                    x_20576 = x_acc_26258;
                }
                // load new values
                {
                    x_20577 = exp_res_20583;
                }
                // apply reduction operator
                {
                    double defunc_1_op_res_20578 = x_20576 + x_20577;
                    
                    // store in accumulator
                    {
                        x_acc_26258 = defunc_1_op_res_20578;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_20576 = x_acc_26258;
            ((__local
              double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243)] =
                x_20576;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_26264;
        int32_t skip_waves_26265 = 1;
        double x_26260;
        double x_26261;
        
        offset_26264 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_26243,
                      sext_i64_i32(segred_group_sizze_20569))) {
                x_26260 = ((__local
                            double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243 +
                                                         offset_26264)];
            }
        }
        offset_26264 = 1;
        while (slt32(offset_26264, wave_sizze_26245)) {
            if (slt32(local_tid_26243 + offset_26264,
                      sext_i64_i32(segred_group_sizze_20569)) &&
                ((local_tid_26243 - squot32(local_tid_26243, wave_sizze_26245) *
                  wave_sizze_26245) & (2 * offset_26264 - 1)) == 0) {
                // read array element
                {
                    x_26261 = ((volatile __local
                                double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243 +
                                                             offset_26264)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_26262 = x_26260 + x_26261;
                    
                    x_26260 = defunc_1_op_res_26262;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243)] =
                        x_26260;
                }
            }
            offset_26264 *= 2;
        }
        while (slt32(skip_waves_26265,
                     squot32(sext_i64_i32(segred_group_sizze_20569) +
                             wave_sizze_26245 - 1, wave_sizze_26245))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_26264 = skip_waves_26265 * wave_sizze_26245;
            if (slt32(local_tid_26243 + offset_26264,
                      sext_i64_i32(segred_group_sizze_20569)) &&
                ((local_tid_26243 - squot32(local_tid_26243, wave_sizze_26245) *
                  wave_sizze_26245) == 0 && (squot32(local_tid_26243,
                                                     wave_sizze_26245) & (2 *
                                                                          skip_waves_26265 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_26261 = ((__local
                                double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243 +
                                                             offset_26264)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_26262 = x_26260 + x_26261;
                    
                    x_26260 = defunc_1_op_res_26262;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243)] =
                        x_26260;
                }
            }
            skip_waves_26265 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_26243) == (int64_t) 0) {
                x_acc_26258 = x_26260;
            }
        }
        if (groups_per_segment_26233 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_26243 == 0) {
                    ((__global double *) mem_24666)[gtid_20573] = x_acc_26258;
                }
            }
        } else {
            int32_t old_counter_26266;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_26243 == 0) {
                    ((__global
                      double *) segred_tmp_mem_26238)[sext_i32_i64(virt_group_id_26253)] =
                        x_acc_26258;
                    mem_fence_global();
                    old_counter_26266 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_26240)[sext_i32_i64(srem32(flat_segment_id_26254,
                                                                                                                   10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_26249)[(int64_t) 0] =
                        old_counter_26266 == groups_per_segment_26233 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_26267;
            
            is_last_group_26267 = ((__local
                                    bool *) sync_arr_mem_26249)[(int64_t) 0];
            if (is_last_group_26267) {
                if (local_tid_26243 == 0) {
                    old_counter_26266 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_26240)[sext_i32_i64(srem32(flat_segment_id_26254,
                                                                                                                   10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_26233));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_26268 =
                            sdiv_up64(groups_per_segment_26233,
                                      segred_group_sizze_20569);
                    
                    x_20576 = 0.0;
                    for (int64_t i_26269 = 0; i_26269 < read_per_thread_26268;
                         i_26269++) {
                        int64_t group_res_id_26270 =
                                sext_i32_i64(local_tid_26243) *
                                read_per_thread_26268 + i_26269;
                        int64_t index_of_group_res_26271 =
                                sext_i32_i64(flat_segment_id_26254) *
                                groups_per_segment_26233 + group_res_id_26270;
                        
                        if (slt64(group_res_id_26270,
                                  groups_per_segment_26233)) {
                            x_20577 = ((__global
                                        double *) segred_tmp_mem_26238)[index_of_group_res_26271];
                            
                            double defunc_1_op_res_20578 = x_20576 + x_20577;
                            
                            x_20576 = defunc_1_op_res_20578;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243)] =
                    x_20576;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_26272;
                    int32_t skip_waves_26273 = 1;
                    double x_26260;
                    double x_26261;
                    
                    offset_26272 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_26243,
                                  sext_i64_i32(segred_group_sizze_20569))) {
                            x_26260 = ((__local
                                        double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243 +
                                                                     offset_26272)];
                        }
                    }
                    offset_26272 = 1;
                    while (slt32(offset_26272, wave_sizze_26245)) {
                        if (slt32(local_tid_26243 + offset_26272,
                                  sext_i64_i32(segred_group_sizze_20569)) &&
                            ((local_tid_26243 - squot32(local_tid_26243,
                                                        wave_sizze_26245) *
                              wave_sizze_26245) & (2 * offset_26272 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_26261 = ((volatile __local
                                            double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243 +
                                                                         offset_26272)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_26262 = x_26260 +
                                       x_26261;
                                
                                x_26260 = defunc_1_op_res_26262;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243)] =
                                    x_26260;
                            }
                        }
                        offset_26272 *= 2;
                    }
                    while (slt32(skip_waves_26273,
                                 squot32(sext_i64_i32(segred_group_sizze_20569) +
                                         wave_sizze_26245 - 1,
                                         wave_sizze_26245))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_26272 = skip_waves_26273 * wave_sizze_26245;
                        if (slt32(local_tid_26243 + offset_26272,
                                  sext_i64_i32(segred_group_sizze_20569)) &&
                            ((local_tid_26243 - squot32(local_tid_26243,
                                                        wave_sizze_26245) *
                              wave_sizze_26245) == 0 &&
                             (squot32(local_tid_26243, wave_sizze_26245) & (2 *
                                                                            skip_waves_26273 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_26261 = ((__local
                                            double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243 +
                                                                         offset_26272)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_26262 = x_26260 +
                                       x_26261;
                                
                                x_26260 = defunc_1_op_res_26262;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_26247)[sext_i32_i64(local_tid_26243)] =
                                    x_26260;
                            }
                        }
                        skip_waves_26273 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_26243 == 0) {
                            ((__global double *) mem_24666)[gtid_20573] =
                                x_26260;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_20569
}
__kernel void calculate_jacobianzisegred_large_20601(__global
                                                     int *global_failure,
                                                     uint sync_arr_mem_26325_backing_offset_0,
                                                     uint red_arr_mem_26323_backing_offset_1,
                                                     int64_t k_16569,
                                                     int64_t n_16572,
                                                     int64_t num_groups_20595,
                                                     int64_t groups_per_segment_26309,
                                                     int64_t elements_per_thread_26310,
                                                     int64_t virt_num_groups_26311,
                                                     int64_t threads_per_segment_26313,
                                                     __global
                                                     unsigned char *mem_24655,
                                                     __global
                                                     unsigned char *mem_24662,
                                                     __global
                                                     unsigned char *mem_24670,
                                                     __global
                                                     unsigned char *mem_24674,
                                                     __global
                                                     unsigned char *mem_24678,
                                                     __global
                                                     unsigned char *segred_tmp_mem_26314,
                                                     __global
                                                     unsigned char *calculate_jacobianzicounter_mem_26316)
{
    #define segred_group_sizze_20594 (calculate_jacobianzisegred_group_sizze_20191)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_26325_backing_1 =
                           &shared_mem[sync_arr_mem_26325_backing_offset_0];
    volatile unsigned char *red_arr_mem_26323_backing_0 =
                           &shared_mem[red_arr_mem_26323_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26318;
    int32_t local_tid_26319;
    int64_t group_sizze_26322;
    int32_t wave_sizze_26321;
    int32_t group_tid_26320;
    
    global_tid_26318 = get_global_id(0);
    local_tid_26319 = get_local_id(0);
    group_sizze_26322 = get_local_size(0);
    wave_sizze_26321 = LOCKSTEP_WIDTH;
    group_tid_26320 = get_group_id(0);
    
    int32_t phys_tid_20601 = global_tid_26318;
    __local unsigned char *red_arr_mem_26323;
    
    red_arr_mem_26323 = (__local unsigned char *) red_arr_mem_26323_backing_0;
    
    __local unsigned char *sync_arr_mem_26325;
    
    sync_arr_mem_26325 = (__local unsigned char *) sync_arr_mem_26325_backing_1;
    
    int32_t phys_group_id_26327;
    
    phys_group_id_26327 = get_group_id(0);
    for (int32_t i_26328 = 0; i_26328 <
         sdiv_up32(sext_i64_i32(virt_num_groups_26311) - phys_group_id_26327,
                   sext_i64_i32(num_groups_20595)); i_26328++) {
        int32_t virt_group_id_26329 = phys_group_id_26327 + i_26328 *
                sext_i64_i32(num_groups_20595);
        int32_t flat_segment_id_26330 = squot32(virt_group_id_26329,
                                                sext_i64_i32(groups_per_segment_26309));
        int64_t global_tid_26331 = srem64(sext_i32_i64(virt_group_id_26329) *
                                          segred_group_sizze_20594 +
                                          sext_i32_i64(local_tid_26319),
                                          segred_group_sizze_20594 *
                                          groups_per_segment_26309);
        int64_t slice_26332 = n_16572;
        int64_t gtid_20599 = sext_i32_i64(flat_segment_id_26330);
        int64_t remnant_26333 = sext_i32_i64(flat_segment_id_26330) -
                gtid_20599;
        int64_t gtid_20600;
        double x_acc_26334;
        int64_t chunk_sizze_26335 = smin64(elements_per_thread_26310,
                                           sdiv_up64(k_16569 - global_tid_26331,
                                                     threads_per_segment_26313));
        double x_20602;
        double y_20603;
        
        // neutral-initialise the accumulators
        {
            x_acc_26334 = 0.0;
        }
        for (int64_t i_26339 = 0; i_26339 < chunk_sizze_26335; i_26339++) {
            gtid_20600 = global_tid_26331 + threads_per_segment_26313 * i_26339;
            // apply map function
            {
                double defunc_2_reduce_res_20605;
                
                defunc_2_reduce_res_20605 = ((__global
                                              double *) mem_24655)[gtid_20599];
                
                double binop_y_20607;
                
                binop_y_20607 = ((__global double *) mem_24670)[gtid_20599];
                
                double x_20608;
                
                x_20608 = ((__global double *) mem_24662)[gtid_20599 * k_16569 +
                                                          gtid_20600];
                
                double exp_arg_20609 = x_20608 - defunc_2_reduce_res_20605;
                double binop_y_20610;
                
                binop_y_20610 = futrts_exp64(exp_arg_20609);
                
                double contrib_20611 = binop_y_20607 * binop_y_20610;
                double binop_y_adj_20612 = -1.0 * contrib_20611;
                
                // save map-out results
                {
                    ((__global double *) mem_24678)[gtid_20599 * k_16569 +
                                                    gtid_20600] = contrib_20611;
                }
                // load accumulator
                {
                    x_20602 = x_acc_26334;
                }
                // load new values
                {
                    y_20603 = binop_y_adj_20612;
                }
                // apply reduction operator
                {
                    double binlam_res_20604 = x_20602 + y_20603;
                    
                    // store in accumulator
                    {
                        x_acc_26334 = binlam_res_20604;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_20602 = x_acc_26334;
            ((__local
              double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319)] =
                x_20602;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_26340;
        int32_t skip_waves_26341 = 1;
        double x_26336;
        double y_26337;
        
        offset_26340 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_26319,
                      sext_i64_i32(segred_group_sizze_20594))) {
                x_26336 = ((__local
                            double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319 +
                                                         offset_26340)];
            }
        }
        offset_26340 = 1;
        while (slt32(offset_26340, wave_sizze_26321)) {
            if (slt32(local_tid_26319 + offset_26340,
                      sext_i64_i32(segred_group_sizze_20594)) &&
                ((local_tid_26319 - squot32(local_tid_26319, wave_sizze_26321) *
                  wave_sizze_26321) & (2 * offset_26340 - 1)) == 0) {
                // read array element
                {
                    y_26337 = ((volatile __local
                                double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319 +
                                                             offset_26340)];
                }
                // apply reduction operation
                {
                    double binlam_res_26338 = x_26336 + y_26337;
                    
                    x_26336 = binlam_res_26338;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319)] =
                        x_26336;
                }
            }
            offset_26340 *= 2;
        }
        while (slt32(skip_waves_26341,
                     squot32(sext_i64_i32(segred_group_sizze_20594) +
                             wave_sizze_26321 - 1, wave_sizze_26321))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_26340 = skip_waves_26341 * wave_sizze_26321;
            if (slt32(local_tid_26319 + offset_26340,
                      sext_i64_i32(segred_group_sizze_20594)) &&
                ((local_tid_26319 - squot32(local_tid_26319, wave_sizze_26321) *
                  wave_sizze_26321) == 0 && (squot32(local_tid_26319,
                                                     wave_sizze_26321) & (2 *
                                                                          skip_waves_26341 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    y_26337 = ((__local
                                double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319 +
                                                             offset_26340)];
                }
                // apply reduction operation
                {
                    double binlam_res_26338 = x_26336 + y_26337;
                    
                    x_26336 = binlam_res_26338;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319)] =
                        x_26336;
                }
            }
            skip_waves_26341 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_26319) == (int64_t) 0) {
                x_acc_26334 = x_26336;
            }
        }
        if (groups_per_segment_26309 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_26319 == 0) {
                    ((__global double *) mem_24674)[gtid_20599] = x_acc_26334;
                }
            }
        } else {
            int32_t old_counter_26342;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_26319 == 0) {
                    ((__global
                      double *) segred_tmp_mem_26314)[sext_i32_i64(virt_group_id_26329)] =
                        x_acc_26334;
                    mem_fence_global();
                    old_counter_26342 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_26316)[sext_i32_i64(srem32(flat_segment_id_26330,
                                                                                                                   10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_26325)[(int64_t) 0] =
                        old_counter_26342 == groups_per_segment_26309 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_26343;
            
            is_last_group_26343 = ((__local
                                    bool *) sync_arr_mem_26325)[(int64_t) 0];
            if (is_last_group_26343) {
                if (local_tid_26319 == 0) {
                    old_counter_26342 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_26316)[sext_i32_i64(srem32(flat_segment_id_26330,
                                                                                                                   10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_26309));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_26344 =
                            sdiv_up64(groups_per_segment_26309,
                                      segred_group_sizze_20594);
                    
                    x_20602 = 0.0;
                    for (int64_t i_26345 = 0; i_26345 < read_per_thread_26344;
                         i_26345++) {
                        int64_t group_res_id_26346 =
                                sext_i32_i64(local_tid_26319) *
                                read_per_thread_26344 + i_26345;
                        int64_t index_of_group_res_26347 =
                                sext_i32_i64(flat_segment_id_26330) *
                                groups_per_segment_26309 + group_res_id_26346;
                        
                        if (slt64(group_res_id_26346,
                                  groups_per_segment_26309)) {
                            y_20603 = ((__global
                                        double *) segred_tmp_mem_26314)[index_of_group_res_26347];
                            
                            double binlam_res_20604 = x_20602 + y_20603;
                            
                            x_20602 = binlam_res_20604;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319)] =
                    x_20602;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_26348;
                    int32_t skip_waves_26349 = 1;
                    double x_26336;
                    double y_26337;
                    
                    offset_26348 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_26319,
                                  sext_i64_i32(segred_group_sizze_20594))) {
                            x_26336 = ((__local
                                        double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319 +
                                                                     offset_26348)];
                        }
                    }
                    offset_26348 = 1;
                    while (slt32(offset_26348, wave_sizze_26321)) {
                        if (slt32(local_tid_26319 + offset_26348,
                                  sext_i64_i32(segred_group_sizze_20594)) &&
                            ((local_tid_26319 - squot32(local_tid_26319,
                                                        wave_sizze_26321) *
                              wave_sizze_26321) & (2 * offset_26348 - 1)) ==
                            0) {
                            // read array element
                            {
                                y_26337 = ((volatile __local
                                            double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319 +
                                                                         offset_26348)];
                            }
                            // apply reduction operation
                            {
                                double binlam_res_26338 = x_26336 + y_26337;
                                
                                x_26336 = binlam_res_26338;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319)] =
                                    x_26336;
                            }
                        }
                        offset_26348 *= 2;
                    }
                    while (slt32(skip_waves_26349,
                                 squot32(sext_i64_i32(segred_group_sizze_20594) +
                                         wave_sizze_26321 - 1,
                                         wave_sizze_26321))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_26348 = skip_waves_26349 * wave_sizze_26321;
                        if (slt32(local_tid_26319 + offset_26348,
                                  sext_i64_i32(segred_group_sizze_20594)) &&
                            ((local_tid_26319 - squot32(local_tid_26319,
                                                        wave_sizze_26321) *
                              wave_sizze_26321) == 0 &&
                             (squot32(local_tid_26319, wave_sizze_26321) & (2 *
                                                                            skip_waves_26349 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                y_26337 = ((__local
                                            double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319 +
                                                                         offset_26348)];
                            }
                            // apply reduction operation
                            {
                                double binlam_res_26338 = x_26336 + y_26337;
                                
                                x_26336 = binlam_res_26338;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_26323)[sext_i32_i64(local_tid_26319)] =
                                    x_26336;
                            }
                        }
                        skip_waves_26349 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_26319 == 0) {
                            ((__global double *) mem_24674)[gtid_20599] =
                                x_26336;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_20594
}
__kernel void calculate_jacobianzisegred_large_21531(__global
                                                     int *global_failure,
                                                     uint sync_arr_mem_26693_backing_offset_0,
                                                     uint red_arr_mem_26691_backing_offset_1,
                                                     int64_t k_16569,
                                                     int64_t d_16570,
                                                     int64_t n_16572,
                                                     int64_t num_groups_21525,
                                                     int64_t groups_per_segment_26677,
                                                     int64_t elements_per_thread_26678,
                                                     int64_t virt_num_groups_26679,
                                                     int64_t threads_per_segment_26681,
                                                     __global
                                                     unsigned char *mem_25143,
                                                     __global
                                                     unsigned char *mem_25148,
                                                     __global
                                                     unsigned char *segred_tmp_mem_26682,
                                                     __global
                                                     unsigned char *calculate_jacobianzicounter_mem_26684)
{
    #define segred_group_sizze_21524 (calculate_jacobianzisegred_group_sizze_21446)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_26693_backing_1 =
                           &shared_mem[sync_arr_mem_26693_backing_offset_0];
    volatile unsigned char *red_arr_mem_26691_backing_0 =
                           &shared_mem[red_arr_mem_26691_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26686;
    int32_t local_tid_26687;
    int64_t group_sizze_26690;
    int32_t wave_sizze_26689;
    int32_t group_tid_26688;
    
    global_tid_26686 = get_global_id(0);
    local_tid_26687 = get_local_id(0);
    group_sizze_26690 = get_local_size(0);
    wave_sizze_26689 = LOCKSTEP_WIDTH;
    group_tid_26688 = get_group_id(0);
    
    int32_t phys_tid_21531 = global_tid_26686;
    __local unsigned char *red_arr_mem_26691;
    
    red_arr_mem_26691 = (__local unsigned char *) red_arr_mem_26691_backing_0;
    
    __local unsigned char *sync_arr_mem_26693;
    
    sync_arr_mem_26693 = (__local unsigned char *) sync_arr_mem_26693_backing_1;
    
    int32_t phys_group_id_26695;
    
    phys_group_id_26695 = get_group_id(0);
    for (int32_t i_26696 = 0; i_26696 <
         sdiv_up32(sext_i64_i32(virt_num_groups_26679) - phys_group_id_26695,
                   sext_i64_i32(num_groups_21525)); i_26696++) {
        int32_t virt_group_id_26697 = phys_group_id_26695 + i_26696 *
                sext_i64_i32(num_groups_21525);
        int32_t flat_segment_id_26698 = squot32(virt_group_id_26697,
                                                sext_i64_i32(groups_per_segment_26677));
        int64_t global_tid_26699 = srem64(sext_i32_i64(virt_group_id_26697) *
                                          segred_group_sizze_21524 +
                                          sext_i32_i64(local_tid_26687),
                                          segred_group_sizze_21524 *
                                          groups_per_segment_26677);
        int64_t slice_26700 = d_16570;
        int64_t slice_26701 = k_16569 * slice_26700;
        int64_t gtid_21528 = squot64(sext_i32_i64(flat_segment_id_26698),
                                     slice_26700);
        int64_t remnant_26702 = sext_i32_i64(flat_segment_id_26698) -
                gtid_21528 * slice_26700;
        int64_t gtid_21529 = remnant_26702;
        int64_t remnant_26703 = remnant_26702 - gtid_21529;
        int64_t gtid_21530;
        double x_acc_26704;
        int64_t chunk_sizze_26705 = smin64(elements_per_thread_26678,
                                           sdiv_up64(n_16572 - global_tid_26699,
                                                     threads_per_segment_26681));
        double x_21532;
        double y_21533;
        
        // neutral-initialise the accumulators
        {
            x_acc_26704 = 0.0;
        }
        for (int64_t i_26709 = 0; i_26709 < chunk_sizze_26705; i_26709++) {
            gtid_21530 = global_tid_26699 + threads_per_segment_26681 * i_26709;
            // apply map function
            {
                double map_adj_p_21537;
                
                map_adj_p_21537 = ((__global double *) mem_25143)[gtid_21528 *
                                                                  (n_16572 *
                                                                   d_16570) +
                                                                  gtid_21529 *
                                                                  n_16572 +
                                                                  gtid_21530];
                
                double binop_y_adj_21538 = -1.0 * map_adj_p_21537;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_21532 = x_acc_26704;
                }
                // load new values
                {
                    y_21533 = binop_y_adj_21538;
                }
                // apply reduction operator
                {
                    double binlam_res_21534 = x_21532 + y_21533;
                    
                    // store in accumulator
                    {
                        x_acc_26704 = binlam_res_21534;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_21532 = x_acc_26704;
            ((__local
              double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687)] =
                x_21532;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_26710;
        int32_t skip_waves_26711 = 1;
        double x_26706;
        double y_26707;
        
        offset_26710 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_26687,
                      sext_i64_i32(segred_group_sizze_21524))) {
                x_26706 = ((__local
                            double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687 +
                                                         offset_26710)];
            }
        }
        offset_26710 = 1;
        while (slt32(offset_26710, wave_sizze_26689)) {
            if (slt32(local_tid_26687 + offset_26710,
                      sext_i64_i32(segred_group_sizze_21524)) &&
                ((local_tid_26687 - squot32(local_tid_26687, wave_sizze_26689) *
                  wave_sizze_26689) & (2 * offset_26710 - 1)) == 0) {
                // read array element
                {
                    y_26707 = ((volatile __local
                                double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687 +
                                                             offset_26710)];
                }
                // apply reduction operation
                {
                    double binlam_res_26708 = x_26706 + y_26707;
                    
                    x_26706 = binlam_res_26708;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687)] =
                        x_26706;
                }
            }
            offset_26710 *= 2;
        }
        while (slt32(skip_waves_26711,
                     squot32(sext_i64_i32(segred_group_sizze_21524) +
                             wave_sizze_26689 - 1, wave_sizze_26689))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_26710 = skip_waves_26711 * wave_sizze_26689;
            if (slt32(local_tid_26687 + offset_26710,
                      sext_i64_i32(segred_group_sizze_21524)) &&
                ((local_tid_26687 - squot32(local_tid_26687, wave_sizze_26689) *
                  wave_sizze_26689) == 0 && (squot32(local_tid_26687,
                                                     wave_sizze_26689) & (2 *
                                                                          skip_waves_26711 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    y_26707 = ((__local
                                double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687 +
                                                             offset_26710)];
                }
                // apply reduction operation
                {
                    double binlam_res_26708 = x_26706 + y_26707;
                    
                    x_26706 = binlam_res_26708;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687)] =
                        x_26706;
                }
            }
            skip_waves_26711 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_26687) == (int64_t) 0) {
                x_acc_26704 = x_26706;
            }
        }
        if (groups_per_segment_26677 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_26687 == 0) {
                    ((__global double *) mem_25148)[gtid_21528 * d_16570 +
                                                    gtid_21529] = x_acc_26704;
                }
            }
        } else {
            int32_t old_counter_26712;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_26687 == 0) {
                    ((__global
                      double *) segred_tmp_mem_26682)[sext_i32_i64(virt_group_id_26697)] =
                        x_acc_26704;
                    mem_fence_global();
                    old_counter_26712 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_26684)[sext_i32_i64(srem32(flat_segment_id_26698,
                                                                                                                   10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_26693)[(int64_t) 0] =
                        old_counter_26712 == groups_per_segment_26677 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_26713;
            
            is_last_group_26713 = ((__local
                                    bool *) sync_arr_mem_26693)[(int64_t) 0];
            if (is_last_group_26713) {
                if (local_tid_26687 == 0) {
                    old_counter_26712 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_jacobianzicounter_mem_26684)[sext_i32_i64(srem32(flat_segment_id_26698,
                                                                                                                   10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_26677));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_26714 =
                            sdiv_up64(groups_per_segment_26677,
                                      segred_group_sizze_21524);
                    
                    x_21532 = 0.0;
                    for (int64_t i_26715 = 0; i_26715 < read_per_thread_26714;
                         i_26715++) {
                        int64_t group_res_id_26716 =
                                sext_i32_i64(local_tid_26687) *
                                read_per_thread_26714 + i_26715;
                        int64_t index_of_group_res_26717 =
                                sext_i32_i64(flat_segment_id_26698) *
                                groups_per_segment_26677 + group_res_id_26716;
                        
                        if (slt64(group_res_id_26716,
                                  groups_per_segment_26677)) {
                            y_21533 = ((__global
                                        double *) segred_tmp_mem_26682)[index_of_group_res_26717];
                            
                            double binlam_res_21534 = x_21532 + y_21533;
                            
                            x_21532 = binlam_res_21534;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687)] =
                    x_21532;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_26718;
                    int32_t skip_waves_26719 = 1;
                    double x_26706;
                    double y_26707;
                    
                    offset_26718 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_26687,
                                  sext_i64_i32(segred_group_sizze_21524))) {
                            x_26706 = ((__local
                                        double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687 +
                                                                     offset_26718)];
                        }
                    }
                    offset_26718 = 1;
                    while (slt32(offset_26718, wave_sizze_26689)) {
                        if (slt32(local_tid_26687 + offset_26718,
                                  sext_i64_i32(segred_group_sizze_21524)) &&
                            ((local_tid_26687 - squot32(local_tid_26687,
                                                        wave_sizze_26689) *
                              wave_sizze_26689) & (2 * offset_26718 - 1)) ==
                            0) {
                            // read array element
                            {
                                y_26707 = ((volatile __local
                                            double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687 +
                                                                         offset_26718)];
                            }
                            // apply reduction operation
                            {
                                double binlam_res_26708 = x_26706 + y_26707;
                                
                                x_26706 = binlam_res_26708;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687)] =
                                    x_26706;
                            }
                        }
                        offset_26718 *= 2;
                    }
                    while (slt32(skip_waves_26719,
                                 squot32(sext_i64_i32(segred_group_sizze_21524) +
                                         wave_sizze_26689 - 1,
                                         wave_sizze_26689))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_26718 = skip_waves_26719 * wave_sizze_26689;
                        if (slt32(local_tid_26687 + offset_26718,
                                  sext_i64_i32(segred_group_sizze_21524)) &&
                            ((local_tid_26687 - squot32(local_tid_26687,
                                                        wave_sizze_26689) *
                              wave_sizze_26689) == 0 &&
                             (squot32(local_tid_26687, wave_sizze_26689) & (2 *
                                                                            skip_waves_26719 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                y_26707 = ((__local
                                            double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687 +
                                                                         offset_26718)];
                            }
                            // apply reduction operation
                            {
                                double binlam_res_26708 = x_26706 + y_26707;
                                
                                x_26706 = binlam_res_26708;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_26691)[sext_i32_i64(local_tid_26687)] =
                                    x_26706;
                            }
                        }
                        skip_waves_26719 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_26687 == 0) {
                            ((__global double *) mem_25148)[gtid_21528 *
                                                            d_16570 +
                                                            gtid_21529] =
                                x_26706;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_21524
}
__kernel void calculate_jacobianzisegred_nonseg_19660(__global
                                                      int *global_failure,
                                                      uint red_arr_mem_25849_backing_offset_0,
                                                      uint sync_arr_mem_25847_backing_offset_1,
                                                      int64_t k_16569,
                                                      int64_t d_16570,
                                                      int64_t num_groups_19654,
                                                      int64_t num_threads_25841,
                                                      __global
                                                      unsigned char *alphas_mem_24017,
                                                      __global
                                                      unsigned char *mem_24440,
                                                      __global
                                                      unsigned char *mem_24443,
                                                      __global
                                                      unsigned char *mem_24446,
                                                      __global
                                                      unsigned char *calculate_jacobianzicounter_mem_25837,
                                                      __global
                                                      unsigned char *segred_tmp_mem_25839)
{
    #define segred_group_sizze_19653 (calculate_jacobianzisegred_group_sizze_19642)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_25849_backing_1 =
                           &shared_mem[red_arr_mem_25849_backing_offset_0];
    volatile unsigned char *sync_arr_mem_25847_backing_0 =
                           &shared_mem[sync_arr_mem_25847_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25842;
    int32_t local_tid_25843;
    int64_t group_sizze_25846;
    int32_t wave_sizze_25845;
    int32_t group_tid_25844;
    
    global_tid_25842 = get_global_id(0);
    local_tid_25843 = get_local_id(0);
    group_sizze_25846 = get_local_size(0);
    wave_sizze_25845 = LOCKSTEP_WIDTH;
    group_tid_25844 = get_group_id(0);
    
    int32_t phys_tid_19660 = global_tid_25842;
    __local unsigned char *sync_arr_mem_25847;
    
    sync_arr_mem_25847 = (__local unsigned char *) sync_arr_mem_25847_backing_0;
    
    __local unsigned char *red_arr_mem_25849;
    
    red_arr_mem_25849 = (__local unsigned char *) red_arr_mem_25849_backing_1;
    
    int64_t dummy_19658 = (int64_t) 0;
    int64_t gtid_19659 = (int64_t) 0;
    double x_acc_25851;
    int64_t chunk_sizze_25852 = smin64(sdiv_up64(k_16569,
                                                 sext_i32_i64(sext_i64_i32(segred_group_sizze_19653 *
                                                 num_groups_19654))),
                                       sdiv_up64(k_16569 - phys_tid_19660,
                                                 num_threads_25841));
    double x_19661;
    double x_19662;
    
    // neutral-initialise the accumulators
    {
        x_acc_25851 = 0.0;
    }
    for (int64_t i_25856 = 0; i_25856 < chunk_sizze_25852; i_25856++) {
        gtid_19659 = phys_tid_19660 + num_threads_25841 * i_25856;
        // apply map function
        {
            double x_19665;
            
            x_19665 = ((__global double *) alphas_mem_24017)[gtid_19659];
            
            double defunc_2_reduce_res_19666;
            double redout_23954 = 0.0;
            
            for (int64_t i_23955 = 0; i_23955 < d_16570; i_23955++) {
                double x_19670;
                
                x_19670 = ((__global double *) mem_24440)[i_23955 * k_16569 +
                                                          gtid_19659];
                
                double defunc_1_op_res_19669 = x_19670 + redout_23954;
                double redout_tmp_25857 = defunc_1_op_res_19669;
                
                redout_23954 = redout_tmp_25857;
            }
            defunc_2_reduce_res_19666 = redout_23954;
            
            double defunc_0_f_res_19671;
            
            defunc_0_f_res_19671 = futrts_exp64(x_19665);
            // save map-out results
            {
                ((__global double *) mem_24446)[dummy_19658 * k_16569 +
                                                gtid_19659] =
                    defunc_2_reduce_res_19666;
            }
            // load accumulator
            {
                x_19661 = x_acc_25851;
            }
            // load new values
            {
                x_19662 = defunc_0_f_res_19671;
            }
            // apply reduction operator
            {
                double defunc_1_op_res_19663 = x_19661 + x_19662;
                
                // store in accumulator
                {
                    x_acc_25851 = defunc_1_op_res_19663;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_19661 = x_acc_25851;
        ((__local double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843)] =
            x_19661;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_25858;
    int32_t skip_waves_25859 = 1;
    double x_25853;
    double x_25854;
    
    offset_25858 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_25843, sext_i64_i32(segred_group_sizze_19653))) {
            x_25853 = ((__local
                        double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843 +
                                                     offset_25858)];
        }
    }
    offset_25858 = 1;
    while (slt32(offset_25858, wave_sizze_25845)) {
        if (slt32(local_tid_25843 + offset_25858,
                  sext_i64_i32(segred_group_sizze_19653)) && ((local_tid_25843 -
                                                               squot32(local_tid_25843,
                                                                       wave_sizze_25845) *
                                                               wave_sizze_25845) &
                                                              (2 *
                                                               offset_25858 -
                                                               1)) == 0) {
            // read array element
            {
                x_25854 = ((volatile __local
                            double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843 +
                                                         offset_25858)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_25855 = x_25853 + x_25854;
                
                x_25853 = defunc_1_op_res_25855;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843)] =
                    x_25853;
            }
        }
        offset_25858 *= 2;
    }
    while (slt32(skip_waves_25859,
                 squot32(sext_i64_i32(segred_group_sizze_19653) +
                         wave_sizze_25845 - 1, wave_sizze_25845))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_25858 = skip_waves_25859 * wave_sizze_25845;
        if (slt32(local_tid_25843 + offset_25858,
                  sext_i64_i32(segred_group_sizze_19653)) && ((local_tid_25843 -
                                                               squot32(local_tid_25843,
                                                                       wave_sizze_25845) *
                                                               wave_sizze_25845) ==
                                                              0 &&
                                                              (squot32(local_tid_25843,
                                                                       wave_sizze_25845) &
                                                               (2 *
                                                                skip_waves_25859 -
                                                                1)) == 0)) {
            // read array element
            {
                x_25854 = ((__local
                            double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843 +
                                                         offset_25858)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_25855 = x_25853 + x_25854;
                
                x_25853 = defunc_1_op_res_25855;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843)] =
                    x_25853;
            }
        }
        skip_waves_25859 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_25843) == (int64_t) 0) {
            x_acc_25851 = x_25853;
        }
    }
    
    int32_t old_counter_25860;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_25843 == 0) {
            ((__global
              double *) segred_tmp_mem_25839)[sext_i32_i64(group_tid_25844)] =
                x_acc_25851;
            mem_fence_global();
            old_counter_25860 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_jacobianzicounter_mem_25837)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_25847)[(int64_t) 0] =
                old_counter_25860 == num_groups_19654 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_25861;
    
    is_last_group_25861 = ((__local bool *) sync_arr_mem_25847)[(int64_t) 0];
    if (is_last_group_25861) {
        if (local_tid_25843 == 0) {
            old_counter_25860 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_jacobianzicounter_mem_25837)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_19654));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_25862 = sdiv_up64(num_groups_19654,
                                                      segred_group_sizze_19653);
            
            x_19661 = 0.0;
            for (int64_t i_25863 = 0; i_25863 < read_per_thread_25862;
                 i_25863++) {
                int64_t group_res_id_25864 = sext_i32_i64(local_tid_25843) *
                        read_per_thread_25862 + i_25863;
                int64_t index_of_group_res_25865 = group_res_id_25864;
                
                if (slt64(group_res_id_25864, num_groups_19654)) {
                    x_19662 = ((__global
                                double *) segred_tmp_mem_25839)[index_of_group_res_25865];
                    
                    double defunc_1_op_res_19663 = x_19661 + x_19662;
                    
                    x_19661 = defunc_1_op_res_19663;
                }
            }
        }
        ((__local double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843)] =
            x_19661;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_25866;
            int32_t skip_waves_25867 = 1;
            double x_25853;
            double x_25854;
            
            offset_25866 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_25843,
                          sext_i64_i32(segred_group_sizze_19653))) {
                    x_25853 = ((__local
                                double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843 +
                                                             offset_25866)];
                }
            }
            offset_25866 = 1;
            while (slt32(offset_25866, wave_sizze_25845)) {
                if (slt32(local_tid_25843 + offset_25866,
                          sext_i64_i32(segred_group_sizze_19653)) &&
                    ((local_tid_25843 - squot32(local_tid_25843,
                                                wave_sizze_25845) *
                      wave_sizze_25845) & (2 * offset_25866 - 1)) == 0) {
                    // read array element
                    {
                        x_25854 = ((volatile __local
                                    double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843 +
                                                                 offset_25866)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_25855 = x_25853 + x_25854;
                        
                        x_25853 = defunc_1_op_res_25855;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843)] =
                            x_25853;
                    }
                }
                offset_25866 *= 2;
            }
            while (slt32(skip_waves_25867,
                         squot32(sext_i64_i32(segred_group_sizze_19653) +
                                 wave_sizze_25845 - 1, wave_sizze_25845))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_25866 = skip_waves_25867 * wave_sizze_25845;
                if (slt32(local_tid_25843 + offset_25866,
                          sext_i64_i32(segred_group_sizze_19653)) &&
                    ((local_tid_25843 - squot32(local_tid_25843,
                                                wave_sizze_25845) *
                      wave_sizze_25845) == 0 && (squot32(local_tid_25843,
                                                         wave_sizze_25845) &
                                                 (2 * skip_waves_25867 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_25854 = ((__local
                                    double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843 +
                                                                 offset_25866)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_25855 = x_25853 + x_25854;
                        
                        x_25853 = defunc_1_op_res_25855;
                    }
                    // write result of operation
                    {
                        ((__local
                          double *) red_arr_mem_25849)[sext_i32_i64(local_tid_25843)] =
                            x_25853;
                    }
                }
                skip_waves_25867 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_25843 == 0) {
                    ((__global double *) mem_24443)[(int64_t) 0] = x_25853;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_19653
}
__kernel void calculate_jacobianzisegred_nonseg_19821(__global
                                                      int *global_failure,
                                                      uint red_arr_mem_25966_backing_offset_0,
                                                      uint sync_arr_mem_25964_backing_offset_1,
                                                      int64_t k_16569,
                                                      int64_t num_groups_19816,
                                                      int64_t num_threads_25958,
                                                      __global
                                                      unsigned char *ext_mem_24466,
                                                      __global
                                                      unsigned char *mem_24469,
                                                      __global
                                                      unsigned char *calculate_jacobianzicounter_mem_25954,
                                                      __global
                                                      unsigned char *segred_tmp_mem_25956)
{
    #define segred_group_sizze_19815 (calculate_jacobianzisegred_group_sizze_19762)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_25966_backing_1 =
                           &shared_mem[red_arr_mem_25966_backing_offset_0];
    volatile unsigned char *sync_arr_mem_25964_backing_0 =
                           &shared_mem[sync_arr_mem_25964_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25959;
    int32_t local_tid_25960;
    int64_t group_sizze_25963;
    int32_t wave_sizze_25962;
    int32_t group_tid_25961;
    
    global_tid_25959 = get_global_id(0);
    local_tid_25960 = get_local_id(0);
    group_sizze_25963 = get_local_size(0);
    wave_sizze_25962 = LOCKSTEP_WIDTH;
    group_tid_25961 = get_group_id(0);
    
    int32_t phys_tid_19821 = global_tid_25959;
    __local unsigned char *sync_arr_mem_25964;
    
    sync_arr_mem_25964 = (__local unsigned char *) sync_arr_mem_25964_backing_0;
    
    __local unsigned char *red_arr_mem_25966;
    
    red_arr_mem_25966 = (__local unsigned char *) red_arr_mem_25966_backing_1;
    
    int64_t dummy_19819 = (int64_t) 0;
    int64_t gtid_19820 = (int64_t) 0;
    double x_acc_25968;
    int64_t chunk_sizze_25969 = smin64(sdiv_up64(k_16569,
                                                 sext_i32_i64(sext_i64_i32(segred_group_sizze_19815 *
                                                 num_groups_19816))),
                                       sdiv_up64(k_16569 - phys_tid_19821,
                                                 num_threads_25958));
    double x_19822;
    double x_19823;
    
    // neutral-initialise the accumulators
    {
        x_acc_25968 = 0.0;
    }
    for (int64_t i_25973 = 0; i_25973 < chunk_sizze_25969; i_25973++) {
        gtid_19820 = phys_tid_19821 + num_threads_25958 * i_25973;
        // apply map function
        {
            double x_19825;
            
            x_19825 = ((__global double *) ext_mem_24466)[gtid_19820];
            // save map-out results
            { }
            // load accumulator
            {
                x_19822 = x_acc_25968;
            }
            // load new values
            {
                x_19823 = x_19825;
            }
            // apply reduction operator
            {
                double defunc_1_op_res_19824 = x_19822 + x_19823;
                
                // store in accumulator
                {
                    x_acc_25968 = defunc_1_op_res_19824;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_19822 = x_acc_25968;
        ((__local double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960)] =
            x_19822;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_25974;
    int32_t skip_waves_25975 = 1;
    double x_25970;
    double x_25971;
    
    offset_25974 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_25960, sext_i64_i32(segred_group_sizze_19815))) {
            x_25970 = ((__local
                        double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960 +
                                                     offset_25974)];
        }
    }
    offset_25974 = 1;
    while (slt32(offset_25974, wave_sizze_25962)) {
        if (slt32(local_tid_25960 + offset_25974,
                  sext_i64_i32(segred_group_sizze_19815)) && ((local_tid_25960 -
                                                               squot32(local_tid_25960,
                                                                       wave_sizze_25962) *
                                                               wave_sizze_25962) &
                                                              (2 *
                                                               offset_25974 -
                                                               1)) == 0) {
            // read array element
            {
                x_25971 = ((volatile __local
                            double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960 +
                                                         offset_25974)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_25972 = x_25970 + x_25971;
                
                x_25970 = defunc_1_op_res_25972;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960)] =
                    x_25970;
            }
        }
        offset_25974 *= 2;
    }
    while (slt32(skip_waves_25975,
                 squot32(sext_i64_i32(segred_group_sizze_19815) +
                         wave_sizze_25962 - 1, wave_sizze_25962))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_25974 = skip_waves_25975 * wave_sizze_25962;
        if (slt32(local_tid_25960 + offset_25974,
                  sext_i64_i32(segred_group_sizze_19815)) && ((local_tid_25960 -
                                                               squot32(local_tid_25960,
                                                                       wave_sizze_25962) *
                                                               wave_sizze_25962) ==
                                                              0 &&
                                                              (squot32(local_tid_25960,
                                                                       wave_sizze_25962) &
                                                               (2 *
                                                                skip_waves_25975 -
                                                                1)) == 0)) {
            // read array element
            {
                x_25971 = ((__local
                            double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960 +
                                                         offset_25974)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_25972 = x_25970 + x_25971;
                
                x_25970 = defunc_1_op_res_25972;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960)] =
                    x_25970;
            }
        }
        skip_waves_25975 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_25960) == (int64_t) 0) {
            x_acc_25968 = x_25970;
        }
    }
    
    int32_t old_counter_25976;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_25960 == 0) {
            ((__global
              double *) segred_tmp_mem_25956)[sext_i32_i64(group_tid_25961)] =
                x_acc_25968;
            mem_fence_global();
            old_counter_25976 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_jacobianzicounter_mem_25954)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_25964)[(int64_t) 0] =
                old_counter_25976 == num_groups_19816 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_25977;
    
    is_last_group_25977 = ((__local bool *) sync_arr_mem_25964)[(int64_t) 0];
    if (is_last_group_25977) {
        if (local_tid_25960 == 0) {
            old_counter_25976 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_jacobianzicounter_mem_25954)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_19816));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_25978 = sdiv_up64(num_groups_19816,
                                                      segred_group_sizze_19815);
            
            x_19822 = 0.0;
            for (int64_t i_25979 = 0; i_25979 < read_per_thread_25978;
                 i_25979++) {
                int64_t group_res_id_25980 = sext_i32_i64(local_tid_25960) *
                        read_per_thread_25978 + i_25979;
                int64_t index_of_group_res_25981 = group_res_id_25980;
                
                if (slt64(group_res_id_25980, num_groups_19816)) {
                    x_19823 = ((__global
                                double *) segred_tmp_mem_25956)[index_of_group_res_25981];
                    
                    double defunc_1_op_res_19824 = x_19822 + x_19823;
                    
                    x_19822 = defunc_1_op_res_19824;
                }
            }
        }
        ((__local double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960)] =
            x_19822;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_25982;
            int32_t skip_waves_25983 = 1;
            double x_25970;
            double x_25971;
            
            offset_25982 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_25960,
                          sext_i64_i32(segred_group_sizze_19815))) {
                    x_25970 = ((__local
                                double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960 +
                                                             offset_25982)];
                }
            }
            offset_25982 = 1;
            while (slt32(offset_25982, wave_sizze_25962)) {
                if (slt32(local_tid_25960 + offset_25982,
                          sext_i64_i32(segred_group_sizze_19815)) &&
                    ((local_tid_25960 - squot32(local_tid_25960,
                                                wave_sizze_25962) *
                      wave_sizze_25962) & (2 * offset_25982 - 1)) == 0) {
                    // read array element
                    {
                        x_25971 = ((volatile __local
                                    double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960 +
                                                                 offset_25982)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_25972 = x_25970 + x_25971;
                        
                        x_25970 = defunc_1_op_res_25972;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960)] =
                            x_25970;
                    }
                }
                offset_25982 *= 2;
            }
            while (slt32(skip_waves_25983,
                         squot32(sext_i64_i32(segred_group_sizze_19815) +
                                 wave_sizze_25962 - 1, wave_sizze_25962))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_25982 = skip_waves_25983 * wave_sizze_25962;
                if (slt32(local_tid_25960 + offset_25982,
                          sext_i64_i32(segred_group_sizze_19815)) &&
                    ((local_tid_25960 - squot32(local_tid_25960,
                                                wave_sizze_25962) *
                      wave_sizze_25962) == 0 && (squot32(local_tid_25960,
                                                         wave_sizze_25962) &
                                                 (2 * skip_waves_25983 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_25971 = ((__local
                                    double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960 +
                                                                 offset_25982)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_25972 = x_25970 + x_25971;
                        
                        x_25970 = defunc_1_op_res_25972;
                    }
                    // write result of operation
                    {
                        ((__local
                          double *) red_arr_mem_25966)[sext_i32_i64(local_tid_25960)] =
                            x_25970;
                    }
                }
                skip_waves_25983 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_25960 == 0) {
                    ((__global double *) mem_24469)[(int64_t) 0] = x_25970;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_19815
}
__kernel void calculate_jacobianzisegred_nonseg_19858(__global
                                                      int *global_failure,
                                                      uint red_arr_mem_26008_backing_offset_0,
                                                      uint red_arr_mem_26006_backing_offset_1,
                                                      uint sync_arr_mem_26004_backing_offset_2,
                                                      int64_t k_16569,
                                                      int64_t n_16572,
                                                      int64_t num_groups_19850,
                                                      int64_t num_threads_25402,
                                                      int64_t num_threads_25998,
                                                      __global
                                                      unsigned char *alphas_mem_24017,
                                                      __global
                                                      unsigned char *ext_mem_24437,
                                                      __global
                                                      unsigned char *ext_mem_24474,
                                                      __global
                                                      unsigned char *mem_24541,
                                                      __global
                                                      unsigned char *mem_24544,
                                                      __global
                                                      unsigned char *mem_24547,
                                                      __global
                                                      unsigned char *mem_24550,
                                                      __global
                                                      unsigned char *color_25341,
                                                      __global
                                                      unsigned char *color_25342,
                                                      __global
                                                      unsigned char *color_25343,
                                                      __global
                                                      unsigned char *color_25344,
                                                      __global
                                                      unsigned char *calculate_jacobianzicounter_mem_25992,
                                                      __global
                                                      unsigned char *segred_tmp_mem_25994,
                                                      __global
                                                      unsigned char *segred_tmp_mem_25996)
{
    #define segred_group_sizze_19849 (calculate_jacobianzisegred_group_sizze_19834)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26008_backing_2 =
                           &shared_mem[red_arr_mem_26008_backing_offset_0];
    volatile unsigned char *red_arr_mem_26006_backing_1 =
                           &shared_mem[red_arr_mem_26006_backing_offset_1];
    volatile unsigned char *sync_arr_mem_26004_backing_0 =
                           &shared_mem[sync_arr_mem_26004_backing_offset_2];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25999;
    int32_t local_tid_26000;
    int64_t group_sizze_26003;
    int32_t wave_sizze_26002;
    int32_t group_tid_26001;
    
    global_tid_25999 = get_global_id(0);
    local_tid_26000 = get_local_id(0);
    group_sizze_26003 = get_local_size(0);
    wave_sizze_26002 = LOCKSTEP_WIDTH;
    group_tid_26001 = get_group_id(0);
    
    int32_t phys_tid_19858 = global_tid_25999;
    __local unsigned char *sync_arr_mem_26004;
    
    sync_arr_mem_26004 = (__local unsigned char *) sync_arr_mem_26004_backing_0;
    
    __local unsigned char *red_arr_mem_26006;
    
    red_arr_mem_26006 = (__local unsigned char *) red_arr_mem_26006_backing_1;
    
    __local unsigned char *red_arr_mem_26008;
    
    red_arr_mem_26008 = (__local unsigned char *) red_arr_mem_26008_backing_2;
    
    int64_t dummy_19856 = (int64_t) 0;
    int64_t gtid_19857 = (int64_t) 0;
    int64_t chunk_sizze_26010 = smin64(sdiv_up64(n_16572,
                                                 sext_i32_i64(sext_i64_i32(segred_group_sizze_19849 *
                                                 num_groups_19850))),
                                       sdiv_up64(n_16572 - phys_tid_19858,
                                                 num_threads_25998));
    double x_19859;
    double y_19860;
    double x_19862;
    double y_19863;
    
    // neutral-initialise the accumulators
    {
        for (int64_t nest_i_26011 = 0; nest_i_26011 < k_16569; nest_i_26011++) {
            ((__global
              double *) segred_tmp_mem_25994)[sext_i32_i64(group_tid_26001) *
                                              k_16569 + nest_i_26011 +
                                              sext_i32_i64(local_tid_26000)] =
                0.0;
        }
        for (int64_t nest_i_26012 = 0; nest_i_26012 < k_16569; nest_i_26012++) {
            ((__global
              double *) segred_tmp_mem_25996)[sext_i32_i64(group_tid_26001) *
                                              k_16569 + nest_i_26012 +
                                              sext_i32_i64(local_tid_26000)] =
                0.0;
        }
    }
    for (int64_t i_26019 = 0; i_26019 < chunk_sizze_26010; i_26019++) {
        gtid_19857 = phys_tid_19858 + num_threads_25998 * i_26019;
        // apply map function
        {
            double defunc_2_reduce_res_19866;
            int64_t defunc_2_reduce_res_ind_19867;
            double redout_23959;
            int64_t redout_23960;
            
            redout_23959 = -INFINITY;
            redout_23960 = (int64_t) -1;
            for (int64_t i_23962 = 0; i_23962 < k_16569; i_23962++) {
                double x_19881;
                
                x_19881 = ((__global double *) ext_mem_24437)[i_23962 *
                                                              n_16572 +
                                                              gtid_19857];
                
                double x_wasfree_19882;
                
                x_wasfree_19882 = ((__global
                                    double *) alphas_mem_24017)[i_23962];
                
                double x_wasfree_19883;
                
                x_wasfree_19883 = ((__global double *) ext_mem_24474)[i_23962];
                
                double x_19885 = -0.5 * x_19881;
                double x_19886 = x_wasfree_19882 + x_19885;
                double defunc_0_f_res_19887 = x_wasfree_19883 + x_19886;
                bool cond_19873 = redout_23959 == defunc_0_f_res_19887;
                double idx_res_19874;
                int64_t idx_res_19875;
                
                if (cond_19873) {
                    int64_t x_19876 = smin64(redout_23960, i_23962);
                    
                    idx_res_19874 = redout_23959;
                    idx_res_19875 = x_19876;
                } else {
                    double y_19877 = fmax64(defunc_0_f_res_19887, redout_23959);
                    bool cond_19878 = redout_23959 == y_19877;
                    double x_19879;
                    
                    if (cond_19878) {
                        x_19879 = redout_23959;
                    } else {
                        x_19879 = defunc_0_f_res_19887;
                    }
                    
                    int64_t x_19880;
                    
                    if (cond_19878) {
                        x_19880 = redout_23960;
                    } else {
                        x_19880 = i_23962;
                    }
                    idx_res_19874 = x_19879;
                    idx_res_19875 = x_19880;
                }
                ((__global double *) color_25341)[phys_tid_19858 + i_23962 *
                                                  num_threads_25402] =
                    defunc_0_f_res_19887;
                
                double redout_tmp_26020 = idx_res_19874;
                int64_t redout_tmp_26021 = idx_res_19875;
                
                redout_23959 = redout_tmp_26020;
                redout_23960 = redout_tmp_26021;
            }
            defunc_2_reduce_res_19866 = redout_23959;
            defunc_2_reduce_res_ind_19867 = redout_23960;
            
            double defunc_2_reduce_res_19888;
            double redout_23964 = 0.0;
            
            for (int64_t i_23965 = 0; i_23965 < k_16569; i_23965++) {
                double x_19892;
                
                x_19892 = ((__global double *) color_25341)[phys_tid_19858 +
                                                            i_23965 *
                                                            num_threads_25402];
                
                double exp_arg_19893 = x_19892 - defunc_2_reduce_res_19866;
                double exp_res_19894;
                
                exp_res_19894 = futrts_exp64(exp_arg_19893);
                
                double defunc_1_op_res_19891 = exp_res_19894 + redout_23964;
                double redout_tmp_26023 = defunc_1_op_res_19891;
                
                redout_23964 = redout_tmp_26023;
            }
            defunc_2_reduce_res_19888 = redout_23964;
            
            double binop_y_19895 = 1.0 / defunc_2_reduce_res_19888;
            double defunc_2_reduce_res_contrib_sum_19896;
            double redout_23967 = 0.0;
            
            for (int64_t i_23969 = 0; i_23969 < k_16569; i_23969++) {
                double x_19901;
                
                x_19901 = ((__global double *) color_25341)[phys_tid_19858 +
                                                            i_23969 *
                                                            num_threads_25402];
                
                double exp_arg_19902 = x_19901 - defunc_2_reduce_res_19866;
                double binop_y_19903;
                
                binop_y_19903 = futrts_exp64(exp_arg_19902);
                
                double contrib_19904 = binop_y_19895 * binop_y_19903;
                double binop_y_adj_19905 = -1.0 * contrib_19904;
                double binlam_res_19900 = binop_y_adj_19905 + redout_23967;
                
                ((__global double *) color_25344)[phys_tid_19858 + i_23969 *
                                                  num_threads_25402] =
                    contrib_19904;
                
                double redout_tmp_26024 = binlam_res_19900;
                
                redout_23967 = redout_tmp_26024;
            }
            defunc_2_reduce_res_contrib_sum_19896 = redout_23967;
            
            double defunc_2_reduce_res_adj_19906 = 1.0 +
                   defunc_2_reduce_res_contrib_sum_19896;
            
            for (int64_t i_26026 = 0; i_26026 < k_16569; i_26026++) {
                ((__global double *) color_25343)[phys_tid_19858 + i_26026 *
                                                  num_threads_25402] = 0.0;
            }
            if (sle64((int64_t) 0, defunc_2_reduce_res_ind_19867) &&
                slt64(defunc_2_reduce_res_ind_19867, k_16569)) {
                ((__global double *) color_25343)[phys_tid_19858 +
                                                  defunc_2_reduce_res_ind_19867 *
                                                  num_threads_25402] =
                    defunc_2_reduce_res_adj_19906;
            }
            for (int64_t i_23975 = 0; i_23975 < k_16569; i_23975++) {
                double map_adj_p_19911;
                
                map_adj_p_19911 = ((__global
                                    double *) color_25343)[phys_tid_19858 +
                                                           i_23975 *
                                                           num_threads_25402];
                
                double map_adj_p_19912;
                
                map_adj_p_19912 = ((__global
                                    double *) color_25344)[phys_tid_19858 +
                                                           i_23975 *
                                                           num_threads_25402];
                
                double defunc_0_f_res_adj_19913 = map_adj_p_19911 +
                       map_adj_p_19912;
                double binop_y_adj_19914 = -0.5 * defunc_0_f_res_adj_19913;
                
                ((__global double *) color_25342)[phys_tid_19858 + i_23975 *
                                                  num_threads_25402] =
                    binop_y_adj_19914;
                ((__global double *) color_25341)[phys_tid_19858 + i_23975 *
                                                  num_threads_25402] =
                    defunc_0_f_res_adj_19913;
            }
            // save map-out results
            {
                for (int64_t i_26029 = 0; i_26029 < k_16569; i_26029++) {
                    double tmp_26030;
                    
                    tmp_26030 = ((__global
                                  double *) color_25342)[phys_tid_19858 +
                                                         i_26029 *
                                                         num_threads_25402];
                    ((__global double *) mem_24547)[dummy_19856 * n_16572 +
                                                    gtid_19857 + i_26029 *
                                                    n_16572] = tmp_26030;
                }
                for (int64_t i_26031 = 0; i_26031 < k_16569; i_26031++) {
                    double tmp_26032;
                    
                    tmp_26032 = ((__global
                                  double *) color_25341)[phys_tid_19858 +
                                                         i_26031 *
                                                         num_threads_25402];
                    ((__global double *) mem_24550)[dummy_19856 * n_16572 +
                                                    gtid_19857 + i_26031 *
                                                    n_16572] = tmp_26032;
                }
            }
            for (int64_t nest_i_26033 = 0; nest_i_26033 < k_16569;
                 nest_i_26033++) {
                // load accumulator
                {
                    x_19859 = ((__global
                                double *) segred_tmp_mem_25994)[sext_i32_i64(group_tid_26001) *
                                                                k_16569 +
                                                                nest_i_26033 +
                                                                sext_i32_i64(local_tid_26000)];
                    x_19862 = ((__global
                                double *) segred_tmp_mem_25996)[sext_i32_i64(group_tid_26001) *
                                                                k_16569 +
                                                                nest_i_26033 +
                                                                sext_i32_i64(local_tid_26000)];
                }
                // load new values
                {
                    y_19860 = ((__global double *) color_25341)[phys_tid_19858 +
                                                                nest_i_26033 *
                                                                num_threads_25402];
                    y_19863 = ((__global double *) color_25341)[phys_tid_19858 +
                                                                nest_i_26033 *
                                                                num_threads_25402];
                }
                // apply reduction operator
                {
                    double binlam_res_19861 = x_19859 + y_19860;
                    double binlam_res_19864 = x_19862 + y_19863;
                    
                    // store in accumulator
                    {
                        ((__global
                          double *) segred_tmp_mem_25994)[sext_i32_i64(group_tid_26001) *
                                                          k_16569 +
                                                          nest_i_26033 +
                                                          sext_i32_i64(local_tid_26000)] =
                            binlam_res_19861;
                        ((__global
                          double *) segred_tmp_mem_25996)[sext_i32_i64(group_tid_26001) *
                                                          k_16569 +
                                                          nest_i_26033 +
                                                          sext_i32_i64(local_tid_26000)] =
                            binlam_res_19864;
                    }
                }
            }
        }
    }
    for (int64_t nest_i_26034 = 0; nest_i_26034 < k_16569; nest_i_26034++) {
        // to reduce current chunk, first store our result in memory
        {
            x_19859 = ((__global
                        double *) segred_tmp_mem_25994)[sext_i32_i64(group_tid_26001) *
                                                        k_16569 + nest_i_26034 +
                                                        sext_i32_i64(local_tid_26000)];
            x_19862 = ((__global
                        double *) segred_tmp_mem_25996)[sext_i32_i64(group_tid_26001) *
                                                        k_16569 + nest_i_26034 +
                                                        sext_i32_i64(local_tid_26000)];
            ((__local
              double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000)] =
                x_19859;
            ((__local
              double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000)] =
                x_19862;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_26035;
        int32_t skip_waves_26036 = 1;
        double x_26013;
        double x_26014;
        double y_26015;
        double y_26016;
        
        offset_26035 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_26000,
                      sext_i64_i32(segred_group_sizze_19849))) {
                x_26013 = ((__local
                            double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000 +
                                                         offset_26035)];
                x_26014 = ((__local
                            double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000 +
                                                         offset_26035)];
            }
        }
        offset_26035 = 1;
        while (slt32(offset_26035, wave_sizze_26002)) {
            if (slt32(local_tid_26000 + offset_26035,
                      sext_i64_i32(segred_group_sizze_19849)) &&
                ((local_tid_26000 - squot32(local_tid_26000, wave_sizze_26002) *
                  wave_sizze_26002) & (2 * offset_26035 - 1)) == 0) {
                // read array element
                {
                    y_26015 = ((volatile __local
                                double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000 +
                                                             offset_26035)];
                    y_26016 = ((volatile __local
                                double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000 +
                                                             offset_26035)];
                }
                // apply reduction operation
                {
                    double binlam_res_26017 = x_26013 + y_26015;
                    double binlam_res_26018 = x_26014 + y_26016;
                    
                    x_26013 = binlam_res_26017;
                    x_26014 = binlam_res_26018;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000)] =
                        x_26013;
                    ((volatile __local
                      double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000)] =
                        x_26014;
                }
            }
            offset_26035 *= 2;
        }
        while (slt32(skip_waves_26036,
                     squot32(sext_i64_i32(segred_group_sizze_19849) +
                             wave_sizze_26002 - 1, wave_sizze_26002))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_26035 = skip_waves_26036 * wave_sizze_26002;
            if (slt32(local_tid_26000 + offset_26035,
                      sext_i64_i32(segred_group_sizze_19849)) &&
                ((local_tid_26000 - squot32(local_tid_26000, wave_sizze_26002) *
                  wave_sizze_26002) == 0 && (squot32(local_tid_26000,
                                                     wave_sizze_26002) & (2 *
                                                                          skip_waves_26036 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    y_26015 = ((__local
                                double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000 +
                                                             offset_26035)];
                    y_26016 = ((__local
                                double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000 +
                                                             offset_26035)];
                }
                // apply reduction operation
                {
                    double binlam_res_26017 = x_26013 + y_26015;
                    double binlam_res_26018 = x_26014 + y_26016;
                    
                    x_26013 = binlam_res_26017;
                    x_26014 = binlam_res_26018;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000)] =
                        x_26013;
                    ((__local
                      double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000)] =
                        x_26014;
                }
            }
            skip_waves_26036 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_26000) == (int64_t) 0) {
                ((__global
                  double *) segred_tmp_mem_25994)[sext_i32_i64(group_tid_26001) *
                                                  k_16569 + nest_i_26034 +
                                                  sext_i32_i64(local_tid_26000)] =
                    x_26013;
                ((__global
                  double *) segred_tmp_mem_25996)[sext_i32_i64(group_tid_26001) *
                                                  k_16569 + nest_i_26034 +
                                                  sext_i32_i64(local_tid_26000)] =
                    x_26014;
            }
        }
    }
    
    int32_t old_counter_26037;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_26000 == 0) {
            for (int64_t i_26038 = 0; i_26038 < k_16569; i_26038++) {
                double tmp_26039;
                
                tmp_26039 = ((__global
                              double *) segred_tmp_mem_25994)[sext_i32_i64(group_tid_26001) *
                                                              k_16569 +
                                                              sext_i32_i64(local_tid_26000) +
                                                              i_26038];
                ((__global
                  double *) segred_tmp_mem_25994)[sext_i32_i64(group_tid_26001) *
                                                  k_16569 + i_26038] =
                    tmp_26039;
            }
            for (int64_t i_26040 = 0; i_26040 < k_16569; i_26040++) {
                double tmp_26041;
                
                tmp_26041 = ((__global
                              double *) segred_tmp_mem_25996)[sext_i32_i64(group_tid_26001) *
                                                              k_16569 +
                                                              sext_i32_i64(local_tid_26000) +
                                                              i_26040];
                ((__global
                  double *) segred_tmp_mem_25996)[sext_i32_i64(group_tid_26001) *
                                                  k_16569 + i_26040] =
                    tmp_26041;
            }
            mem_fence_global();
            old_counter_26037 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_jacobianzicounter_mem_25992)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_26004)[(int64_t) 0] =
                old_counter_26037 == num_groups_19850 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_26042;
    
    is_last_group_26042 = ((__local bool *) sync_arr_mem_26004)[(int64_t) 0];
    if (is_last_group_26042) {
        if (local_tid_26000 == 0) {
            old_counter_26037 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_jacobianzicounter_mem_25992)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_19850));
        }
        for (int64_t nest_i_26043 = 0; nest_i_26043 < k_16569; nest_i_26043++) {
            // read in the per-group-results
            {
                int64_t read_per_thread_26044 = sdiv_up64(num_groups_19850,
                                                          segred_group_sizze_19849);
                
                x_19859 = 0.0;
                x_19862 = 0.0;
                for (int64_t i_26045 = 0; i_26045 < read_per_thread_26044;
                     i_26045++) {
                    int64_t group_res_id_26046 = sext_i32_i64(local_tid_26000) *
                            read_per_thread_26044 + i_26045;
                    int64_t index_of_group_res_26047 = group_res_id_26046;
                    
                    if (slt64(group_res_id_26046, num_groups_19850)) {
                        y_19860 = ((__global
                                    double *) segred_tmp_mem_25994)[index_of_group_res_26047 *
                                                                    k_16569 +
                                                                    nest_i_26043];
                        y_19863 = ((__global
                                    double *) segred_tmp_mem_25996)[index_of_group_res_26047 *
                                                                    k_16569 +
                                                                    nest_i_26043];
                        
                        double binlam_res_19861 = x_19859 + y_19860;
                        double binlam_res_19864 = x_19862 + y_19863;
                        
                        x_19859 = binlam_res_19861;
                        x_19862 = binlam_res_19864;
                    }
                }
            }
            ((__local
              double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000)] =
                x_19859;
            ((__local
              double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000)] =
                x_19862;
            barrier(CLK_LOCAL_MEM_FENCE);
            // reduce the per-group results
            {
                int32_t offset_26048;
                int32_t skip_waves_26049 = 1;
                double x_26013;
                double x_26014;
                double y_26015;
                double y_26016;
                
                offset_26048 = 0;
                // participating threads read initial accumulator
                {
                    if (slt32(local_tid_26000,
                              sext_i64_i32(segred_group_sizze_19849))) {
                        x_26013 = ((__local
                                    double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000 +
                                                                 offset_26048)];
                        x_26014 = ((__local
                                    double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000 +
                                                                 offset_26048)];
                    }
                }
                offset_26048 = 1;
                while (slt32(offset_26048, wave_sizze_26002)) {
                    if (slt32(local_tid_26000 + offset_26048,
                              sext_i64_i32(segred_group_sizze_19849)) &&
                        ((local_tid_26000 - squot32(local_tid_26000,
                                                    wave_sizze_26002) *
                          wave_sizze_26002) & (2 * offset_26048 - 1)) == 0) {
                        // read array element
                        {
                            y_26015 = ((volatile __local
                                        double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000 +
                                                                     offset_26048)];
                            y_26016 = ((volatile __local
                                        double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000 +
                                                                     offset_26048)];
                        }
                        // apply reduction operation
                        {
                            double binlam_res_26017 = x_26013 + y_26015;
                            double binlam_res_26018 = x_26014 + y_26016;
                            
                            x_26013 = binlam_res_26017;
                            x_26014 = binlam_res_26018;
                        }
                        // write result of operation
                        {
                            ((volatile __local
                              double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000)] =
                                x_26013;
                            ((volatile __local
                              double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000)] =
                                x_26014;
                        }
                    }
                    offset_26048 *= 2;
                }
                while (slt32(skip_waves_26049,
                             squot32(sext_i64_i32(segred_group_sizze_19849) +
                                     wave_sizze_26002 - 1, wave_sizze_26002))) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                    offset_26048 = skip_waves_26049 * wave_sizze_26002;
                    if (slt32(local_tid_26000 + offset_26048,
                              sext_i64_i32(segred_group_sizze_19849)) &&
                        ((local_tid_26000 - squot32(local_tid_26000,
                                                    wave_sizze_26002) *
                          wave_sizze_26002) == 0 && (squot32(local_tid_26000,
                                                             wave_sizze_26002) &
                                                     (2 * skip_waves_26049 -
                                                      1)) == 0)) {
                        // read array element
                        {
                            y_26015 = ((__local
                                        double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000 +
                                                                     offset_26048)];
                            y_26016 = ((__local
                                        double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000 +
                                                                     offset_26048)];
                        }
                        // apply reduction operation
                        {
                            double binlam_res_26017 = x_26013 + y_26015;
                            double binlam_res_26018 = x_26014 + y_26016;
                            
                            x_26013 = binlam_res_26017;
                            x_26014 = binlam_res_26018;
                        }
                        // write result of operation
                        {
                            ((__local
                              double *) red_arr_mem_26006)[sext_i32_i64(local_tid_26000)] =
                                x_26013;
                            ((__local
                              double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26000)] =
                                x_26014;
                        }
                    }
                    skip_waves_26049 *= 2;
                }
                // and back to memory with the final result
                {
                    if (local_tid_26000 == 0) {
                        ((__global double *) mem_24541)[nest_i_26043] = x_26013;
                        ((__global double *) mem_24544)[nest_i_26043] = x_26014;
                    }
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_19849
}
__kernel void calculate_jacobianzisegred_nonseg_20658(__global
                                                      int *global_failure,
                                                      uint red_arr_mem_26392_backing_offset_0,
                                                      uint red_arr_mem_26390_backing_offset_1,
                                                      uint sync_arr_mem_26388_backing_offset_2,
                                                      int64_t k_16569,
                                                      int64_t n_16572,
                                                      int64_t num_groups_20652,
                                                      int64_t num_threads_26382,
                                                      __global
                                                      unsigned char *mem_24711,
                                                      __global
                                                      unsigned char *mem_24715,
                                                      __global
                                                      unsigned char *mem_24718,
                                                      __global
                                                      unsigned char *calculate_jacobianzicounter_mem_26376,
                                                      __global
                                                      unsigned char *segred_tmp_mem_26378,
                                                      __global
                                                      unsigned char *segred_tmp_mem_26380)
{
    #define segred_group_sizze_20651 (calculate_jacobianzisegred_group_sizze_20392)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26392_backing_2 =
                           &shared_mem[red_arr_mem_26392_backing_offset_0];
    volatile unsigned char *red_arr_mem_26390_backing_1 =
                           &shared_mem[red_arr_mem_26390_backing_offset_1];
    volatile unsigned char *sync_arr_mem_26388_backing_0 =
                           &shared_mem[sync_arr_mem_26388_backing_offset_2];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26383;
    int32_t local_tid_26384;
    int64_t group_sizze_26387;
    int32_t wave_sizze_26386;
    int32_t group_tid_26385;
    
    global_tid_26383 = get_global_id(0);
    local_tid_26384 = get_local_id(0);
    group_sizze_26387 = get_local_size(0);
    wave_sizze_26386 = LOCKSTEP_WIDTH;
    group_tid_26385 = get_group_id(0);
    
    int32_t phys_tid_20658 = global_tid_26383;
    __local unsigned char *sync_arr_mem_26388;
    
    sync_arr_mem_26388 = (__local unsigned char *) sync_arr_mem_26388_backing_0;
    
    __local unsigned char *red_arr_mem_26390;
    
    red_arr_mem_26390 = (__local unsigned char *) red_arr_mem_26390_backing_1;
    
    __local unsigned char *red_arr_mem_26392;
    
    red_arr_mem_26392 = (__local unsigned char *) red_arr_mem_26392_backing_2;
    
    int64_t dummy_20656 = (int64_t) 0;
    int64_t gtid_20657 = (int64_t) 0;
    int64_t chunk_sizze_26394 = smin64(sdiv_up64(n_16572,
                                                 sext_i32_i64(sext_i64_i32(segred_group_sizze_20651 *
                                                 num_groups_20652))),
                                       sdiv_up64(n_16572 - phys_tid_20658,
                                                 num_threads_26382));
    double x_20659;
    double y_20660;
    double x_20662;
    double y_20663;
    
    // neutral-initialise the accumulators
    {
        for (int64_t nest_i_26395 = 0; nest_i_26395 < k_16569; nest_i_26395++) {
            ((__global
              double *) segred_tmp_mem_26378)[sext_i32_i64(group_tid_26385) *
                                              k_16569 + nest_i_26395 +
                                              sext_i32_i64(local_tid_26384)] =
                0.0;
        }
        for (int64_t nest_i_26396 = 0; nest_i_26396 < k_16569; nest_i_26396++) {
            ((__global
              double *) segred_tmp_mem_26380)[sext_i32_i64(group_tid_26385) *
                                              k_16569 + nest_i_26396 +
                                              sext_i32_i64(local_tid_26384)] =
                0.0;
        }
    }
    for (int64_t i_26403 = 0; i_26403 < chunk_sizze_26394; i_26403++) {
        gtid_20657 = phys_tid_20658 + num_threads_26382 * i_26403;
        // apply map function
        {
            // save map-out results
            { }
            for (int64_t nest_i_26404 = 0; nest_i_26404 < k_16569;
                 nest_i_26404++) {
                // load accumulator
                {
                    x_20659 = ((__global
                                double *) segred_tmp_mem_26378)[sext_i32_i64(group_tid_26385) *
                                                                k_16569 +
                                                                nest_i_26404 +
                                                                sext_i32_i64(local_tid_26384)];
                    x_20662 = ((__global
                                double *) segred_tmp_mem_26380)[sext_i32_i64(group_tid_26385) *
                                                                k_16569 +
                                                                nest_i_26404 +
                                                                sext_i32_i64(local_tid_26384)];
                }
                // load new values
                {
                    y_20660 = ((__global double *) mem_24711)[gtid_20657 +
                                                              nest_i_26404 *
                                                              n_16572];
                    y_20663 = ((__global double *) mem_24711)[gtid_20657 +
                                                              nest_i_26404 *
                                                              n_16572];
                }
                // apply reduction operator
                {
                    double binlam_res_20661 = x_20659 + y_20660;
                    double binlam_res_20664 = x_20662 + y_20663;
                    
                    // store in accumulator
                    {
                        ((__global
                          double *) segred_tmp_mem_26378)[sext_i32_i64(group_tid_26385) *
                                                          k_16569 +
                                                          nest_i_26404 +
                                                          sext_i32_i64(local_tid_26384)] =
                            binlam_res_20661;
                        ((__global
                          double *) segred_tmp_mem_26380)[sext_i32_i64(group_tid_26385) *
                                                          k_16569 +
                                                          nest_i_26404 +
                                                          sext_i32_i64(local_tid_26384)] =
                            binlam_res_20664;
                    }
                }
            }
        }
    }
    for (int64_t nest_i_26405 = 0; nest_i_26405 < k_16569; nest_i_26405++) {
        // to reduce current chunk, first store our result in memory
        {
            x_20659 = ((__global
                        double *) segred_tmp_mem_26378)[sext_i32_i64(group_tid_26385) *
                                                        k_16569 + nest_i_26405 +
                                                        sext_i32_i64(local_tid_26384)];
            x_20662 = ((__global
                        double *) segred_tmp_mem_26380)[sext_i32_i64(group_tid_26385) *
                                                        k_16569 + nest_i_26405 +
                                                        sext_i32_i64(local_tid_26384)];
            ((__local
              double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384)] =
                x_20659;
            ((__local
              double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384)] =
                x_20662;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_26406;
        int32_t skip_waves_26407 = 1;
        double x_26397;
        double x_26398;
        double y_26399;
        double y_26400;
        
        offset_26406 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_26384,
                      sext_i64_i32(segred_group_sizze_20651))) {
                x_26397 = ((__local
                            double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384 +
                                                         offset_26406)];
                x_26398 = ((__local
                            double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384 +
                                                         offset_26406)];
            }
        }
        offset_26406 = 1;
        while (slt32(offset_26406, wave_sizze_26386)) {
            if (slt32(local_tid_26384 + offset_26406,
                      sext_i64_i32(segred_group_sizze_20651)) &&
                ((local_tid_26384 - squot32(local_tid_26384, wave_sizze_26386) *
                  wave_sizze_26386) & (2 * offset_26406 - 1)) == 0) {
                // read array element
                {
                    y_26399 = ((volatile __local
                                double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384 +
                                                             offset_26406)];
                    y_26400 = ((volatile __local
                                double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384 +
                                                             offset_26406)];
                }
                // apply reduction operation
                {
                    double binlam_res_26401 = x_26397 + y_26399;
                    double binlam_res_26402 = x_26398 + y_26400;
                    
                    x_26397 = binlam_res_26401;
                    x_26398 = binlam_res_26402;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384)] =
                        x_26397;
                    ((volatile __local
                      double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384)] =
                        x_26398;
                }
            }
            offset_26406 *= 2;
        }
        while (slt32(skip_waves_26407,
                     squot32(sext_i64_i32(segred_group_sizze_20651) +
                             wave_sizze_26386 - 1, wave_sizze_26386))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_26406 = skip_waves_26407 * wave_sizze_26386;
            if (slt32(local_tid_26384 + offset_26406,
                      sext_i64_i32(segred_group_sizze_20651)) &&
                ((local_tid_26384 - squot32(local_tid_26384, wave_sizze_26386) *
                  wave_sizze_26386) == 0 && (squot32(local_tid_26384,
                                                     wave_sizze_26386) & (2 *
                                                                          skip_waves_26407 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    y_26399 = ((__local
                                double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384 +
                                                             offset_26406)];
                    y_26400 = ((__local
                                double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384 +
                                                             offset_26406)];
                }
                // apply reduction operation
                {
                    double binlam_res_26401 = x_26397 + y_26399;
                    double binlam_res_26402 = x_26398 + y_26400;
                    
                    x_26397 = binlam_res_26401;
                    x_26398 = binlam_res_26402;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384)] =
                        x_26397;
                    ((__local
                      double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384)] =
                        x_26398;
                }
            }
            skip_waves_26407 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_26384) == (int64_t) 0) {
                ((__global
                  double *) segred_tmp_mem_26378)[sext_i32_i64(group_tid_26385) *
                                                  k_16569 + nest_i_26405 +
                                                  sext_i32_i64(local_tid_26384)] =
                    x_26397;
                ((__global
                  double *) segred_tmp_mem_26380)[sext_i32_i64(group_tid_26385) *
                                                  k_16569 + nest_i_26405 +
                                                  sext_i32_i64(local_tid_26384)] =
                    x_26398;
            }
        }
    }
    
    int32_t old_counter_26408;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_26384 == 0) {
            for (int64_t i_26409 = 0; i_26409 < k_16569; i_26409++) {
                double tmp_26410;
                
                tmp_26410 = ((__global
                              double *) segred_tmp_mem_26378)[sext_i32_i64(group_tid_26385) *
                                                              k_16569 +
                                                              sext_i32_i64(local_tid_26384) +
                                                              i_26409];
                ((__global
                  double *) segred_tmp_mem_26378)[sext_i32_i64(group_tid_26385) *
                                                  k_16569 + i_26409] =
                    tmp_26410;
            }
            for (int64_t i_26411 = 0; i_26411 < k_16569; i_26411++) {
                double tmp_26412;
                
                tmp_26412 = ((__global
                              double *) segred_tmp_mem_26380)[sext_i32_i64(group_tid_26385) *
                                                              k_16569 +
                                                              sext_i32_i64(local_tid_26384) +
                                                              i_26411];
                ((__global
                  double *) segred_tmp_mem_26380)[sext_i32_i64(group_tid_26385) *
                                                  k_16569 + i_26411] =
                    tmp_26412;
            }
            mem_fence_global();
            old_counter_26408 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_jacobianzicounter_mem_26376)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_26388)[(int64_t) 0] =
                old_counter_26408 == num_groups_20652 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_26413;
    
    is_last_group_26413 = ((__local bool *) sync_arr_mem_26388)[(int64_t) 0];
    if (is_last_group_26413) {
        if (local_tid_26384 == 0) {
            old_counter_26408 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_jacobianzicounter_mem_26376)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_20652));
        }
        for (int64_t nest_i_26414 = 0; nest_i_26414 < k_16569; nest_i_26414++) {
            // read in the per-group-results
            {
                int64_t read_per_thread_26415 = sdiv_up64(num_groups_20652,
                                                          segred_group_sizze_20651);
                
                x_20659 = 0.0;
                x_20662 = 0.0;
                for (int64_t i_26416 = 0; i_26416 < read_per_thread_26415;
                     i_26416++) {
                    int64_t group_res_id_26417 = sext_i32_i64(local_tid_26384) *
                            read_per_thread_26415 + i_26416;
                    int64_t index_of_group_res_26418 = group_res_id_26417;
                    
                    if (slt64(group_res_id_26417, num_groups_20652)) {
                        y_20660 = ((__global
                                    double *) segred_tmp_mem_26378)[index_of_group_res_26418 *
                                                                    k_16569 +
                                                                    nest_i_26414];
                        y_20663 = ((__global
                                    double *) segred_tmp_mem_26380)[index_of_group_res_26418 *
                                                                    k_16569 +
                                                                    nest_i_26414];
                        
                        double binlam_res_20661 = x_20659 + y_20660;
                        double binlam_res_20664 = x_20662 + y_20663;
                        
                        x_20659 = binlam_res_20661;
                        x_20662 = binlam_res_20664;
                    }
                }
            }
            ((__local
              double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384)] =
                x_20659;
            ((__local
              double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384)] =
                x_20662;
            barrier(CLK_LOCAL_MEM_FENCE);
            // reduce the per-group results
            {
                int32_t offset_26419;
                int32_t skip_waves_26420 = 1;
                double x_26397;
                double x_26398;
                double y_26399;
                double y_26400;
                
                offset_26419 = 0;
                // participating threads read initial accumulator
                {
                    if (slt32(local_tid_26384,
                              sext_i64_i32(segred_group_sizze_20651))) {
                        x_26397 = ((__local
                                    double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384 +
                                                                 offset_26419)];
                        x_26398 = ((__local
                                    double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384 +
                                                                 offset_26419)];
                    }
                }
                offset_26419 = 1;
                while (slt32(offset_26419, wave_sizze_26386)) {
                    if (slt32(local_tid_26384 + offset_26419,
                              sext_i64_i32(segred_group_sizze_20651)) &&
                        ((local_tid_26384 - squot32(local_tid_26384,
                                                    wave_sizze_26386) *
                          wave_sizze_26386) & (2 * offset_26419 - 1)) == 0) {
                        // read array element
                        {
                            y_26399 = ((volatile __local
                                        double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384 +
                                                                     offset_26419)];
                            y_26400 = ((volatile __local
                                        double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384 +
                                                                     offset_26419)];
                        }
                        // apply reduction operation
                        {
                            double binlam_res_26401 = x_26397 + y_26399;
                            double binlam_res_26402 = x_26398 + y_26400;
                            
                            x_26397 = binlam_res_26401;
                            x_26398 = binlam_res_26402;
                        }
                        // write result of operation
                        {
                            ((volatile __local
                              double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384)] =
                                x_26397;
                            ((volatile __local
                              double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384)] =
                                x_26398;
                        }
                    }
                    offset_26419 *= 2;
                }
                while (slt32(skip_waves_26420,
                             squot32(sext_i64_i32(segred_group_sizze_20651) +
                                     wave_sizze_26386 - 1, wave_sizze_26386))) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                    offset_26419 = skip_waves_26420 * wave_sizze_26386;
                    if (slt32(local_tid_26384 + offset_26419,
                              sext_i64_i32(segred_group_sizze_20651)) &&
                        ((local_tid_26384 - squot32(local_tid_26384,
                                                    wave_sizze_26386) *
                          wave_sizze_26386) == 0 && (squot32(local_tid_26384,
                                                             wave_sizze_26386) &
                                                     (2 * skip_waves_26420 -
                                                      1)) == 0)) {
                        // read array element
                        {
                            y_26399 = ((__local
                                        double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384 +
                                                                     offset_26419)];
                            y_26400 = ((__local
                                        double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384 +
                                                                     offset_26419)];
                        }
                        // apply reduction operation
                        {
                            double binlam_res_26401 = x_26397 + y_26399;
                            double binlam_res_26402 = x_26398 + y_26400;
                            
                            x_26397 = binlam_res_26401;
                            x_26398 = binlam_res_26402;
                        }
                        // write result of operation
                        {
                            ((__local
                              double *) red_arr_mem_26390)[sext_i32_i64(local_tid_26384)] =
                                x_26397;
                            ((__local
                              double *) red_arr_mem_26392)[sext_i32_i64(local_tid_26384)] =
                                x_26398;
                        }
                    }
                    skip_waves_26420 *= 2;
                }
                // and back to memory with the final result
                {
                    if (local_tid_26384 == 0) {
                        ((__global double *) mem_24715)[nest_i_26414] = x_26397;
                        ((__global double *) mem_24718)[nest_i_26414] = x_26398;
                    }
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_20651
}
__kernel void calculate_jacobianzisegred_small_19485(__global
                                                     int *global_failure,
                                                     uint red_arr_mem_25660_backing_offset_0,
                                                     int64_t k_16569,
                                                     int64_t d_16570,
                                                     int64_t n_16572,
                                                     int64_t num_groups_19478,
                                                     int64_t segment_sizze_nonzzero_25653,
                                                     __global
                                                     unsigned char *mem_24368,
                                                     __global
                                                     unsigned char *mem_24372,
                                                     __global
                                                     unsigned char *mem_24378)
{
    #define segred_group_sizze_19477 (calculate_jacobianzisegred_group_sizze_19330)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_25660_backing_0 =
                           &shared_mem[red_arr_mem_25660_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25655;
    int32_t local_tid_25656;
    int64_t group_sizze_25659;
    int32_t wave_sizze_25658;
    int32_t group_tid_25657;
    
    global_tid_25655 = get_global_id(0);
    local_tid_25656 = get_local_id(0);
    group_sizze_25659 = get_local_size(0);
    wave_sizze_25658 = LOCKSTEP_WIDTH;
    group_tid_25657 = get_group_id(0);
    
    int32_t phys_tid_19485 = global_tid_25655;
    __local unsigned char *red_arr_mem_25660;
    
    red_arr_mem_25660 = (__local unsigned char *) red_arr_mem_25660_backing_0;
    
    int32_t phys_group_id_25662;
    
    phys_group_id_25662 = get_group_id(0);
    for (int32_t i_25663 = 0; i_25663 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16569 * n_16572 * d_16570,
                                          squot64(segred_group_sizze_19477,
                                                  segment_sizze_nonzzero_25653))) -
                   phys_group_id_25662, sext_i64_i32(num_groups_19478));
         i_25663++) {
        int32_t virt_group_id_25664 = phys_group_id_25662 + i_25663 *
                sext_i64_i32(num_groups_19478);
        int64_t slice_25665 = d_16570;
        int64_t slice_25666 = n_16572 * slice_25665;
        int64_t slice_25667 = k_16569 * slice_25666;
        int64_t gtid_19481 = squot64(squot64(sext_i32_i64(local_tid_25656),
                                             segment_sizze_nonzzero_25653) +
                                     sext_i32_i64(virt_group_id_25664) *
                                     squot64(segred_group_sizze_19477,
                                             segment_sizze_nonzzero_25653),
                                     slice_25666);
        int64_t remnant_25668 = squot64(sext_i32_i64(local_tid_25656),
                                        segment_sizze_nonzzero_25653) +
                sext_i32_i64(virt_group_id_25664) *
                squot64(segred_group_sizze_19477,
                        segment_sizze_nonzzero_25653) - gtid_19481 *
                slice_25666;
        int64_t gtid_19482 = squot64(remnant_25668, slice_25665);
        int64_t remnant_25669 = remnant_25668 - gtid_19482 * slice_25665;
        int64_t gtid_19483 = remnant_25669;
        int64_t remnant_25670 = remnant_25669 - gtid_19483;
        int64_t gtid_19484 = srem64(sext_i32_i64(local_tid_25656), d_16570);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, d_16570) && (((slt64(gtid_19481, k_16569) &&
                                                  slt64(gtid_19482, n_16572)) &&
                                                 slt64(gtid_19483, d_16570)) &&
                                                slt64(sext_i32_i64(local_tid_25656),
                                                      d_16570 *
                                                      squot64(segred_group_sizze_19477,
                                                              segment_sizze_nonzzero_25653)))) {
                double x_19493;
                
                x_19493 = ((__global double *) mem_24368)[gtid_19482 *
                                                          (d_16570 * k_16569) +
                                                          gtid_19481 * d_16570 +
                                                          gtid_19484];
                
                double x_19494;
                
                x_19494 = ((__global double *) mem_24372)[gtid_19481 *
                                                          (d_16570 * d_16570) +
                                                          gtid_19483 * d_16570 +
                                                          gtid_19484];
                
                double defunc_1_f_res_19495 = x_19493 * x_19494;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_25660)[sext_i32_i64(local_tid_25656)] =
                        defunc_1_f_res_19495;
                }
            } else {
                ((__local
                  double *) red_arr_mem_25660)[sext_i32_i64(local_tid_25656)] =
                    0.0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, d_16570)) {
            // perform segmented scan to imitate reduction
            {
                double x_19486;
                double x_19487;
                double x_25671;
                double x_25672;
                bool ltid_in_bounds_25674 = slt64(sext_i32_i64(local_tid_25656),
                                                  d_16570 *
                                                  squot64(segred_group_sizze_19477,
                                                          segment_sizze_nonzzero_25653));
                int32_t skip_threads_25675;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_25674) {
                        x_19487 = ((volatile __local
                                    double *) red_arr_mem_25660)[sext_i32_i64(local_tid_25656)];
                        if ((local_tid_25656 - squot32(local_tid_25656, 32) *
                             32) == 0) {
                            x_19486 = x_19487;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_25675 = 1;
                    while (slt32(skip_threads_25675, 32)) {
                        bool thread_active_25676 = sle32(skip_threads_25675,
                                                         local_tid_25656 -
                                                         squot32(local_tid_25656,
                                                                 32) * 32) &&
                             ltid_in_bounds_25674;
                        
                        if (thread_active_25676) {
                            // read operands
                            {
                                x_19486 = ((volatile __local
                                            double *) red_arr_mem_25660)[sext_i32_i64(local_tid_25656) -
                                                                         sext_i32_i64(skip_threads_25675)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_25677 =
                                 slt64(srem64(sext_i32_i64(local_tid_25656),
                                              d_16570),
                                       sext_i32_i64(local_tid_25656) -
                                       sext_i32_i64(local_tid_25656 -
                                       skip_threads_25675));
                            
                            if (thread_active_25676 && inactive_25677) {
                                x_19486 = x_19487;
                            }
                            if (thread_active_25676) {
                                if (!inactive_25677) {
                                    double defunc_1_op_res_19488 = x_19486 +
                                           x_19487;
                                    
                                    x_19486 = defunc_1_op_res_19488;
                                }
                            }
                        }
                        if (sle32(wave_sizze_25658, skip_threads_25675)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_25676) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25660)[sext_i32_i64(local_tid_25656)] =
                                    x_19486;
                                x_19487 = x_19486;
                            }
                        }
                        if (sle32(wave_sizze_25658, skip_threads_25675)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_25675 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_25656 - squot32(local_tid_25656, 32) * 32) ==
                        31 && ltid_in_bounds_25674) {
                        ((volatile __local
                          double *) red_arr_mem_25660)[sext_i32_i64(squot32(local_tid_25656,
                                                                            32))] =
                            x_19486;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_25678;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_25656, 32) == 0 &&
                            ltid_in_bounds_25674) {
                            x_25672 = ((volatile __local
                                        double *) red_arr_mem_25660)[sext_i32_i64(local_tid_25656)];
                            if ((local_tid_25656 - squot32(local_tid_25656,
                                                           32) * 32) == 0) {
                                x_25671 = x_25672;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_25678 = 1;
                        while (slt32(skip_threads_25678, 32)) {
                            bool thread_active_25679 = sle32(skip_threads_25678,
                                                             local_tid_25656 -
                                                             squot32(local_tid_25656,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_25656, 32) == 0 &&
                                  ltid_in_bounds_25674);
                            
                            if (thread_active_25679) {
                                // read operands
                                {
                                    x_25671 = ((volatile __local
                                                double *) red_arr_mem_25660)[sext_i32_i64(local_tid_25656) -
                                                                             sext_i32_i64(skip_threads_25678)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_25680 =
                                     slt64(srem64(sext_i32_i64(local_tid_25656 *
                                                  32 + 32 - 1), d_16570),
                                           sext_i32_i64(local_tid_25656 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_25656 -
                                                         skip_threads_25678) *
                                           32 + 32 - 1));
                                
                                if (thread_active_25679 && inactive_25680) {
                                    x_25671 = x_25672;
                                }
                                if (thread_active_25679) {
                                    if (!inactive_25680) {
                                        double defunc_1_op_res_25673 = x_25671 +
                                               x_25672;
                                        
                                        x_25671 = defunc_1_op_res_25673;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_25658, skip_threads_25678)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_25679) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_25660)[sext_i32_i64(local_tid_25656)] =
                                        x_25671;
                                    x_25672 = x_25671;
                                }
                            }
                            if (sle32(wave_sizze_25658, skip_threads_25678)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_25678 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_25681 = squot32(local_tid_25656, 32) == 0 ||
                     !ltid_in_bounds_25674;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_25681) {
                            x_19487 = x_19486;
                            x_19486 = ((__local
                                        double *) red_arr_mem_25660)[sext_i32_i64(squot32(local_tid_25656,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_25682 =
                             slt64(srem64(sext_i32_i64(local_tid_25656),
                                          d_16570),
                                   sext_i32_i64(local_tid_25656) -
                                   sext_i32_i64(squot32(local_tid_25656, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_25681) {
                            if (inactive_25682) {
                                x_19486 = x_19487;
                            }
                        }
                        if (!no_carry_in_25681) {
                            if (!inactive_25682) {
                                double defunc_1_op_res_19488 = x_19486 +
                                       x_19487;
                                
                                x_19486 = defunc_1_op_res_19488;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_25681) {
                            ((__local
                              double *) red_arr_mem_25660)[sext_i32_i64(local_tid_25656)] =
                                x_19486;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_25656, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_25660)[sext_i32_i64(local_tid_25656)] =
                            x_19487;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_25664) *
                      squot64(segred_group_sizze_19477,
                              segment_sizze_nonzzero_25653) +
                      sext_i32_i64(local_tid_25656), k_16569 * n_16572 *
                      d_16570) && slt64(sext_i32_i64(local_tid_25656),
                                        squot64(segred_group_sizze_19477,
                                                segment_sizze_nonzzero_25653))) {
                double tmp_25683;
                
                tmp_25683 = ((__local
                              double *) red_arr_mem_25660)[(sext_i32_i64(local_tid_25656) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_25653 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24378)[squot64(sext_i32_i64(virt_group_id_25664) *
                                               squot64(segred_group_sizze_19477,
                                                       segment_sizze_nonzzero_25653) +
                                               sext_i32_i64(local_tid_25656),
                                               n_16572 * d_16570) * (d_16570 *
                                                                     n_16572) +
                                       squot64(sext_i32_i64(virt_group_id_25664) *
                                               squot64(segred_group_sizze_19477,
                                                       segment_sizze_nonzzero_25653) +
                                               sext_i32_i64(local_tid_25656) -
                                               squot64(sext_i32_i64(virt_group_id_25664) *
                                                       squot64(segred_group_sizze_19477,
                                                               segment_sizze_nonzzero_25653) +
                                                       sext_i32_i64(local_tid_25656),
                                                       n_16572 * d_16570) *
                                               (n_16572 * d_16570), d_16570) *
                                       d_16570 +
                                       (sext_i32_i64(virt_group_id_25664) *
                                        squot64(segred_group_sizze_19477,
                                                segment_sizze_nonzzero_25653) +
                                        sext_i32_i64(local_tid_25656) -
                                        squot64(sext_i32_i64(virt_group_id_25664) *
                                                squot64(segred_group_sizze_19477,
                                                        segment_sizze_nonzzero_25653) +
                                                sext_i32_i64(local_tid_25656),
                                                n_16572 * d_16570) * (n_16572 *
                                                                      d_16570) -
                                        squot64(sext_i32_i64(virt_group_id_25664) *
                                                squot64(segred_group_sizze_19477,
                                                        segment_sizze_nonzzero_25653) +
                                                sext_i32_i64(local_tid_25656) -
                                                squot64(sext_i32_i64(virt_group_id_25664) *
                                                        squot64(segred_group_sizze_19477,
                                                                segment_sizze_nonzzero_25653) +
                                                        sext_i32_i64(local_tid_25656),
                                                        n_16572 * d_16570) *
                                                (n_16572 * d_16570), d_16570) *
                                        d_16570)] = tmp_25683;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_19477
}
__kernel void calculate_jacobianzisegred_small_19629(__global
                                                     int *global_failure,
                                                     uint red_arr_mem_25767_backing_offset_0,
                                                     int64_t k_16569,
                                                     int64_t d_16570,
                                                     int64_t n_16572,
                                                     int64_t num_groups_19623,
                                                     int64_t segment_sizze_nonzzero_25760,
                                                     __global
                                                     unsigned char *ext_mem_24393,
                                                     __global
                                                     unsigned char *mem_24430)
{
    #define segred_group_sizze_19622 (calculate_jacobianzisegred_group_sizze_19563)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_25767_backing_0 =
                           &shared_mem[red_arr_mem_25767_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25762;
    int32_t local_tid_25763;
    int64_t group_sizze_25766;
    int32_t wave_sizze_25765;
    int32_t group_tid_25764;
    
    global_tid_25762 = get_global_id(0);
    local_tid_25763 = get_local_id(0);
    group_sizze_25766 = get_local_size(0);
    wave_sizze_25765 = LOCKSTEP_WIDTH;
    group_tid_25764 = get_group_id(0);
    
    int32_t phys_tid_19629 = global_tid_25762;
    __local unsigned char *red_arr_mem_25767;
    
    red_arr_mem_25767 = (__local unsigned char *) red_arr_mem_25767_backing_0;
    
    int32_t phys_group_id_25769;
    
    phys_group_id_25769 = get_group_id(0);
    for (int32_t i_25770 = 0; i_25770 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16569 * n_16572,
                                          squot64(segred_group_sizze_19622,
                                                  segment_sizze_nonzzero_25760))) -
                   phys_group_id_25769, sext_i64_i32(num_groups_19623));
         i_25770++) {
        int32_t virt_group_id_25771 = phys_group_id_25769 + i_25770 *
                sext_i64_i32(num_groups_19623);
        int64_t slice_25772 = n_16572;
        int64_t slice_25773 = k_16569 * slice_25772;
        int64_t gtid_19626 = squot64(squot64(sext_i32_i64(local_tid_25763),
                                             segment_sizze_nonzzero_25760) +
                                     sext_i32_i64(virt_group_id_25771) *
                                     squot64(segred_group_sizze_19622,
                                             segment_sizze_nonzzero_25760),
                                     slice_25772);
        int64_t remnant_25774 = squot64(sext_i32_i64(local_tid_25763),
                                        segment_sizze_nonzzero_25760) +
                sext_i32_i64(virt_group_id_25771) *
                squot64(segred_group_sizze_19622,
                        segment_sizze_nonzzero_25760) - gtid_19626 *
                slice_25772;
        int64_t gtid_19627 = remnant_25774;
        int64_t remnant_25775 = remnant_25774 - gtid_19627;
        int64_t gtid_19628 = srem64(sext_i32_i64(local_tid_25763), d_16570);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, d_16570) && ((slt64(gtid_19626, k_16569) &&
                                                 slt64(gtid_19627, n_16572)) &&
                                                slt64(sext_i32_i64(local_tid_25763),
                                                      d_16570 *
                                                      squot64(segred_group_sizze_19622,
                                                              segment_sizze_nonzzero_25760)))) {
                double x_19635;
                
                x_19635 = ((__global double *) ext_mem_24393)[gtid_19626 *
                                                              (d_16570 *
                                                               n_16572) +
                                                              gtid_19627 *
                                                              d_16570 +
                                                              gtid_19628];
                
                double defunc_0_f_res_19636 = x_19635 * x_19635;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_25767)[sext_i32_i64(local_tid_25763)] =
                        defunc_0_f_res_19636;
                }
            } else {
                ((__local
                  double *) red_arr_mem_25767)[sext_i32_i64(local_tid_25763)] =
                    0.0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, d_16570)) {
            // perform segmented scan to imitate reduction
            {
                double x_19630;
                double x_19631;
                double x_25776;
                double x_25777;
                bool ltid_in_bounds_25779 = slt64(sext_i32_i64(local_tid_25763),
                                                  d_16570 *
                                                  squot64(segred_group_sizze_19622,
                                                          segment_sizze_nonzzero_25760));
                int32_t skip_threads_25780;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_25779) {
                        x_19631 = ((volatile __local
                                    double *) red_arr_mem_25767)[sext_i32_i64(local_tid_25763)];
                        if ((local_tid_25763 - squot32(local_tid_25763, 32) *
                             32) == 0) {
                            x_19630 = x_19631;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_25780 = 1;
                    while (slt32(skip_threads_25780, 32)) {
                        bool thread_active_25781 = sle32(skip_threads_25780,
                                                         local_tid_25763 -
                                                         squot32(local_tid_25763,
                                                                 32) * 32) &&
                             ltid_in_bounds_25779;
                        
                        if (thread_active_25781) {
                            // read operands
                            {
                                x_19630 = ((volatile __local
                                            double *) red_arr_mem_25767)[sext_i32_i64(local_tid_25763) -
                                                                         sext_i32_i64(skip_threads_25780)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_25782 =
                                 slt64(srem64(sext_i32_i64(local_tid_25763),
                                              d_16570),
                                       sext_i32_i64(local_tid_25763) -
                                       sext_i32_i64(local_tid_25763 -
                                       skip_threads_25780));
                            
                            if (thread_active_25781 && inactive_25782) {
                                x_19630 = x_19631;
                            }
                            if (thread_active_25781) {
                                if (!inactive_25782) {
                                    double defunc_1_op_res_19632 = x_19630 +
                                           x_19631;
                                    
                                    x_19630 = defunc_1_op_res_19632;
                                }
                            }
                        }
                        if (sle32(wave_sizze_25765, skip_threads_25780)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_25781) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25767)[sext_i32_i64(local_tid_25763)] =
                                    x_19630;
                                x_19631 = x_19630;
                            }
                        }
                        if (sle32(wave_sizze_25765, skip_threads_25780)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_25780 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_25763 - squot32(local_tid_25763, 32) * 32) ==
                        31 && ltid_in_bounds_25779) {
                        ((volatile __local
                          double *) red_arr_mem_25767)[sext_i32_i64(squot32(local_tid_25763,
                                                                            32))] =
                            x_19630;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_25783;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_25763, 32) == 0 &&
                            ltid_in_bounds_25779) {
                            x_25777 = ((volatile __local
                                        double *) red_arr_mem_25767)[sext_i32_i64(local_tid_25763)];
                            if ((local_tid_25763 - squot32(local_tid_25763,
                                                           32) * 32) == 0) {
                                x_25776 = x_25777;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_25783 = 1;
                        while (slt32(skip_threads_25783, 32)) {
                            bool thread_active_25784 = sle32(skip_threads_25783,
                                                             local_tid_25763 -
                                                             squot32(local_tid_25763,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_25763, 32) == 0 &&
                                  ltid_in_bounds_25779);
                            
                            if (thread_active_25784) {
                                // read operands
                                {
                                    x_25776 = ((volatile __local
                                                double *) red_arr_mem_25767)[sext_i32_i64(local_tid_25763) -
                                                                             sext_i32_i64(skip_threads_25783)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_25785 =
                                     slt64(srem64(sext_i32_i64(local_tid_25763 *
                                                  32 + 32 - 1), d_16570),
                                           sext_i32_i64(local_tid_25763 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_25763 -
                                                         skip_threads_25783) *
                                           32 + 32 - 1));
                                
                                if (thread_active_25784 && inactive_25785) {
                                    x_25776 = x_25777;
                                }
                                if (thread_active_25784) {
                                    if (!inactive_25785) {
                                        double defunc_1_op_res_25778 = x_25776 +
                                               x_25777;
                                        
                                        x_25776 = defunc_1_op_res_25778;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_25765, skip_threads_25783)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_25784) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_25767)[sext_i32_i64(local_tid_25763)] =
                                        x_25776;
                                    x_25777 = x_25776;
                                }
                            }
                            if (sle32(wave_sizze_25765, skip_threads_25783)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_25783 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_25786 = squot32(local_tid_25763, 32) == 0 ||
                     !ltid_in_bounds_25779;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_25786) {
                            x_19631 = x_19630;
                            x_19630 = ((__local
                                        double *) red_arr_mem_25767)[sext_i32_i64(squot32(local_tid_25763,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_25787 =
                             slt64(srem64(sext_i32_i64(local_tid_25763),
                                          d_16570),
                                   sext_i32_i64(local_tid_25763) -
                                   sext_i32_i64(squot32(local_tid_25763, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_25786) {
                            if (inactive_25787) {
                                x_19630 = x_19631;
                            }
                        }
                        if (!no_carry_in_25786) {
                            if (!inactive_25787) {
                                double defunc_1_op_res_19632 = x_19630 +
                                       x_19631;
                                
                                x_19630 = defunc_1_op_res_19632;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_25786) {
                            ((__local
                              double *) red_arr_mem_25767)[sext_i32_i64(local_tid_25763)] =
                                x_19630;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_25763, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_25767)[sext_i32_i64(local_tid_25763)] =
                            x_19631;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_25771) *
                      squot64(segred_group_sizze_19622,
                              segment_sizze_nonzzero_25760) +
                      sext_i32_i64(local_tid_25763), k_16569 * n_16572) &&
                slt64(sext_i32_i64(local_tid_25763),
                      squot64(segred_group_sizze_19622,
                              segment_sizze_nonzzero_25760))) {
                double tmp_25788;
                
                tmp_25788 = ((__local
                              double *) red_arr_mem_25767)[(sext_i32_i64(local_tid_25763) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_25760 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24430)[squot64(sext_i32_i64(virt_group_id_25771) *
                                               squot64(segred_group_sizze_19622,
                                                       segment_sizze_nonzzero_25760) +
                                               sext_i32_i64(local_tid_25763),
                                               n_16572) * n_16572 +
                                       (sext_i32_i64(virt_group_id_25771) *
                                        squot64(segred_group_sizze_19622,
                                                segment_sizze_nonzzero_25760) +
                                        sext_i32_i64(local_tid_25763) -
                                        squot64(sext_i32_i64(virt_group_id_25771) *
                                                squot64(segred_group_sizze_19622,
                                                        segment_sizze_nonzzero_25760) +
                                                sext_i32_i64(local_tid_25763),
                                                n_16572) * n_16572)] =
                    tmp_25788;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_19622
}
__kernel void calculate_jacobianzisegred_small_19798(__global
                                                     int *global_failure,
                                                     uint red_arr_mem_25884_backing_offset_0,
                                                     int64_t k_16569,
                                                     int64_t d_16570,
                                                     int64_t dz2080U_16571,
                                                     int64_t num_groups_19793,
                                                     int64_t segment_sizze_nonzzero_25877,
                                                     __global
                                                     unsigned char *icf_mem_24019,
                                                     __global
                                                     unsigned char *mem_24460)
{
    #define segred_group_sizze_19792 (calculate_jacobianzisegred_group_sizze_19722)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_25884_backing_0 =
                           &shared_mem[red_arr_mem_25884_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25879;
    int32_t local_tid_25880;
    int64_t group_sizze_25883;
    int32_t wave_sizze_25882;
    int32_t group_tid_25881;
    
    global_tid_25879 = get_global_id(0);
    local_tid_25880 = get_local_id(0);
    group_sizze_25883 = get_local_size(0);
    wave_sizze_25882 = LOCKSTEP_WIDTH;
    group_tid_25881 = get_group_id(0);
    
    int32_t phys_tid_19798 = global_tid_25879;
    __local unsigned char *red_arr_mem_25884;
    
    red_arr_mem_25884 = (__local unsigned char *) red_arr_mem_25884_backing_0;
    
    int32_t phys_group_id_25886;
    
    phys_group_id_25886 = get_group_id(0);
    for (int32_t i_25887 = 0; i_25887 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16569,
                                          squot64(segred_group_sizze_19792,
                                                  segment_sizze_nonzzero_25877))) -
                   phys_group_id_25886, sext_i64_i32(num_groups_19793));
         i_25887++) {
        int32_t virt_group_id_25888 = phys_group_id_25886 + i_25887 *
                sext_i64_i32(num_groups_19793);
        int64_t slice_25889 = k_16569;
        int64_t gtid_19796 = squot64(sext_i32_i64(local_tid_25880),
                                     segment_sizze_nonzzero_25877) +
                sext_i32_i64(virt_group_id_25888) *
                squot64(segred_group_sizze_19792, segment_sizze_nonzzero_25877);
        int64_t remnant_25890 = squot64(sext_i32_i64(local_tid_25880),
                                        segment_sizze_nonzzero_25877) +
                sext_i32_i64(virt_group_id_25888) *
                squot64(segred_group_sizze_19792,
                        segment_sizze_nonzzero_25877) - gtid_19796;
        int64_t gtid_19797 = srem64(sext_i32_i64(local_tid_25880), d_16570);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, d_16570) && (slt64(gtid_19796, k_16569) &&
                                                slt64(sext_i32_i64(local_tid_25880),
                                                      d_16570 *
                                                      squot64(segred_group_sizze_19792,
                                                              segment_sizze_nonzzero_25877)))) {
                double x_19803;
                
                x_19803 = ((__global double *) icf_mem_24019)[gtid_19796 *
                                                              dz2080U_16571 +
                                                              gtid_19797];
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_25884)[sext_i32_i64(local_tid_25880)] =
                        x_19803;
                }
            } else {
                ((__local
                  double *) red_arr_mem_25884)[sext_i32_i64(local_tid_25880)] =
                    0.0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, d_16570)) {
            // perform segmented scan to imitate reduction
            {
                double x_19799;
                double x_19800;
                double x_25891;
                double x_25892;
                bool ltid_in_bounds_25894 = slt64(sext_i32_i64(local_tid_25880),
                                                  d_16570 *
                                                  squot64(segred_group_sizze_19792,
                                                          segment_sizze_nonzzero_25877));
                int32_t skip_threads_25895;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_25894) {
                        x_19800 = ((volatile __local
                                    double *) red_arr_mem_25884)[sext_i32_i64(local_tid_25880)];
                        if ((local_tid_25880 - squot32(local_tid_25880, 32) *
                             32) == 0) {
                            x_19799 = x_19800;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_25895 = 1;
                    while (slt32(skip_threads_25895, 32)) {
                        bool thread_active_25896 = sle32(skip_threads_25895,
                                                         local_tid_25880 -
                                                         squot32(local_tid_25880,
                                                                 32) * 32) &&
                             ltid_in_bounds_25894;
                        
                        if (thread_active_25896) {
                            // read operands
                            {
                                x_19799 = ((volatile __local
                                            double *) red_arr_mem_25884)[sext_i32_i64(local_tid_25880) -
                                                                         sext_i32_i64(skip_threads_25895)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_25897 =
                                 slt64(srem64(sext_i32_i64(local_tid_25880),
                                              d_16570),
                                       sext_i32_i64(local_tid_25880) -
                                       sext_i32_i64(local_tid_25880 -
                                       skip_threads_25895));
                            
                            if (thread_active_25896 && inactive_25897) {
                                x_19799 = x_19800;
                            }
                            if (thread_active_25896) {
                                if (!inactive_25897) {
                                    double defunc_1_op_res_19801 = x_19799 +
                                           x_19800;
                                    
                                    x_19799 = defunc_1_op_res_19801;
                                }
                            }
                        }
                        if (sle32(wave_sizze_25882, skip_threads_25895)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_25896) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25884)[sext_i32_i64(local_tid_25880)] =
                                    x_19799;
                                x_19800 = x_19799;
                            }
                        }
                        if (sle32(wave_sizze_25882, skip_threads_25895)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_25895 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_25880 - squot32(local_tid_25880, 32) * 32) ==
                        31 && ltid_in_bounds_25894) {
                        ((volatile __local
                          double *) red_arr_mem_25884)[sext_i32_i64(squot32(local_tid_25880,
                                                                            32))] =
                            x_19799;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_25898;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_25880, 32) == 0 &&
                            ltid_in_bounds_25894) {
                            x_25892 = ((volatile __local
                                        double *) red_arr_mem_25884)[sext_i32_i64(local_tid_25880)];
                            if ((local_tid_25880 - squot32(local_tid_25880,
                                                           32) * 32) == 0) {
                                x_25891 = x_25892;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_25898 = 1;
                        while (slt32(skip_threads_25898, 32)) {
                            bool thread_active_25899 = sle32(skip_threads_25898,
                                                             local_tid_25880 -
                                                             squot32(local_tid_25880,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_25880, 32) == 0 &&
                                  ltid_in_bounds_25894);
                            
                            if (thread_active_25899) {
                                // read operands
                                {
                                    x_25891 = ((volatile __local
                                                double *) red_arr_mem_25884)[sext_i32_i64(local_tid_25880) -
                                                                             sext_i32_i64(skip_threads_25898)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_25900 =
                                     slt64(srem64(sext_i32_i64(local_tid_25880 *
                                                  32 + 32 - 1), d_16570),
                                           sext_i32_i64(local_tid_25880 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_25880 -
                                                         skip_threads_25898) *
                                           32 + 32 - 1));
                                
                                if (thread_active_25899 && inactive_25900) {
                                    x_25891 = x_25892;
                                }
                                if (thread_active_25899) {
                                    if (!inactive_25900) {
                                        double defunc_1_op_res_25893 = x_25891 +
                                               x_25892;
                                        
                                        x_25891 = defunc_1_op_res_25893;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_25882, skip_threads_25898)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_25899) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_25884)[sext_i32_i64(local_tid_25880)] =
                                        x_25891;
                                    x_25892 = x_25891;
                                }
                            }
                            if (sle32(wave_sizze_25882, skip_threads_25898)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_25898 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_25901 = squot32(local_tid_25880, 32) == 0 ||
                     !ltid_in_bounds_25894;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_25901) {
                            x_19800 = x_19799;
                            x_19799 = ((__local
                                        double *) red_arr_mem_25884)[sext_i32_i64(squot32(local_tid_25880,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_25902 =
                             slt64(srem64(sext_i32_i64(local_tid_25880),
                                          d_16570),
                                   sext_i32_i64(local_tid_25880) -
                                   sext_i32_i64(squot32(local_tid_25880, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_25901) {
                            if (inactive_25902) {
                                x_19799 = x_19800;
                            }
                        }
                        if (!no_carry_in_25901) {
                            if (!inactive_25902) {
                                double defunc_1_op_res_19801 = x_19799 +
                                       x_19800;
                                
                                x_19799 = defunc_1_op_res_19801;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_25901) {
                            ((__local
                              double *) red_arr_mem_25884)[sext_i32_i64(local_tid_25880)] =
                                x_19799;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_25880, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_25884)[sext_i32_i64(local_tid_25880)] =
                            x_19800;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_25888) *
                      squot64(segred_group_sizze_19792,
                              segment_sizze_nonzzero_25877) +
                      sext_i32_i64(local_tid_25880), k_16569) &&
                slt64(sext_i32_i64(local_tid_25880),
                      squot64(segred_group_sizze_19792,
                              segment_sizze_nonzzero_25877))) {
                double tmp_25903;
                
                tmp_25903 = ((__local
                              double *) red_arr_mem_25884)[(sext_i32_i64(local_tid_25880) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_25877 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24460)[sext_i32_i64(virt_group_id_25888) *
                                       squot64(segred_group_sizze_19792,
                                               segment_sizze_nonzzero_25877) +
                                       sext_i32_i64(local_tid_25880)] =
                    tmp_25903;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_19792
}
__kernel void calculate_jacobianzisegred_small_20546(__global
                                                     int *global_failure,
                                                     uint red_arr_mem_26121_backing_offset_0,
                                                     uint red_arr_mem_26119_backing_offset_1,
                                                     int64_t k_16569,
                                                     int64_t n_16572,
                                                     int64_t num_groups_20539,
                                                     int64_t segment_sizze_nonzzero_26112,
                                                     __global
                                                     unsigned char *alphas_mem_24017,
                                                     __global
                                                     unsigned char *ext_mem_24474,
                                                     __global
                                                     unsigned char *mem_24651,
                                                     __global
                                                     unsigned char *mem_24655,
                                                     __global
                                                     unsigned char *mem_24658,
                                                     __global
                                                     unsigned char *mem_24662)
{
    #define segred_group_sizze_20538 (calculate_jacobianzisegred_group_sizze_20247)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26121_backing_1 =
                           &shared_mem[red_arr_mem_26121_backing_offset_0];
    volatile unsigned char *red_arr_mem_26119_backing_0 =
                           &shared_mem[red_arr_mem_26119_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26114;
    int32_t local_tid_26115;
    int64_t group_sizze_26118;
    int32_t wave_sizze_26117;
    int32_t group_tid_26116;
    
    global_tid_26114 = get_global_id(0);
    local_tid_26115 = get_local_id(0);
    group_sizze_26118 = get_local_size(0);
    wave_sizze_26117 = LOCKSTEP_WIDTH;
    group_tid_26116 = get_group_id(0);
    
    int32_t phys_tid_20546 = global_tid_26114;
    __local unsigned char *red_arr_mem_26119;
    
    red_arr_mem_26119 = (__local unsigned char *) red_arr_mem_26119_backing_0;
    
    __local unsigned char *red_arr_mem_26121;
    
    red_arr_mem_26121 = (__local unsigned char *) red_arr_mem_26121_backing_1;
    
    int32_t phys_group_id_26123;
    
    phys_group_id_26123 = get_group_id(0);
    for (int32_t i_26124 = 0; i_26124 <
         sdiv_up32(sext_i64_i32(sdiv_up64(n_16572,
                                          squot64(segred_group_sizze_20538,
                                                  segment_sizze_nonzzero_26112))) -
                   phys_group_id_26123, sext_i64_i32(num_groups_20539));
         i_26124++) {
        int32_t virt_group_id_26125 = phys_group_id_26123 + i_26124 *
                sext_i64_i32(num_groups_20539);
        int64_t slice_26126 = n_16572;
        int64_t gtid_20544 = squot64(sext_i32_i64(local_tid_26115),
                                     segment_sizze_nonzzero_26112) +
                sext_i32_i64(virt_group_id_26125) *
                squot64(segred_group_sizze_20538, segment_sizze_nonzzero_26112);
        int64_t remnant_26127 = squot64(sext_i32_i64(local_tid_26115),
                                        segment_sizze_nonzzero_26112) +
                sext_i32_i64(virt_group_id_26125) *
                squot64(segred_group_sizze_20538,
                        segment_sizze_nonzzero_26112) - gtid_20544;
        int64_t gtid_20545 = srem64(sext_i32_i64(local_tid_26115), k_16569);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, k_16569) && (slt64(gtid_20544, n_16572) &&
                                                slt64(sext_i32_i64(local_tid_26115),
                                                      k_16569 *
                                                      squot64(segred_group_sizze_20538,
                                                              segment_sizze_nonzzero_26112)))) {
                double x_20560;
                
                x_20560 = ((__global double *) mem_24651)[gtid_20544 * k_16569 +
                                                          gtid_20545];
                
                double x_wasfree_20561;
                
                x_wasfree_20561 = ((__global
                                    double *) alphas_mem_24017)[gtid_20545];
                
                double x_wasfree_20562;
                
                x_wasfree_20562 = ((__global
                                    double *) ext_mem_24474)[gtid_20545];
                
                double x_20564 = -0.5 * x_20560;
                double x_20565 = x_wasfree_20561 + x_20564;
                double defunc_0_f_res_20566 = x_wasfree_20562 + x_20565;
                
                // save map-out results
                {
                    ((__global double *) mem_24662)[gtid_20544 * k_16569 +
                                                    gtid_20545] =
                        defunc_0_f_res_20566;
                }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_26119)[sext_i32_i64(local_tid_26115)] =
                        defunc_0_f_res_20566;
                    ((__local
                      int64_t *) red_arr_mem_26121)[sext_i32_i64(local_tid_26115)] =
                        gtid_20545;
                }
            } else {
                ((__local
                  double *) red_arr_mem_26119)[sext_i32_i64(local_tid_26115)] =
                    -INFINITY;
                ((__local
                  int64_t *) red_arr_mem_26121)[sext_i32_i64(local_tid_26115)] =
                    (int64_t) -1;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, k_16569)) {
            // perform segmented scan to imitate reduction
            {
                double acc_v_20547;
                int64_t acc_i_20548;
                double v_20549;
                int64_t i_20550;
                double acc_v_26128;
                int64_t acc_i_26129;
                double v_26130;
                int64_t i_26131;
                bool ltid_in_bounds_26140 = slt64(sext_i32_i64(local_tid_26115),
                                                  k_16569 *
                                                  squot64(segred_group_sizze_20538,
                                                          segment_sizze_nonzzero_26112));
                int32_t skip_threads_26141;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_26140) {
                        v_20549 = ((volatile __local
                                    double *) red_arr_mem_26119)[sext_i32_i64(local_tid_26115)];
                        i_20550 = ((volatile __local
                                    int64_t *) red_arr_mem_26121)[sext_i32_i64(local_tid_26115)];
                        if ((local_tid_26115 - squot32(local_tid_26115, 32) *
                             32) == 0) {
                            acc_v_20547 = v_20549;
                            acc_i_20548 = i_20550;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_26141 = 1;
                    while (slt32(skip_threads_26141, 32)) {
                        bool thread_active_26142 = sle32(skip_threads_26141,
                                                         local_tid_26115 -
                                                         squot32(local_tid_26115,
                                                                 32) * 32) &&
                             ltid_in_bounds_26140;
                        
                        if (thread_active_26142) {
                            // read operands
                            {
                                acc_v_20547 = ((volatile __local
                                                double *) red_arr_mem_26119)[sext_i32_i64(local_tid_26115) -
                                                                             sext_i32_i64(skip_threads_26141)];
                                acc_i_20548 = ((volatile __local
                                                int64_t *) red_arr_mem_26121)[sext_i32_i64(local_tid_26115) -
                                                                              sext_i32_i64(skip_threads_26141)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_26143 =
                                 slt64(srem64(sext_i32_i64(local_tid_26115),
                                              k_16569),
                                       sext_i32_i64(local_tid_26115) -
                                       sext_i32_i64(local_tid_26115 -
                                       skip_threads_26141));
                            
                            if (thread_active_26142 && inactive_26143) {
                                acc_v_20547 = v_20549;
                                acc_i_20548 = i_20550;
                            }
                            if (thread_active_26142) {
                                if (!inactive_26143) {
                                    bool cond_20551 = acc_v_20547 == v_20549;
                                    double idx_res_20552;
                                    int64_t idx_res_20553;
                                    
                                    if (cond_20551) {
                                        int64_t x_20554 = smin64(acc_i_20548,
                                                                 i_20550);
                                        
                                        idx_res_20552 = acc_v_20547;
                                        idx_res_20553 = x_20554;
                                    } else {
                                        double y_20555 = fmax64(acc_v_20547,
                                                                v_20549);
                                        bool cond_20556 = acc_v_20547 ==
                                             y_20555;
                                        double x_20557;
                                        
                                        if (cond_20556) {
                                            x_20557 = acc_v_20547;
                                        } else {
                                            x_20557 = v_20549;
                                        }
                                        
                                        int64_t x_20558;
                                        
                                        if (cond_20556) {
                                            x_20558 = acc_i_20548;
                                        } else {
                                            x_20558 = i_20550;
                                        }
                                        idx_res_20552 = x_20557;
                                        idx_res_20553 = x_20558;
                                    }
                                    acc_v_20547 = idx_res_20552;
                                    acc_i_20548 = idx_res_20553;
                                }
                            }
                        }
                        if (sle32(wave_sizze_26117, skip_threads_26141)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_26142) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26119)[sext_i32_i64(local_tid_26115)] =
                                    acc_v_20547;
                                v_20549 = acc_v_20547;
                                ((volatile __local
                                  int64_t *) red_arr_mem_26121)[sext_i32_i64(local_tid_26115)] =
                                    acc_i_20548;
                                i_20550 = acc_i_20548;
                            }
                        }
                        if (sle32(wave_sizze_26117, skip_threads_26141)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_26141 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_26115 - squot32(local_tid_26115, 32) * 32) ==
                        31 && ltid_in_bounds_26140) {
                        ((volatile __local
                          double *) red_arr_mem_26119)[sext_i32_i64(squot32(local_tid_26115,
                                                                            32))] =
                            acc_v_20547;
                        ((volatile __local
                          int64_t *) red_arr_mem_26121)[sext_i32_i64(squot32(local_tid_26115,
                                                                             32))] =
                            acc_i_20548;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_26144;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_26115, 32) == 0 &&
                            ltid_in_bounds_26140) {
                            v_26130 = ((volatile __local
                                        double *) red_arr_mem_26119)[sext_i32_i64(local_tid_26115)];
                            i_26131 = ((volatile __local
                                        int64_t *) red_arr_mem_26121)[sext_i32_i64(local_tid_26115)];
                            if ((local_tid_26115 - squot32(local_tid_26115,
                                                           32) * 32) == 0) {
                                acc_v_26128 = v_26130;
                                acc_i_26129 = i_26131;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_26144 = 1;
                        while (slt32(skip_threads_26144, 32)) {
                            bool thread_active_26145 = sle32(skip_threads_26144,
                                                             local_tid_26115 -
                                                             squot32(local_tid_26115,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_26115, 32) == 0 &&
                                  ltid_in_bounds_26140);
                            
                            if (thread_active_26145) {
                                // read operands
                                {
                                    acc_v_26128 = ((volatile __local
                                                    double *) red_arr_mem_26119)[sext_i32_i64(local_tid_26115) -
                                                                                 sext_i32_i64(skip_threads_26144)];
                                    acc_i_26129 = ((volatile __local
                                                    int64_t *) red_arr_mem_26121)[sext_i32_i64(local_tid_26115) -
                                                                                  sext_i32_i64(skip_threads_26144)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_26146 =
                                     slt64(srem64(sext_i32_i64(local_tid_26115 *
                                                  32 + 32 - 1), k_16569),
                                           sext_i32_i64(local_tid_26115 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_26115 -
                                                         skip_threads_26144) *
                                           32 + 32 - 1));
                                
                                if (thread_active_26145 && inactive_26146) {
                                    acc_v_26128 = v_26130;
                                    acc_i_26129 = i_26131;
                                }
                                if (thread_active_26145) {
                                    if (!inactive_26146) {
                                        bool cond_26132 = acc_v_26128 ==
                                             v_26130;
                                        double idx_res_26133;
                                        int64_t idx_res_26134;
                                        
                                        if (cond_26132) {
                                            int64_t x_26135 =
                                                    smin64(acc_i_26129,
                                                           i_26131);
                                            
                                            idx_res_26133 = acc_v_26128;
                                            idx_res_26134 = x_26135;
                                        } else {
                                            double y_26136 = fmax64(acc_v_26128,
                                                                    v_26130);
                                            bool cond_26137 = acc_v_26128 ==
                                                 y_26136;
                                            double x_26138;
                                            
                                            if (cond_26137) {
                                                x_26138 = acc_v_26128;
                                            } else {
                                                x_26138 = v_26130;
                                            }
                                            
                                            int64_t x_26139;
                                            
                                            if (cond_26137) {
                                                x_26139 = acc_i_26129;
                                            } else {
                                                x_26139 = i_26131;
                                            }
                                            idx_res_26133 = x_26138;
                                            idx_res_26134 = x_26139;
                                        }
                                        acc_v_26128 = idx_res_26133;
                                        acc_i_26129 = idx_res_26134;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_26117, skip_threads_26144)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_26145) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_26119)[sext_i32_i64(local_tid_26115)] =
                                        acc_v_26128;
                                    v_26130 = acc_v_26128;
                                    ((volatile __local
                                      int64_t *) red_arr_mem_26121)[sext_i32_i64(local_tid_26115)] =
                                        acc_i_26129;
                                    i_26131 = acc_i_26129;
                                }
                            }
                            if (sle32(wave_sizze_26117, skip_threads_26144)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_26144 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_26147 = squot32(local_tid_26115, 32) == 0 ||
                     !ltid_in_bounds_26140;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_26147) {
                            v_20549 = acc_v_20547;
                            i_20550 = acc_i_20548;
                            acc_v_20547 = ((__local
                                            double *) red_arr_mem_26119)[sext_i32_i64(squot32(local_tid_26115,
                                                                                              32)) -
                                                                         (int64_t) 1];
                            acc_i_20548 = ((__local
                                            int64_t *) red_arr_mem_26121)[sext_i32_i64(squot32(local_tid_26115,
                                                                                               32)) -
                                                                          (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_26148 =
                             slt64(srem64(sext_i32_i64(local_tid_26115),
                                          k_16569),
                                   sext_i32_i64(local_tid_26115) -
                                   sext_i32_i64(squot32(local_tid_26115, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_26147) {
                            if (inactive_26148) {
                                acc_v_20547 = v_20549;
                                acc_i_20548 = i_20550;
                            }
                        }
                        if (!no_carry_in_26147) {
                            if (!inactive_26148) {
                                bool cond_20551 = acc_v_20547 == v_20549;
                                double idx_res_20552;
                                int64_t idx_res_20553;
                                
                                if (cond_20551) {
                                    int64_t x_20554 = smin64(acc_i_20548,
                                                             i_20550);
                                    
                                    idx_res_20552 = acc_v_20547;
                                    idx_res_20553 = x_20554;
                                } else {
                                    double y_20555 = fmax64(acc_v_20547,
                                                            v_20549);
                                    bool cond_20556 = acc_v_20547 == y_20555;
                                    double x_20557;
                                    
                                    if (cond_20556) {
                                        x_20557 = acc_v_20547;
                                    } else {
                                        x_20557 = v_20549;
                                    }
                                    
                                    int64_t x_20558;
                                    
                                    if (cond_20556) {
                                        x_20558 = acc_i_20548;
                                    } else {
                                        x_20558 = i_20550;
                                    }
                                    idx_res_20552 = x_20557;
                                    idx_res_20553 = x_20558;
                                }
                                acc_v_20547 = idx_res_20552;
                                acc_i_20548 = idx_res_20553;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_26147) {
                            ((__local
                              double *) red_arr_mem_26119)[sext_i32_i64(local_tid_26115)] =
                                acc_v_20547;
                            ((__local
                              int64_t *) red_arr_mem_26121)[sext_i32_i64(local_tid_26115)] =
                                acc_i_20548;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_26115, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_26119)[sext_i32_i64(local_tid_26115)] =
                            v_20549;
                        ((__local
                          int64_t *) red_arr_mem_26121)[sext_i32_i64(local_tid_26115)] =
                            i_20550;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_26125) *
                      squot64(segred_group_sizze_20538,
                              segment_sizze_nonzzero_26112) +
                      sext_i32_i64(local_tid_26115), n_16572) &&
                slt64(sext_i32_i64(local_tid_26115),
                      squot64(segred_group_sizze_20538,
                              segment_sizze_nonzzero_26112))) {
                double tmp_26149;
                
                tmp_26149 = ((__local
                              double *) red_arr_mem_26119)[(sext_i32_i64(local_tid_26115) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_26112 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24655)[sext_i32_i64(virt_group_id_26125) *
                                       squot64(segred_group_sizze_20538,
                                               segment_sizze_nonzzero_26112) +
                                       sext_i32_i64(local_tid_26115)] =
                    tmp_26149;
                
                int64_t tmp_26150;
                
                tmp_26150 = ((__local
                              int64_t *) red_arr_mem_26121)[(sext_i32_i64(local_tid_26115) +
                                                             (int64_t) 1) *
                                                            segment_sizze_nonzzero_26112 -
                                                            (int64_t) 1];
                ((__global
                  int64_t *) mem_24658)[sext_i32_i64(virt_group_id_26125) *
                                        squot64(segred_group_sizze_20538,
                                                segment_sizze_nonzzero_26112) +
                                        sext_i32_i64(local_tid_26115)] =
                    tmp_26150;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_20538
}
__kernel void calculate_jacobianzisegred_small_20575(__global
                                                     int *global_failure,
                                                     uint red_arr_mem_26213_backing_offset_0,
                                                     int64_t k_16569,
                                                     int64_t n_16572,
                                                     int64_t num_groups_20570,
                                                     int64_t segment_sizze_nonzzero_26206,
                                                     __global
                                                     unsigned char *mem_24655,
                                                     __global
                                                     unsigned char *mem_24662,
                                                     __global
                                                     unsigned char *mem_24666)
{
    #define segred_group_sizze_20569 (calculate_jacobianzisegred_group_sizze_20226)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26213_backing_0 =
                           &shared_mem[red_arr_mem_26213_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26208;
    int32_t local_tid_26209;
    int64_t group_sizze_26212;
    int32_t wave_sizze_26211;
    int32_t group_tid_26210;
    
    global_tid_26208 = get_global_id(0);
    local_tid_26209 = get_local_id(0);
    group_sizze_26212 = get_local_size(0);
    wave_sizze_26211 = LOCKSTEP_WIDTH;
    group_tid_26210 = get_group_id(0);
    
    int32_t phys_tid_20575 = global_tid_26208;
    __local unsigned char *red_arr_mem_26213;
    
    red_arr_mem_26213 = (__local unsigned char *) red_arr_mem_26213_backing_0;
    
    int32_t phys_group_id_26215;
    
    phys_group_id_26215 = get_group_id(0);
    for (int32_t i_26216 = 0; i_26216 <
         sdiv_up32(sext_i64_i32(sdiv_up64(n_16572,
                                          squot64(segred_group_sizze_20569,
                                                  segment_sizze_nonzzero_26206))) -
                   phys_group_id_26215, sext_i64_i32(num_groups_20570));
         i_26216++) {
        int32_t virt_group_id_26217 = phys_group_id_26215 + i_26216 *
                sext_i64_i32(num_groups_20570);
        int64_t slice_26218 = n_16572;
        int64_t gtid_20573 = squot64(sext_i32_i64(local_tid_26209),
                                     segment_sizze_nonzzero_26206) +
                sext_i32_i64(virt_group_id_26217) *
                squot64(segred_group_sizze_20569, segment_sizze_nonzzero_26206);
        int64_t remnant_26219 = squot64(sext_i32_i64(local_tid_26209),
                                        segment_sizze_nonzzero_26206) +
                sext_i32_i64(virt_group_id_26217) *
                squot64(segred_group_sizze_20569,
                        segment_sizze_nonzzero_26206) - gtid_20573;
        int64_t gtid_20574 = srem64(sext_i32_i64(local_tid_26209), k_16569);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, k_16569) && (slt64(gtid_20573, n_16572) &&
                                                slt64(sext_i32_i64(local_tid_26209),
                                                      k_16569 *
                                                      squot64(segred_group_sizze_20569,
                                                              segment_sizze_nonzzero_26206)))) {
                double defunc_2_reduce_res_20579;
                
                defunc_2_reduce_res_20579 = ((__global
                                              double *) mem_24655)[gtid_20573];
                
                double x_20581;
                
                x_20581 = ((__global double *) mem_24662)[gtid_20573 * k_16569 +
                                                          gtid_20574];
                
                double exp_arg_20582 = x_20581 - defunc_2_reduce_res_20579;
                double exp_res_20583;
                
                exp_res_20583 = futrts_exp64(exp_arg_20582);
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_26213)[sext_i32_i64(local_tid_26209)] =
                        exp_res_20583;
                }
            } else {
                ((__local
                  double *) red_arr_mem_26213)[sext_i32_i64(local_tid_26209)] =
                    0.0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, k_16569)) {
            // perform segmented scan to imitate reduction
            {
                double x_20576;
                double x_20577;
                double x_26220;
                double x_26221;
                bool ltid_in_bounds_26223 = slt64(sext_i32_i64(local_tid_26209),
                                                  k_16569 *
                                                  squot64(segred_group_sizze_20569,
                                                          segment_sizze_nonzzero_26206));
                int32_t skip_threads_26224;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_26223) {
                        x_20577 = ((volatile __local
                                    double *) red_arr_mem_26213)[sext_i32_i64(local_tid_26209)];
                        if ((local_tid_26209 - squot32(local_tid_26209, 32) *
                             32) == 0) {
                            x_20576 = x_20577;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_26224 = 1;
                    while (slt32(skip_threads_26224, 32)) {
                        bool thread_active_26225 = sle32(skip_threads_26224,
                                                         local_tid_26209 -
                                                         squot32(local_tid_26209,
                                                                 32) * 32) &&
                             ltid_in_bounds_26223;
                        
                        if (thread_active_26225) {
                            // read operands
                            {
                                x_20576 = ((volatile __local
                                            double *) red_arr_mem_26213)[sext_i32_i64(local_tid_26209) -
                                                                         sext_i32_i64(skip_threads_26224)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_26226 =
                                 slt64(srem64(sext_i32_i64(local_tid_26209),
                                              k_16569),
                                       sext_i32_i64(local_tid_26209) -
                                       sext_i32_i64(local_tid_26209 -
                                       skip_threads_26224));
                            
                            if (thread_active_26225 && inactive_26226) {
                                x_20576 = x_20577;
                            }
                            if (thread_active_26225) {
                                if (!inactive_26226) {
                                    double defunc_1_op_res_20578 = x_20576 +
                                           x_20577;
                                    
                                    x_20576 = defunc_1_op_res_20578;
                                }
                            }
                        }
                        if (sle32(wave_sizze_26211, skip_threads_26224)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_26225) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26213)[sext_i32_i64(local_tid_26209)] =
                                    x_20576;
                                x_20577 = x_20576;
                            }
                        }
                        if (sle32(wave_sizze_26211, skip_threads_26224)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_26224 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_26209 - squot32(local_tid_26209, 32) * 32) ==
                        31 && ltid_in_bounds_26223) {
                        ((volatile __local
                          double *) red_arr_mem_26213)[sext_i32_i64(squot32(local_tid_26209,
                                                                            32))] =
                            x_20576;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_26227;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_26209, 32) == 0 &&
                            ltid_in_bounds_26223) {
                            x_26221 = ((volatile __local
                                        double *) red_arr_mem_26213)[sext_i32_i64(local_tid_26209)];
                            if ((local_tid_26209 - squot32(local_tid_26209,
                                                           32) * 32) == 0) {
                                x_26220 = x_26221;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_26227 = 1;
                        while (slt32(skip_threads_26227, 32)) {
                            bool thread_active_26228 = sle32(skip_threads_26227,
                                                             local_tid_26209 -
                                                             squot32(local_tid_26209,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_26209, 32) == 0 &&
                                  ltid_in_bounds_26223);
                            
                            if (thread_active_26228) {
                                // read operands
                                {
                                    x_26220 = ((volatile __local
                                                double *) red_arr_mem_26213)[sext_i32_i64(local_tid_26209) -
                                                                             sext_i32_i64(skip_threads_26227)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_26229 =
                                     slt64(srem64(sext_i32_i64(local_tid_26209 *
                                                  32 + 32 - 1), k_16569),
                                           sext_i32_i64(local_tid_26209 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_26209 -
                                                         skip_threads_26227) *
                                           32 + 32 - 1));
                                
                                if (thread_active_26228 && inactive_26229) {
                                    x_26220 = x_26221;
                                }
                                if (thread_active_26228) {
                                    if (!inactive_26229) {
                                        double defunc_1_op_res_26222 = x_26220 +
                                               x_26221;
                                        
                                        x_26220 = defunc_1_op_res_26222;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_26211, skip_threads_26227)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_26228) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_26213)[sext_i32_i64(local_tid_26209)] =
                                        x_26220;
                                    x_26221 = x_26220;
                                }
                            }
                            if (sle32(wave_sizze_26211, skip_threads_26227)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_26227 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_26230 = squot32(local_tid_26209, 32) == 0 ||
                     !ltid_in_bounds_26223;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_26230) {
                            x_20577 = x_20576;
                            x_20576 = ((__local
                                        double *) red_arr_mem_26213)[sext_i32_i64(squot32(local_tid_26209,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_26231 =
                             slt64(srem64(sext_i32_i64(local_tid_26209),
                                          k_16569),
                                   sext_i32_i64(local_tid_26209) -
                                   sext_i32_i64(squot32(local_tid_26209, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_26230) {
                            if (inactive_26231) {
                                x_20576 = x_20577;
                            }
                        }
                        if (!no_carry_in_26230) {
                            if (!inactive_26231) {
                                double defunc_1_op_res_20578 = x_20576 +
                                       x_20577;
                                
                                x_20576 = defunc_1_op_res_20578;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_26230) {
                            ((__local
                              double *) red_arr_mem_26213)[sext_i32_i64(local_tid_26209)] =
                                x_20576;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_26209, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_26213)[sext_i32_i64(local_tid_26209)] =
                            x_20577;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_26217) *
                      squot64(segred_group_sizze_20569,
                              segment_sizze_nonzzero_26206) +
                      sext_i32_i64(local_tid_26209), n_16572) &&
                slt64(sext_i32_i64(local_tid_26209),
                      squot64(segred_group_sizze_20569,
                              segment_sizze_nonzzero_26206))) {
                double tmp_26232;
                
                tmp_26232 = ((__local
                              double *) red_arr_mem_26213)[(sext_i32_i64(local_tid_26209) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_26206 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24666)[sext_i32_i64(virt_group_id_26217) *
                                       squot64(segred_group_sizze_20569,
                                               segment_sizze_nonzzero_26206) +
                                       sext_i32_i64(local_tid_26209)] =
                    tmp_26232;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_20569
}
__kernel void calculate_jacobianzisegred_small_20601(__global
                                                     int *global_failure,
                                                     uint red_arr_mem_26289_backing_offset_0,
                                                     int64_t k_16569,
                                                     int64_t n_16572,
                                                     int64_t num_groups_20595,
                                                     int64_t segment_sizze_nonzzero_26282,
                                                     __global
                                                     unsigned char *mem_24655,
                                                     __global
                                                     unsigned char *mem_24662,
                                                     __global
                                                     unsigned char *mem_24670,
                                                     __global
                                                     unsigned char *mem_24674,
                                                     __global
                                                     unsigned char *mem_24678)
{
    #define segred_group_sizze_20594 (calculate_jacobianzisegred_group_sizze_20191)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26289_backing_0 =
                           &shared_mem[red_arr_mem_26289_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26284;
    int32_t local_tid_26285;
    int64_t group_sizze_26288;
    int32_t wave_sizze_26287;
    int32_t group_tid_26286;
    
    global_tid_26284 = get_global_id(0);
    local_tid_26285 = get_local_id(0);
    group_sizze_26288 = get_local_size(0);
    wave_sizze_26287 = LOCKSTEP_WIDTH;
    group_tid_26286 = get_group_id(0);
    
    int32_t phys_tid_20601 = global_tid_26284;
    __local unsigned char *red_arr_mem_26289;
    
    red_arr_mem_26289 = (__local unsigned char *) red_arr_mem_26289_backing_0;
    
    int32_t phys_group_id_26291;
    
    phys_group_id_26291 = get_group_id(0);
    for (int32_t i_26292 = 0; i_26292 <
         sdiv_up32(sext_i64_i32(sdiv_up64(n_16572,
                                          squot64(segred_group_sizze_20594,
                                                  segment_sizze_nonzzero_26282))) -
                   phys_group_id_26291, sext_i64_i32(num_groups_20595));
         i_26292++) {
        int32_t virt_group_id_26293 = phys_group_id_26291 + i_26292 *
                sext_i64_i32(num_groups_20595);
        int64_t slice_26294 = n_16572;
        int64_t gtid_20599 = squot64(sext_i32_i64(local_tid_26285),
                                     segment_sizze_nonzzero_26282) +
                sext_i32_i64(virt_group_id_26293) *
                squot64(segred_group_sizze_20594, segment_sizze_nonzzero_26282);
        int64_t remnant_26295 = squot64(sext_i32_i64(local_tid_26285),
                                        segment_sizze_nonzzero_26282) +
                sext_i32_i64(virt_group_id_26293) *
                squot64(segred_group_sizze_20594,
                        segment_sizze_nonzzero_26282) - gtid_20599;
        int64_t gtid_20600 = srem64(sext_i32_i64(local_tid_26285), k_16569);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, k_16569) && (slt64(gtid_20599, n_16572) &&
                                                slt64(sext_i32_i64(local_tid_26285),
                                                      k_16569 *
                                                      squot64(segred_group_sizze_20594,
                                                              segment_sizze_nonzzero_26282)))) {
                double defunc_2_reduce_res_20605;
                
                defunc_2_reduce_res_20605 = ((__global
                                              double *) mem_24655)[gtid_20599];
                
                double binop_y_20607;
                
                binop_y_20607 = ((__global double *) mem_24670)[gtid_20599];
                
                double x_20608;
                
                x_20608 = ((__global double *) mem_24662)[gtid_20599 * k_16569 +
                                                          gtid_20600];
                
                double exp_arg_20609 = x_20608 - defunc_2_reduce_res_20605;
                double binop_y_20610;
                
                binop_y_20610 = futrts_exp64(exp_arg_20609);
                
                double contrib_20611 = binop_y_20607 * binop_y_20610;
                double binop_y_adj_20612 = -1.0 * contrib_20611;
                
                // save map-out results
                {
                    ((__global double *) mem_24678)[gtid_20599 * k_16569 +
                                                    gtid_20600] = contrib_20611;
                }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_26289)[sext_i32_i64(local_tid_26285)] =
                        binop_y_adj_20612;
                }
            } else {
                ((__local
                  double *) red_arr_mem_26289)[sext_i32_i64(local_tid_26285)] =
                    0.0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, k_16569)) {
            // perform segmented scan to imitate reduction
            {
                double x_20602;
                double y_20603;
                double x_26296;
                double y_26297;
                bool ltid_in_bounds_26299 = slt64(sext_i32_i64(local_tid_26285),
                                                  k_16569 *
                                                  squot64(segred_group_sizze_20594,
                                                          segment_sizze_nonzzero_26282));
                int32_t skip_threads_26300;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_26299) {
                        y_20603 = ((volatile __local
                                    double *) red_arr_mem_26289)[sext_i32_i64(local_tid_26285)];
                        if ((local_tid_26285 - squot32(local_tid_26285, 32) *
                             32) == 0) {
                            x_20602 = y_20603;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_26300 = 1;
                    while (slt32(skip_threads_26300, 32)) {
                        bool thread_active_26301 = sle32(skip_threads_26300,
                                                         local_tid_26285 -
                                                         squot32(local_tid_26285,
                                                                 32) * 32) &&
                             ltid_in_bounds_26299;
                        
                        if (thread_active_26301) {
                            // read operands
                            {
                                x_20602 = ((volatile __local
                                            double *) red_arr_mem_26289)[sext_i32_i64(local_tid_26285) -
                                                                         sext_i32_i64(skip_threads_26300)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_26302 =
                                 slt64(srem64(sext_i32_i64(local_tid_26285),
                                              k_16569),
                                       sext_i32_i64(local_tid_26285) -
                                       sext_i32_i64(local_tid_26285 -
                                       skip_threads_26300));
                            
                            if (thread_active_26301 && inactive_26302) {
                                x_20602 = y_20603;
                            }
                            if (thread_active_26301) {
                                if (!inactive_26302) {
                                    double binlam_res_20604 = x_20602 + y_20603;
                                    
                                    x_20602 = binlam_res_20604;
                                }
                            }
                        }
                        if (sle32(wave_sizze_26287, skip_threads_26300)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_26301) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26289)[sext_i32_i64(local_tid_26285)] =
                                    x_20602;
                                y_20603 = x_20602;
                            }
                        }
                        if (sle32(wave_sizze_26287, skip_threads_26300)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_26300 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_26285 - squot32(local_tid_26285, 32) * 32) ==
                        31 && ltid_in_bounds_26299) {
                        ((volatile __local
                          double *) red_arr_mem_26289)[sext_i32_i64(squot32(local_tid_26285,
                                                                            32))] =
                            x_20602;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_26303;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_26285, 32) == 0 &&
                            ltid_in_bounds_26299) {
                            y_26297 = ((volatile __local
                                        double *) red_arr_mem_26289)[sext_i32_i64(local_tid_26285)];
                            if ((local_tid_26285 - squot32(local_tid_26285,
                                                           32) * 32) == 0) {
                                x_26296 = y_26297;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_26303 = 1;
                        while (slt32(skip_threads_26303, 32)) {
                            bool thread_active_26304 = sle32(skip_threads_26303,
                                                             local_tid_26285 -
                                                             squot32(local_tid_26285,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_26285, 32) == 0 &&
                                  ltid_in_bounds_26299);
                            
                            if (thread_active_26304) {
                                // read operands
                                {
                                    x_26296 = ((volatile __local
                                                double *) red_arr_mem_26289)[sext_i32_i64(local_tid_26285) -
                                                                             sext_i32_i64(skip_threads_26303)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_26305 =
                                     slt64(srem64(sext_i32_i64(local_tid_26285 *
                                                  32 + 32 - 1), k_16569),
                                           sext_i32_i64(local_tid_26285 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_26285 -
                                                         skip_threads_26303) *
                                           32 + 32 - 1));
                                
                                if (thread_active_26304 && inactive_26305) {
                                    x_26296 = y_26297;
                                }
                                if (thread_active_26304) {
                                    if (!inactive_26305) {
                                        double binlam_res_26298 = x_26296 +
                                               y_26297;
                                        
                                        x_26296 = binlam_res_26298;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_26287, skip_threads_26303)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_26304) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_26289)[sext_i32_i64(local_tid_26285)] =
                                        x_26296;
                                    y_26297 = x_26296;
                                }
                            }
                            if (sle32(wave_sizze_26287, skip_threads_26303)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_26303 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_26306 = squot32(local_tid_26285, 32) == 0 ||
                     !ltid_in_bounds_26299;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_26306) {
                            y_20603 = x_20602;
                            x_20602 = ((__local
                                        double *) red_arr_mem_26289)[sext_i32_i64(squot32(local_tid_26285,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_26307 =
                             slt64(srem64(sext_i32_i64(local_tid_26285),
                                          k_16569),
                                   sext_i32_i64(local_tid_26285) -
                                   sext_i32_i64(squot32(local_tid_26285, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_26306) {
                            if (inactive_26307) {
                                x_20602 = y_20603;
                            }
                        }
                        if (!no_carry_in_26306) {
                            if (!inactive_26307) {
                                double binlam_res_20604 = x_20602 + y_20603;
                                
                                x_20602 = binlam_res_20604;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_26306) {
                            ((__local
                              double *) red_arr_mem_26289)[sext_i32_i64(local_tid_26285)] =
                                x_20602;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_26285, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_26289)[sext_i32_i64(local_tid_26285)] =
                            y_20603;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_26293) *
                      squot64(segred_group_sizze_20594,
                              segment_sizze_nonzzero_26282) +
                      sext_i32_i64(local_tid_26285), n_16572) &&
                slt64(sext_i32_i64(local_tid_26285),
                      squot64(segred_group_sizze_20594,
                              segment_sizze_nonzzero_26282))) {
                double tmp_26308;
                
                tmp_26308 = ((__local
                              double *) red_arr_mem_26289)[(sext_i32_i64(local_tid_26285) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_26282 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24674)[sext_i32_i64(virt_group_id_26293) *
                                       squot64(segred_group_sizze_20594,
                                               segment_sizze_nonzzero_26282) +
                                       sext_i32_i64(local_tid_26285)] =
                    tmp_26308;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_20594
}
__kernel void calculate_jacobianzisegred_small_21531(__global
                                                     int *global_failure,
                                                     uint red_arr_mem_26655_backing_offset_0,
                                                     int64_t k_16569,
                                                     int64_t d_16570,
                                                     int64_t n_16572,
                                                     int64_t num_groups_21525,
                                                     int64_t segment_sizze_nonzzero_26648,
                                                     __global
                                                     unsigned char *mem_25143,
                                                     __global
                                                     unsigned char *mem_25148)
{
    #define segred_group_sizze_21524 (calculate_jacobianzisegred_group_sizze_21446)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26655_backing_0 =
                           &shared_mem[red_arr_mem_26655_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26650;
    int32_t local_tid_26651;
    int64_t group_sizze_26654;
    int32_t wave_sizze_26653;
    int32_t group_tid_26652;
    
    global_tid_26650 = get_global_id(0);
    local_tid_26651 = get_local_id(0);
    group_sizze_26654 = get_local_size(0);
    wave_sizze_26653 = LOCKSTEP_WIDTH;
    group_tid_26652 = get_group_id(0);
    
    int32_t phys_tid_21531 = global_tid_26650;
    __local unsigned char *red_arr_mem_26655;
    
    red_arr_mem_26655 = (__local unsigned char *) red_arr_mem_26655_backing_0;
    
    int32_t phys_group_id_26657;
    
    phys_group_id_26657 = get_group_id(0);
    for (int32_t i_26658 = 0; i_26658 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16569 * d_16570,
                                          squot64(segred_group_sizze_21524,
                                                  segment_sizze_nonzzero_26648))) -
                   phys_group_id_26657, sext_i64_i32(num_groups_21525));
         i_26658++) {
        int32_t virt_group_id_26659 = phys_group_id_26657 + i_26658 *
                sext_i64_i32(num_groups_21525);
        int64_t slice_26660 = d_16570;
        int64_t slice_26661 = k_16569 * slice_26660;
        int64_t gtid_21528 = squot64(squot64(sext_i32_i64(local_tid_26651),
                                             segment_sizze_nonzzero_26648) +
                                     sext_i32_i64(virt_group_id_26659) *
                                     squot64(segred_group_sizze_21524,
                                             segment_sizze_nonzzero_26648),
                                     slice_26660);
        int64_t remnant_26662 = squot64(sext_i32_i64(local_tid_26651),
                                        segment_sizze_nonzzero_26648) +
                sext_i32_i64(virt_group_id_26659) *
                squot64(segred_group_sizze_21524,
                        segment_sizze_nonzzero_26648) - gtid_21528 *
                slice_26660;
        int64_t gtid_21529 = remnant_26662;
        int64_t remnant_26663 = remnant_26662 - gtid_21529;
        int64_t gtid_21530 = srem64(sext_i32_i64(local_tid_26651), n_16572);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, n_16572) && ((slt64(gtid_21528, k_16569) &&
                                                 slt64(gtid_21529, d_16570)) &&
                                                slt64(sext_i32_i64(local_tid_26651),
                                                      n_16572 *
                                                      squot64(segred_group_sizze_21524,
                                                              segment_sizze_nonzzero_26648)))) {
                double map_adj_p_21537;
                
                map_adj_p_21537 = ((__global double *) mem_25143)[gtid_21528 *
                                                                  (n_16572 *
                                                                   d_16570) +
                                                                  gtid_21529 *
                                                                  n_16572 +
                                                                  gtid_21530];
                
                double binop_y_adj_21538 = -1.0 * map_adj_p_21537;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_26655)[sext_i32_i64(local_tid_26651)] =
                        binop_y_adj_21538;
                }
            } else {
                ((__local
                  double *) red_arr_mem_26655)[sext_i32_i64(local_tid_26651)] =
                    0.0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, n_16572)) {
            // perform segmented scan to imitate reduction
            {
                double x_21532;
                double y_21533;
                double x_26664;
                double y_26665;
                bool ltid_in_bounds_26667 = slt64(sext_i32_i64(local_tid_26651),
                                                  n_16572 *
                                                  squot64(segred_group_sizze_21524,
                                                          segment_sizze_nonzzero_26648));
                int32_t skip_threads_26668;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_26667) {
                        y_21533 = ((volatile __local
                                    double *) red_arr_mem_26655)[sext_i32_i64(local_tid_26651)];
                        if ((local_tid_26651 - squot32(local_tid_26651, 32) *
                             32) == 0) {
                            x_21532 = y_21533;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_26668 = 1;
                    while (slt32(skip_threads_26668, 32)) {
                        bool thread_active_26669 = sle32(skip_threads_26668,
                                                         local_tid_26651 -
                                                         squot32(local_tid_26651,
                                                                 32) * 32) &&
                             ltid_in_bounds_26667;
                        
                        if (thread_active_26669) {
                            // read operands
                            {
                                x_21532 = ((volatile __local
                                            double *) red_arr_mem_26655)[sext_i32_i64(local_tid_26651) -
                                                                         sext_i32_i64(skip_threads_26668)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_26670 =
                                 slt64(srem64(sext_i32_i64(local_tid_26651),
                                              n_16572),
                                       sext_i32_i64(local_tid_26651) -
                                       sext_i32_i64(local_tid_26651 -
                                       skip_threads_26668));
                            
                            if (thread_active_26669 && inactive_26670) {
                                x_21532 = y_21533;
                            }
                            if (thread_active_26669) {
                                if (!inactive_26670) {
                                    double binlam_res_21534 = x_21532 + y_21533;
                                    
                                    x_21532 = binlam_res_21534;
                                }
                            }
                        }
                        if (sle32(wave_sizze_26653, skip_threads_26668)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_26669) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26655)[sext_i32_i64(local_tid_26651)] =
                                    x_21532;
                                y_21533 = x_21532;
                            }
                        }
                        if (sle32(wave_sizze_26653, skip_threads_26668)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_26668 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_26651 - squot32(local_tid_26651, 32) * 32) ==
                        31 && ltid_in_bounds_26667) {
                        ((volatile __local
                          double *) red_arr_mem_26655)[sext_i32_i64(squot32(local_tid_26651,
                                                                            32))] =
                            x_21532;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_26671;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_26651, 32) == 0 &&
                            ltid_in_bounds_26667) {
                            y_26665 = ((volatile __local
                                        double *) red_arr_mem_26655)[sext_i32_i64(local_tid_26651)];
                            if ((local_tid_26651 - squot32(local_tid_26651,
                                                           32) * 32) == 0) {
                                x_26664 = y_26665;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_26671 = 1;
                        while (slt32(skip_threads_26671, 32)) {
                            bool thread_active_26672 = sle32(skip_threads_26671,
                                                             local_tid_26651 -
                                                             squot32(local_tid_26651,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_26651, 32) == 0 &&
                                  ltid_in_bounds_26667);
                            
                            if (thread_active_26672) {
                                // read operands
                                {
                                    x_26664 = ((volatile __local
                                                double *) red_arr_mem_26655)[sext_i32_i64(local_tid_26651) -
                                                                             sext_i32_i64(skip_threads_26671)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_26673 =
                                     slt64(srem64(sext_i32_i64(local_tid_26651 *
                                                  32 + 32 - 1), n_16572),
                                           sext_i32_i64(local_tid_26651 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_26651 -
                                                         skip_threads_26671) *
                                           32 + 32 - 1));
                                
                                if (thread_active_26672 && inactive_26673) {
                                    x_26664 = y_26665;
                                }
                                if (thread_active_26672) {
                                    if (!inactive_26673) {
                                        double binlam_res_26666 = x_26664 +
                                               y_26665;
                                        
                                        x_26664 = binlam_res_26666;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_26653, skip_threads_26671)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_26672) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_26655)[sext_i32_i64(local_tid_26651)] =
                                        x_26664;
                                    y_26665 = x_26664;
                                }
                            }
                            if (sle32(wave_sizze_26653, skip_threads_26671)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_26671 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_26674 = squot32(local_tid_26651, 32) == 0 ||
                     !ltid_in_bounds_26667;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_26674) {
                            y_21533 = x_21532;
                            x_21532 = ((__local
                                        double *) red_arr_mem_26655)[sext_i32_i64(squot32(local_tid_26651,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_26675 =
                             slt64(srem64(sext_i32_i64(local_tid_26651),
                                          n_16572),
                                   sext_i32_i64(local_tid_26651) -
                                   sext_i32_i64(squot32(local_tid_26651, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_26674) {
                            if (inactive_26675) {
                                x_21532 = y_21533;
                            }
                        }
                        if (!no_carry_in_26674) {
                            if (!inactive_26675) {
                                double binlam_res_21534 = x_21532 + y_21533;
                                
                                x_21532 = binlam_res_21534;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_26674) {
                            ((__local
                              double *) red_arr_mem_26655)[sext_i32_i64(local_tid_26651)] =
                                x_21532;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_26651, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_26655)[sext_i32_i64(local_tid_26651)] =
                            y_21533;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_26659) *
                      squot64(segred_group_sizze_21524,
                              segment_sizze_nonzzero_26648) +
                      sext_i32_i64(local_tid_26651), k_16569 * d_16570) &&
                slt64(sext_i32_i64(local_tid_26651),
                      squot64(segred_group_sizze_21524,
                              segment_sizze_nonzzero_26648))) {
                double tmp_26676;
                
                tmp_26676 = ((__local
                              double *) red_arr_mem_26655)[(sext_i32_i64(local_tid_26651) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_26648 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_25148)[squot64(sext_i32_i64(virt_group_id_26659) *
                                               squot64(segred_group_sizze_21524,
                                                       segment_sizze_nonzzero_26648) +
                                               sext_i32_i64(local_tid_26651),
                                               d_16570) * d_16570 +
                                       (sext_i32_i64(virt_group_id_26659) *
                                        squot64(segred_group_sizze_21524,
                                                segment_sizze_nonzzero_26648) +
                                        sext_i32_i64(local_tid_26651) -
                                        squot64(sext_i32_i64(virt_group_id_26659) *
                                                squot64(segred_group_sizze_21524,
                                                        segment_sizze_nonzzero_26648) +
                                                sext_i32_i64(local_tid_26651),
                                                d_16570) * d_16570)] =
                    tmp_26676;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_21524
}
__kernel void calculate_objectivezisegmap_17176(__global int *global_failure,
                                                int failure_is_an_option,
                                                __global
                                                int64_t *global_failure_args,
                                                int64_t k_16331,
                                                int64_t d_16332,
                                                int64_t dz2080U_16333,
                                                int64_t j_m_i_16366, __global
                                                unsigned char *icf_mem_24019,
                                                __global
                                                unsigned char *mem_24026)
{
    #define segmap_group_sizze_17170 (calculate_objectivezisegmap_group_sizze_17043)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25442;
    int32_t local_tid_25443;
    int64_t group_sizze_25446;
    int32_t wave_sizze_25445;
    int32_t group_tid_25444;
    
    global_tid_25442 = get_global_id(0);
    local_tid_25443 = get_local_id(0);
    group_sizze_25446 = get_local_size(0);
    wave_sizze_25445 = LOCKSTEP_WIDTH;
    group_tid_25444 = get_group_id(0);
    
    int32_t phys_tid_17176 = global_tid_25442;
    int64_t global_tid_25447 = sext_i32_i64(group_tid_25444) *
            segmap_group_sizze_17170 + sext_i32_i64(local_tid_25443);
    int64_t slice_25448 = d_16332;
    int64_t slice_25449 = d_16332 * slice_25448;
    int64_t slice_25450 = k_16331 * slice_25449;
    int64_t gtid_17173 = squot64(global_tid_25447, slice_25449);
    int64_t remnant_25451 = global_tid_25447 - gtid_17173 * slice_25449;
    int64_t gtid_17174 = squot64(remnant_25451, slice_25448);
    int64_t remnant_25452 = remnant_25451 - gtid_17174 * slice_25448;
    int64_t gtid_17175 = remnant_25452;
    int64_t remnant_25453 = remnant_25452 - gtid_17175;
    
    if ((slt64(gtid_17173, k_16331) && slt64(gtid_17174, d_16332)) &&
        slt64(gtid_17175, d_16332)) {
        bool cond_17181 = slt64(gtid_17175, gtid_17174);
        double defunc_0_f_res_17182;
        
        if (cond_17181) {
            defunc_0_f_res_17182 = 0.0;
        } else {
            bool cond_17183 = gtid_17175 == gtid_17174;
            double defunc_0_f_res_f_res_17184;
            
            if (cond_17183) {
                double exp_arg_17189;
                
                exp_arg_17189 = ((__global double *) icf_mem_24019)[gtid_17173 *
                                                                    dz2080U_16333 +
                                                                    gtid_17175];
                
                double exp_res_17190;
                
                exp_res_17190 = futrts_exp64(exp_arg_17189);
                defunc_0_f_res_f_res_17184 = exp_res_17190;
            } else {
                int64_t x_17191 = mul64(d_16332, gtid_17174);
                int64_t x_17192 = add64(gtid_17175, x_17191);
                int64_t x_17193 = sub64(x_17192, gtid_17174);
                int64_t x_17194 = sub64(x_17193, (int64_t) 1);
                int64_t y_17195 = add64((int64_t) 1, gtid_17174);
                int64_t x_17196 = mul64(gtid_17174, y_17195);
                int64_t y_17197 = sdiv64(x_17196, (int64_t) 2);
                int64_t i_17198 = sub64(x_17194, y_17197);
                bool x_17199 = sle64((int64_t) 0, i_17198);
                bool y_17200 = slt64(i_17198, j_m_i_16366);
                bool bounds_check_17201 = x_17199 && y_17200;
                bool index_certs_17202;
                
                if (!bounds_check_17201) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 3) ==
                            -1) {
                            global_failure_args[0] = (int64_t) i_17198;
                            global_failure_args[1] = (int64_t) j_m_i_16366;
                            ;
                        }
                        return;
                    }
                }
                
                int64_t slice_22072 = d_16332 + i_17198;
                double defunc_0_f_res_f_res_f_res_17203;
                
                defunc_0_f_res_f_res_f_res_17203 = ((__global
                                                     double *) icf_mem_24019)[gtid_17173 *
                                                                              dz2080U_16333 +
                                                                              slice_22072];
                defunc_0_f_res_f_res_17184 = defunc_0_f_res_f_res_f_res_17203;
            }
            defunc_0_f_res_17182 = defunc_0_f_res_f_res_17184;
        }
        ((__global double *) mem_24026)[gtid_17173 * (d_16332 * d_16332) +
                                        gtid_17174 * d_16332 + gtid_17175] =
            defunc_0_f_res_17182;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_17170
}
__kernel void calculate_objectivezisegmap_17401(__global int *global_failure,
                                                int64_t k_16331,
                                                int64_t d_16332,
                                                int64_t n_16334, __global
                                                unsigned char *means_mem_24018,
                                                __global
                                                unsigned char *mem_24029,
                                                __global
                                                unsigned char *mem_24035)
{
    #define segmap_group_sizze_17395 (calculate_objectivezisegmap_group_sizze_17238)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25454;
    int32_t local_tid_25455;
    int64_t group_sizze_25458;
    int32_t wave_sizze_25457;
    int32_t group_tid_25456;
    
    global_tid_25454 = get_global_id(0);
    local_tid_25455 = get_local_id(0);
    group_sizze_25458 = get_local_size(0);
    wave_sizze_25457 = LOCKSTEP_WIDTH;
    group_tid_25456 = get_group_id(0);
    
    int32_t phys_tid_17401 = global_tid_25454;
    int64_t global_tid_25459 = sext_i32_i64(group_tid_25456) *
            segmap_group_sizze_17395 + sext_i32_i64(local_tid_25455);
    int64_t slice_25460 = n_16334;
    int64_t slice_25461 = d_16332 * slice_25460;
    int64_t slice_25462 = k_16331 * slice_25461;
    int64_t gtid_17398 = squot64(global_tid_25459, slice_25461);
    int64_t remnant_25463 = global_tid_25459 - gtid_17398 * slice_25461;
    int64_t gtid_17399 = squot64(remnant_25463, slice_25460);
    int64_t remnant_25464 = remnant_25463 - gtid_17399 * slice_25460;
    int64_t gtid_17400 = remnant_25464;
    int64_t remnant_25465 = remnant_25464 - gtid_17400;
    
    if ((slt64(gtid_17398, k_16331) && slt64(gtid_17399, d_16332)) &&
        slt64(gtid_17400, n_16334)) {
        double y_17404;
        
        y_17404 = ((__global double *) means_mem_24018)[gtid_17398 * d_16332 +
                                                        gtid_17399];
        
        double x_17411;
        
        x_17411 = ((__global double *) mem_24029)[gtid_17399 * n_16334 +
                                                  gtid_17400];
        
        double defunc_0_f_res_17412 = x_17411 - y_17404;
        
        ((__global double *) mem_24035)[gtid_17398 * (n_16334 * d_16332) +
                                        gtid_17399 * n_16334 + gtid_17400] =
            defunc_0_f_res_17412;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_17395
}
__kernel void calculate_objectivezisegmap_17446(__global int *global_failure,
                                                int64_t k_16331,
                                                int64_t d_16332,
                                                int64_t n_16334,
                                                int64_t num_groups_17442,
                                                int64_t num_threads_25356,
                                                __global
                                                unsigned char *mem_24043,
                                                __global
                                                unsigned char *mem_24051,
                                                __global
                                                unsigned char *mem_24100,
                                                __global
                                                unsigned char *color_25320)
{
    #define segmap_group_sizze_17441 (calculate_objectivezisegmap_group_sizze_17420)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25469;
    int32_t local_tid_25470;
    int64_t group_sizze_25473;
    int32_t wave_sizze_25472;
    int32_t group_tid_25471;
    
    global_tid_25469 = get_global_id(0);
    local_tid_25470 = get_local_id(0);
    group_sizze_25473 = get_local_size(0);
    wave_sizze_25472 = LOCKSTEP_WIDTH;
    group_tid_25471 = get_group_id(0);
    
    int32_t phys_tid_17446 = global_tid_25469;
    int32_t phys_group_id_25474;
    
    phys_group_id_25474 = get_group_id(0);
    for (int32_t i_25475 = 0; i_25475 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16331, segmap_group_sizze_17441)) -
                   phys_group_id_25474, sext_i64_i32(num_groups_17442));
         i_25475++) {
        int32_t virt_group_id_25476 = phys_group_id_25474 + i_25475 *
                sext_i64_i32(num_groups_17442);
        int64_t global_tid_25477 = sext_i32_i64(virt_group_id_25476) *
                segmap_group_sizze_17441 + sext_i32_i64(local_tid_25470);
        int64_t slice_25478 = k_16331;
        int64_t gtid_17445 = global_tid_25477;
        int64_t remnant_25479 = global_tid_25477 - gtid_17445;
        
        if (slt64(gtid_17445, k_16331)) {
            for (int64_t i_23932 = 0; i_23932 < n_16334; i_23932++) {
                for (int64_t i_23936 = 0; i_23936 < d_16332; i_23936++) {
                    double defunc_2_reduce_res_17453;
                    double redout_23938 = 0.0;
                    
                    for (int64_t i_23939 = 0; i_23939 < d_16332; i_23939++) {
                        double x_17457;
                        
                        x_17457 = ((__global double *) mem_24043)[i_23932 *
                                                                  (k_16331 *
                                                                   d_16332) +
                                                                  i_23939 *
                                                                  k_16331 +
                                                                  gtid_17445];
                        
                        double x_17458;
                        
                        x_17458 = ((__global double *) mem_24051)[i_23936 *
                                                                  (k_16331 *
                                                                   d_16332) +
                                                                  i_23939 *
                                                                  k_16331 +
                                                                  gtid_17445];
                        
                        double defunc_1_f_res_17459 = x_17457 * x_17458;
                        double defunc_1_op_res_17456 = defunc_1_f_res_17459 +
                               redout_23938;
                        double redout_tmp_25482 = defunc_1_op_res_17456;
                        
                        redout_23938 = redout_tmp_25482;
                    }
                    defunc_2_reduce_res_17453 = redout_23938;
                    ((__global double *) color_25320)[phys_tid_17446 +
                                                      (i_23932 *
                                                       (num_threads_25356 *
                                                        d_16332) + i_23936 *
                                                       num_threads_25356)] =
                        defunc_2_reduce_res_17453;
                }
            }
            for (int64_t i_25483 = 0; i_25483 < n_16334; i_25483++) {
                for (int64_t i_25484 = 0; i_25484 < d_16332; i_25484++) {
                    double tmp_25485;
                    
                    tmp_25485 = ((__global
                                  double *) color_25320)[phys_tid_17446 +
                                                         (i_25483 *
                                                          (num_threads_25356 *
                                                           d_16332) + i_25484 *
                                                          num_threads_25356)];
                    ((__global double *) mem_24100)[gtid_17445 + (i_25483 *
                                                                  (k_16331 *
                                                                   d_16332) +
                                                                  i_25484 *
                                                                  k_16331)] =
                        tmp_25485;
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_17441
}
__kernel void calculate_objectivezisegmap_17630(__global int *global_failure,
                                                int64_t k_16331,
                                                int64_t d_16332,
                                                int64_t n_16334,
                                                int64_t num_groups_17621,
                                                int64_t num_threads_25358,
                                                __global
                                                unsigned char *mem_24035,
                                                __global
                                                unsigned char *mem_24104,
                                                __global
                                                unsigned char *mem_24124,
                                                __global
                                                unsigned char *color_25321)
{
    #define segmap_group_sizze_17620 (calculate_objectivezisegmap_group_sizze_17465)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25486;
    int32_t local_tid_25487;
    int64_t group_sizze_25490;
    int32_t wave_sizze_25489;
    int32_t group_tid_25488;
    
    global_tid_25486 = get_global_id(0);
    local_tid_25487 = get_local_id(0);
    group_sizze_25490 = get_local_size(0);
    wave_sizze_25489 = LOCKSTEP_WIDTH;
    group_tid_25488 = get_group_id(0);
    
    int32_t phys_tid_17630 = global_tid_25486;
    int32_t phys_group_id_25491;
    
    phys_group_id_25491 = get_group_id(0);
    for (int32_t i_25492 = 0; i_25492 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16331 * n_16334,
                                          segmap_group_sizze_17620)) -
                   phys_group_id_25491, sext_i64_i32(num_groups_17621));
         i_25492++) {
        int32_t virt_group_id_25493 = phys_group_id_25491 + i_25492 *
                sext_i64_i32(num_groups_17621);
        int64_t global_tid_25494 = sext_i32_i64(virt_group_id_25493) *
                segmap_group_sizze_17620 + sext_i32_i64(local_tid_25487);
        int64_t slice_25495 = n_16334;
        int64_t slice_25496 = k_16331 * slice_25495;
        int64_t gtid_17628 = squot64(global_tid_25494, slice_25495);
        int64_t remnant_25497 = global_tid_25494 - gtid_17628 * slice_25495;
        int64_t gtid_17629 = remnant_25497;
        int64_t remnant_25498 = remnant_25497 - gtid_17629;
        
        if (slt64(gtid_17628, k_16331) && slt64(gtid_17629, n_16334)) {
            for (int64_t i_23942 = 0; i_23942 < d_16332; i_23942++) {
                double defunc_2_reduce_res_17635;
                double redout_23944 = 0.0;
                
                for (int64_t i_23945 = 0; i_23945 < d_16332; i_23945++) {
                    double x_17639;
                    
                    x_17639 = ((__global double *) mem_24035)[gtid_17628 *
                                                              (n_16334 *
                                                               d_16332) +
                                                              i_23945 *
                                                              n_16334 +
                                                              gtid_17629];
                    
                    double x_17640;
                    
                    x_17640 = ((__global double *) mem_24104)[gtid_17628 *
                                                              (d_16332 *
                                                               d_16332) +
                                                              i_23942 *
                                                              d_16332 +
                                                              i_23945];
                    
                    double defunc_1_f_res_17641 = x_17639 * x_17640;
                    double defunc_1_op_res_17638 = defunc_1_f_res_17641 +
                           redout_23944;
                    double redout_tmp_25500 = defunc_1_op_res_17638;
                    
                    redout_23944 = redout_tmp_25500;
                }
                defunc_2_reduce_res_17635 = redout_23944;
                ((__global double *) color_25321)[phys_tid_17630 + i_23942 *
                                                  num_threads_25358] =
                    defunc_2_reduce_res_17635;
            }
            for (int64_t i_25501 = 0; i_25501 < d_16332; i_25501++) {
                double tmp_25502;
                
                tmp_25502 = ((__global double *) color_25321)[phys_tid_17630 +
                                                              i_25501 *
                                                              num_threads_25358];
                ((__global double *) mem_24124)[gtid_17628 * n_16334 +
                                                gtid_17629 + i_25501 *
                                                (n_16334 * k_16331)] =
                    tmp_25502;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_17620
}
__kernel void calculate_objectivezisegmap_17719(__global int *global_failure,
                                                int64_t k_16331,
                                                int64_t d_16332,
                                                int64_t n_16334,
                                                int64_t num_groups_17715,
                                                int64_t num_threads_25362,
                                                __global
                                                unsigned char *mem_24353,
                                                __global
                                                unsigned char *mem_24372,
                                                __global
                                                unsigned char *color_25336)
{
    #define segmap_group_sizze_17714 (calculate_objectivezisegmap_group_sizze_17697)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25688;
    int32_t local_tid_25689;
    int64_t group_sizze_25692;
    int32_t wave_sizze_25691;
    int32_t group_tid_25690;
    
    global_tid_25688 = get_global_id(0);
    local_tid_25689 = get_local_id(0);
    group_sizze_25692 = get_local_size(0);
    wave_sizze_25691 = LOCKSTEP_WIDTH;
    group_tid_25690 = get_group_id(0);
    
    int32_t phys_tid_17719 = global_tid_25688;
    int32_t phys_group_id_25693;
    
    phys_group_id_25693 = get_group_id(0);
    for (int32_t i_25694 = 0; i_25694 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16331, segmap_group_sizze_17714)) -
                   phys_group_id_25693, sext_i64_i32(num_groups_17715));
         i_25694++) {
        int32_t virt_group_id_25695 = phys_group_id_25693 + i_25694 *
                sext_i64_i32(num_groups_17715);
        int64_t global_tid_25696 = sext_i32_i64(virt_group_id_25695) *
                segmap_group_sizze_17714 + sext_i32_i64(local_tid_25689);
        int64_t slice_25697 = k_16331;
        int64_t gtid_17718 = global_tid_25696;
        int64_t remnant_25698 = global_tid_25696 - gtid_17718;
        
        if (slt64(gtid_17718, k_16331)) {
            for (int64_t i_23948 = 0; i_23948 < n_16334; i_23948++) {
                double defunc_2_reduce_res_17723;
                double redout_23950 = 0.0;
                
                for (int64_t i_23951 = 0; i_23951 < d_16332; i_23951++) {
                    double x_17727;
                    
                    x_17727 = ((__global double *) mem_24353)[i_23948 *
                                                              (k_16331 *
                                                               d_16332) +
                                                              i_23951 *
                                                              k_16331 +
                                                              gtid_17718];
                    
                    double defunc_0_f_res_17728 = x_17727 * x_17727;
                    double defunc_1_op_res_17726 = defunc_0_f_res_17728 +
                           redout_23950;
                    double redout_tmp_25700 = defunc_1_op_res_17726;
                    
                    redout_23950 = redout_tmp_25700;
                }
                defunc_2_reduce_res_17723 = redout_23950;
                ((__global double *) color_25336)[phys_tid_17719 + i_23948 *
                                                  num_threads_25362] =
                    defunc_2_reduce_res_17723;
            }
            for (int64_t i_25701 = 0; i_25701 < n_16334; i_25701++) {
                double tmp_25702;
                
                tmp_25702 = ((__global double *) color_25336)[phys_tid_17719 +
                                                              i_25701 *
                                                              num_threads_25362];
                ((__global double *) mem_24372)[gtid_17718 + i_25701 *
                                                k_16331] = tmp_25702;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_17714
}
__kernel void calculate_objectivezisegmap_17804(__global int *global_failure,
                                                int64_t k_16331,
                                                int64_t d_16332,
                                                int64_t n_16334, __global
                                                unsigned char *mem_24376,
                                                __global
                                                unsigned char *mem_24381)
{
    #define segmap_group_sizze_17795 (calculate_objectivezisegmap_group_sizze_17734)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25703;
    int32_t local_tid_25704;
    int64_t group_sizze_25707;
    int32_t wave_sizze_25706;
    int32_t group_tid_25705;
    
    global_tid_25703 = get_global_id(0);
    local_tid_25704 = get_local_id(0);
    group_sizze_25707 = get_local_size(0);
    wave_sizze_25706 = LOCKSTEP_WIDTH;
    group_tid_25705 = get_group_id(0);
    
    int32_t phys_tid_17804 = global_tid_25703;
    int64_t global_tid_25708 = sext_i32_i64(group_tid_25705) *
            segmap_group_sizze_17795 + sext_i32_i64(local_tid_25704);
    int64_t slice_25709 = n_16334;
    int64_t slice_25710 = k_16331 * slice_25709;
    int64_t gtid_17802 = squot64(global_tid_25708, slice_25709);
    int64_t remnant_25711 = global_tid_25708 - gtid_17802 * slice_25709;
    int64_t gtid_17803 = remnant_25711;
    int64_t remnant_25712 = remnant_25711 - gtid_17803;
    
    if (slt64(gtid_17802, k_16331) && slt64(gtid_17803, n_16334)) {
        double defunc_2_reduce_res_17806;
        double redout_23952 = 0.0;
        
        for (int64_t i_23953 = 0; i_23953 < d_16332; i_23953++) {
            double x_17810;
            
            x_17810 = ((__global double *) mem_24376)[i_23953 * (n_16334 *
                                                                 k_16331) +
                                                      gtid_17802 * n_16334 +
                                                      gtid_17803];
            
            double defunc_0_f_res_17811 = x_17810 * x_17810;
            double defunc_1_op_res_17809 = defunc_0_f_res_17811 + redout_23952;
            double redout_tmp_25713 = defunc_1_op_res_17809;
            
            redout_23952 = redout_tmp_25713;
        }
        defunc_2_reduce_res_17806 = redout_23952;
        ((__global double *) mem_24381)[gtid_17802 * n_16334 + gtid_17803] =
            defunc_2_reduce_res_17806;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_17795
}
__kernel void calculate_objectivezisegmap_17853(__global int *global_failure,
                                                int64_t k_16331,
                                                int64_t d_16332, __global
                                                unsigned char *mem_24396,
                                                __global
                                                unsigned char *mem_24400)
{
    #define segmap_group_sizze_17849 (calculate_objectivezisegmap_group_sizze_17837)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25789;
    int32_t local_tid_25790;
    int64_t group_sizze_25793;
    int32_t wave_sizze_25792;
    int32_t group_tid_25791;
    
    global_tid_25789 = get_global_id(0);
    local_tid_25790 = get_local_id(0);
    group_sizze_25793 = get_local_size(0);
    wave_sizze_25792 = LOCKSTEP_WIDTH;
    group_tid_25791 = get_group_id(0);
    
    int32_t phys_tid_17853 = global_tid_25789;
    int64_t global_tid_25794 = sext_i32_i64(group_tid_25791) *
            segmap_group_sizze_17849 + sext_i32_i64(local_tid_25790);
    int64_t slice_25795 = k_16331;
    int64_t gtid_17852 = global_tid_25794;
    int64_t remnant_25796 = global_tid_25794 - gtid_17852;
    
    if (slt64(gtid_17852, k_16331)) {
        double defunc_2_reduce_res_17855;
        double redout_23954 = 0.0;
        
        for (int64_t i_23955 = 0; i_23955 < d_16332; i_23955++) {
            double x_17859;
            
            x_17859 = ((__global double *) mem_24396)[i_23955 * k_16331 +
                                                      gtid_17852];
            
            double defunc_1_op_res_17858 = x_17859 + redout_23954;
            double redout_tmp_25797 = defunc_1_op_res_17858;
            
            redout_23954 = redout_tmp_25797;
        }
        defunc_2_reduce_res_17855 = redout_23954;
        ((__global double *) mem_24400)[gtid_17852] = defunc_2_reduce_res_17855;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_17849
}
__kernel void calculate_objectivezisegmap_18190(__global int *global_failure,
                                                int64_t k_16331,
                                                int64_t n_16334,
                                                int64_t num_threads_25370,
                                                __global
                                                unsigned char *alphas_mem_24017,
                                                __global
                                                unsigned char *ext_mem_24393,
                                                __global
                                                unsigned char *ext_mem_24405,
                                                __global
                                                unsigned char *mem_24442,
                                                __global
                                                unsigned char *color_25338)
{
    #define segmap_group_sizze_18186 (calculate_objectivezisegmap_group_sizze_17958)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25904;
    int32_t local_tid_25905;
    int64_t group_sizze_25908;
    int32_t wave_sizze_25907;
    int32_t group_tid_25906;
    
    global_tid_25904 = get_global_id(0);
    local_tid_25905 = get_local_id(0);
    group_sizze_25908 = get_local_size(0);
    wave_sizze_25907 = LOCKSTEP_WIDTH;
    group_tid_25906 = get_group_id(0);
    
    int32_t phys_tid_18190 = global_tid_25904;
    int64_t global_tid_25909 = sext_i32_i64(group_tid_25906) *
            segmap_group_sizze_18186 + sext_i32_i64(local_tid_25905);
    int64_t slice_25910 = n_16334;
    int64_t gtid_18189 = global_tid_25909;
    int64_t remnant_25911 = global_tid_25909 - gtid_18189;
    
    if (slt64(gtid_18189, n_16334)) {
        double defunc_2_reduce_res_18194;
        double redout_23964 = -INFINITY;
        
        for (int64_t i_23966 = 0; i_23966 < k_16331; i_23966++) {
            double x_18199;
            
            x_18199 = ((__global double *) ext_mem_24393)[i_23966 * n_16334 +
                                                          gtid_18189];
            
            double x_wasfree_18200;
            
            x_wasfree_18200 = ((__global double *) alphas_mem_24017)[i_23966];
            
            double x_wasfree_18201;
            
            x_wasfree_18201 = ((__global double *) ext_mem_24405)[i_23966];
            
            double x_18202 = -0.5 * x_18199;
            double x_18203 = x_wasfree_18200 + x_18202;
            double defunc_0_f_res_18204 = x_wasfree_18201 + x_18203;
            double defunc_1_op_res_18198 = fmax64(defunc_0_f_res_18204,
                                                  redout_23964);
            
            ((__global double *) color_25338)[phys_tid_18190 + i_23966 *
                                              num_threads_25370] =
                defunc_0_f_res_18204;
            
            double redout_tmp_25912 = defunc_1_op_res_18198;
            
            redout_23964 = redout_tmp_25912;
        }
        defunc_2_reduce_res_18194 = redout_23964;
        
        double defunc_2_reduce_res_18205;
        double redout_23968 = 0.0;
        
        for (int64_t i_23969 = 0; i_23969 < k_16331; i_23969++) {
            double x_18209;
            
            x_18209 = ((__global double *) color_25338)[phys_tid_18190 +
                                                        i_23969 *
                                                        num_threads_25370];
            
            double exp_arg_18210 = x_18209 - defunc_2_reduce_res_18194;
            double exp_res_18211;
            
            exp_res_18211 = futrts_exp64(exp_arg_18210);
            
            double defunc_1_op_res_18208 = exp_res_18211 + redout_23968;
            double redout_tmp_25914 = defunc_1_op_res_18208;
            
            redout_23968 = redout_tmp_25914;
        }
        defunc_2_reduce_res_18205 = redout_23968;
        
        double log_res_18212;
        
        log_res_18212 = futrts_log64(defunc_2_reduce_res_18205);
        
        double defunc_0_f_res_18213 = defunc_2_reduce_res_18194 + log_res_18212;
        
        ((__global double *) mem_24442)[gtid_18189] = defunc_0_f_res_18213;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_18186
}
__kernel void calculate_objectivezisegmap_18292(__global int *global_failure,
                                                int64_t n_16334, __global
                                                unsigned char *mem_24458,
                                                __global
                                                unsigned char *mem_24466,
                                                __global
                                                unsigned char *mem_24470)
{
    #define segmap_group_sizze_18288 (calculate_objectivezisegmap_group_sizze_18058)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26069;
    int32_t local_tid_26070;
    int64_t group_sizze_26073;
    int32_t wave_sizze_26072;
    int32_t group_tid_26071;
    
    global_tid_26069 = get_global_id(0);
    local_tid_26070 = get_local_id(0);
    group_sizze_26073 = get_local_size(0);
    wave_sizze_26072 = LOCKSTEP_WIDTH;
    group_tid_26071 = get_group_id(0);
    
    int32_t phys_tid_18292 = global_tid_26069;
    int64_t global_tid_26074 = sext_i32_i64(group_tid_26071) *
            segmap_group_sizze_18288 + sext_i32_i64(local_tid_26070);
    int64_t slice_26075 = n_16334;
    int64_t gtid_18291 = global_tid_26074;
    int64_t remnant_26076 = global_tid_26074 - gtid_18291;
    
    if (slt64(gtid_18291, n_16334)) {
        double defunc_2_reduce_res_18293;
        
        defunc_2_reduce_res_18293 = ((__global double *) mem_24458)[gtid_18291];
        
        double defunc_2_reduce_res_18294;
        
        defunc_2_reduce_res_18294 = ((__global double *) mem_24466)[gtid_18291];
        
        double log_res_18295;
        
        log_res_18295 = futrts_log64(defunc_2_reduce_res_18294);
        
        double defunc_0_f_res_18296 = defunc_2_reduce_res_18293 + log_res_18295;
        
        ((__global double *) mem_24470)[gtid_18291] = defunc_0_f_res_18296;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_18288
}
__kernel void calculate_objectivezisegmap_18464(__global int *global_failure,
                                                int64_t k_16331,
                                                int64_t d_16332,
                                                int64_t y_17168, __global
                                                unsigned char *mem_24494,
                                                __global
                                                unsigned char *mem_24498)
{
    #define segmap_group_sizze_18460 (calculate_objectivezisegmap_group_sizze_18380)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26214;
    int32_t local_tid_26215;
    int64_t group_sizze_26218;
    int32_t wave_sizze_26217;
    int32_t group_tid_26216;
    
    global_tid_26214 = get_global_id(0);
    local_tid_26215 = get_local_id(0);
    group_sizze_26218 = get_local_size(0);
    wave_sizze_26217 = LOCKSTEP_WIDTH;
    group_tid_26216 = get_group_id(0);
    
    int32_t phys_tid_18464 = global_tid_26214;
    int64_t global_tid_26219 = sext_i32_i64(group_tid_26216) *
            segmap_group_sizze_18460 + sext_i32_i64(local_tid_26215);
    int64_t slice_26220 = k_16331;
    int64_t gtid_18463 = global_tid_26219;
    int64_t remnant_26221 = global_tid_26219 - gtid_18463;
    
    if (slt64(gtid_18463, k_16331)) {
        double defunc_2_reduce_res_18467;
        double redout_23972 = 0.0;
        
        for (int64_t i_23973 = 0; i_23973 < y_17168; i_23973++) {
            int64_t new_index_24008 = squot64(i_23973, d_16332);
            int64_t binop_y_24010 = d_16332 * new_index_24008;
            int64_t new_index_24011 = i_23973 - binop_y_24010;
            double x_18471;
            
            x_18471 = ((__global double *) mem_24494)[new_index_24008 *
                                                      (k_16331 * d_16332) +
                                                      new_index_24011 *
                                                      k_16331 + gtid_18463];
            
            double defunc_0_f_res_18472 = x_18471 * x_18471;
            double defunc_1_op_res_18470 = defunc_0_f_res_18472 + redout_23972;
            double redout_tmp_26222 = defunc_1_op_res_18470;
            
            redout_23972 = redout_tmp_26222;
        }
        defunc_2_reduce_res_18467 = redout_23972;
        ((__global double *) mem_24498)[gtid_18463] = defunc_2_reduce_res_18467;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_18460
}
__kernel void calculate_objectivezisegmap_intragroup_18217(__global
                                                           int *global_failure,
                                                           uint red_arr_mem_25929_backing_offset_0,
                                                           uint red_arr_mem_25925_backing_offset_1,
                                                           uint color_25339_backing_offset_2,
                                                           int64_t k_16331,
                                                           int64_t n_16334,
                                                           __global
                                                           unsigned char *alphas_mem_24017,
                                                           __global
                                                           unsigned char *ext_mem_24393,
                                                           __global
                                                           unsigned char *ext_mem_24405,
                                                           __global
                                                           unsigned char *mem_24451)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_25929_backing_2 =
                           &shared_mem[red_arr_mem_25929_backing_offset_0];
    volatile unsigned char *red_arr_mem_25925_backing_1 =
                           &shared_mem[red_arr_mem_25925_backing_offset_1];
    volatile unsigned char *color_25339_backing_0 =
                           &shared_mem[color_25339_backing_offset_2];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25915;
    int32_t local_tid_25916;
    int64_t group_sizze_25919;
    int32_t wave_sizze_25918;
    int32_t group_tid_25917;
    
    global_tid_25915 = get_global_id(0);
    local_tid_25916 = get_local_id(0);
    group_sizze_25919 = get_local_size(0);
    wave_sizze_25918 = LOCKSTEP_WIDTH;
    group_tid_25917 = get_group_id(0);
    
    int32_t phys_tid_18217 = group_tid_25917;
    int64_t slice_25921 = k_16331;
    int64_t ltid_pre_25920 = sext_i32_i64(local_tid_25916);
    int64_t remnant_25922 = sext_i32_i64(local_tid_25916) - ltid_pre_25920;
    int64_t slice_25923 = n_16334;
    int64_t gtid_18216 = sext_i32_i64(group_tid_25917);
    int64_t remnant_25924 = sext_i32_i64(group_tid_25917) - gtid_18216;
    __local unsigned char *color_25339;
    
    color_25339 = (__local unsigned char *) color_25339_backing_0;
    
    double defunc_2_reduce_res_18224;
    int64_t gtid_18226 = sext_i32_i64(sext_i64_i32(ltid_pre_25920));
    int32_t phys_tid_18227 = local_tid_25916;
    __local unsigned char *red_arr_mem_25925;
    
    red_arr_mem_25925 = (__local unsigned char *) red_arr_mem_25925_backing_1;
    
    double x_18231;
    
    x_18231 = ((__global double *) ext_mem_24393)[gtid_18226 * n_16334 +
                                                  gtid_18216];
    
    double x_wasfree_18232;
    
    x_wasfree_18232 = ((__global double *) alphas_mem_24017)[gtid_18226];
    
    double x_wasfree_18233;
    
    x_wasfree_18233 = ((__global double *) ext_mem_24405)[gtid_18226];
    
    double x_18234 = -0.5 * x_18231;
    double x_18235 = x_wasfree_18232 + x_18234;
    double defunc_0_f_res_18236 = x_wasfree_18233 + x_18235;
    
    ((__local double *) red_arr_mem_25925)[gtid_18226] = defunc_0_f_res_18236;
    ((__local double *) color_25339)[gtid_18226] = defunc_0_f_res_18236;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_25927;
    int32_t skip_waves_25928 = 1;
    double x_18228;
    double x_18229;
    
    offset_25927 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_25916, sext_i64_i32(k_16331))) {
            x_18228 = ((__local
                        double *) red_arr_mem_25925)[sext_i32_i64(local_tid_25916 +
                                                     offset_25927)];
        }
    }
    offset_25927 = 1;
    while (slt32(offset_25927, wave_sizze_25918)) {
        if (slt32(local_tid_25916 + offset_25927, sext_i64_i32(k_16331)) &&
            ((local_tid_25916 - squot32(local_tid_25916, wave_sizze_25918) *
              wave_sizze_25918) & (2 * offset_25927 - 1)) == 0) {
            // read array element
            {
                x_18229 = ((volatile __local
                            double *) red_arr_mem_25925)[sext_i32_i64(local_tid_25916 +
                                                         offset_25927)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_18230 = fmax64(x_18228, x_18229);
                
                x_18228 = defunc_1_op_res_18230;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_25925)[sext_i32_i64(local_tid_25916)] =
                    x_18228;
            }
        }
        offset_25927 *= 2;
    }
    while (slt32(skip_waves_25928, squot32(sext_i64_i32(k_16331) +
                                           wave_sizze_25918 - 1,
                                           wave_sizze_25918))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_25927 = skip_waves_25928 * wave_sizze_25918;
        if (slt32(local_tid_25916 + offset_25927, sext_i64_i32(k_16331)) &&
            ((local_tid_25916 - squot32(local_tid_25916, wave_sizze_25918) *
              wave_sizze_25918) == 0 && (squot32(local_tid_25916,
                                                 wave_sizze_25918) & (2 *
                                                                      skip_waves_25928 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                x_18229 = ((__local
                            double *) red_arr_mem_25925)[sext_i32_i64(local_tid_25916 +
                                                         offset_25927)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_18230 = fmax64(x_18228, x_18229);
                
                x_18228 = defunc_1_op_res_18230;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_25925)[sext_i32_i64(local_tid_25916)] =
                    x_18228;
            }
        }
        skip_waves_25928 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_2_reduce_res_18224 = ((__local
                                  double *) red_arr_mem_25925)[(int64_t) 0];
    
    double defunc_2_reduce_res_18237;
    int64_t gtid_18238 = sext_i32_i64(sext_i64_i32(ltid_pre_25920));
    int32_t phys_tid_18239 = local_tid_25916;
    __local unsigned char *red_arr_mem_25929;
    
    red_arr_mem_25929 = (__local unsigned char *) red_arr_mem_25929_backing_2;
    
    double x_18243;
    
    x_18243 = ((__local double *) color_25339)[gtid_18238];
    
    double exp_arg_18244 = x_18243 - defunc_2_reduce_res_18224;
    double exp_res_18245;
    
    exp_res_18245 = futrts_exp64(exp_arg_18244);
    ((__local double *) red_arr_mem_25929)[gtid_18238] = exp_res_18245;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_25931;
    int32_t skip_waves_25932 = 1;
    double x_18240;
    double x_18241;
    
    offset_25931 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_25916, sext_i64_i32(k_16331))) {
            x_18240 = ((__local
                        double *) red_arr_mem_25929)[sext_i32_i64(local_tid_25916 +
                                                     offset_25931)];
        }
    }
    offset_25931 = 1;
    while (slt32(offset_25931, wave_sizze_25918)) {
        if (slt32(local_tid_25916 + offset_25931, sext_i64_i32(k_16331)) &&
            ((local_tid_25916 - squot32(local_tid_25916, wave_sizze_25918) *
              wave_sizze_25918) & (2 * offset_25931 - 1)) == 0) {
            // read array element
            {
                x_18241 = ((volatile __local
                            double *) red_arr_mem_25929)[sext_i32_i64(local_tid_25916 +
                                                         offset_25931)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_18242 = x_18240 + x_18241;
                
                x_18240 = defunc_1_op_res_18242;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_25929)[sext_i32_i64(local_tid_25916)] =
                    x_18240;
            }
        }
        offset_25931 *= 2;
    }
    while (slt32(skip_waves_25932, squot32(sext_i64_i32(k_16331) +
                                           wave_sizze_25918 - 1,
                                           wave_sizze_25918))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_25931 = skip_waves_25932 * wave_sizze_25918;
        if (slt32(local_tid_25916 + offset_25931, sext_i64_i32(k_16331)) &&
            ((local_tid_25916 - squot32(local_tid_25916, wave_sizze_25918) *
              wave_sizze_25918) == 0 && (squot32(local_tid_25916,
                                                 wave_sizze_25918) & (2 *
                                                                      skip_waves_25932 -
                                                                      1)) ==
             0)) {
            // read array element
            {
                x_18241 = ((__local
                            double *) red_arr_mem_25929)[sext_i32_i64(local_tid_25916 +
                                                         offset_25931)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_18242 = x_18240 + x_18241;
                
                x_18240 = defunc_1_op_res_18242;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_25929)[sext_i32_i64(local_tid_25916)] =
                    x_18240;
            }
        }
        skip_waves_25932 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_2_reduce_res_18237 = ((__local
                                  double *) red_arr_mem_25929)[(int64_t) 0];
    
    double log_res_18246;
    
    log_res_18246 = futrts_log64(defunc_2_reduce_res_18237);
    
    double defunc_0_f_res_18247 = defunc_2_reduce_res_18224 + log_res_18246;
    
    if (local_tid_25916 == 0) {
        ((__global double *) mem_24451)[gtid_18216] = defunc_0_f_res_18247;
    }
    
  error_4:
    return;
}
__kernel void calculate_objectivezisegmap_intragroup_22273(__global
                                                           int *global_failure,
                                                           uint color_25335_backing_offset_0,
                                                           uint color_25334_backing_offset_1,
                                                           int64_t k_16331,
                                                           int64_t d_16332,
                                                           int64_t n_16334,
                                                           int64_t gridDim_x_22266,
                                                           int64_t gridDim_y_22267,
                                                           int64_t full_tiles_22301,
                                                           int64_t kk_22524,
                                                           __global
                                                           unsigned char *mem_24026,
                                                           __global
                                                           unsigned char *mem_24035,
                                                           __global
                                                           unsigned char *mem_24320)
{
    #define Ty_22247 (calculate_objectiveziTy_22244)
    #define Ry_22248 (calculate_objectiveziRy_22246)
    #define Tx_22249 (calculate_objectiveziTx_22243)
    #define Rx_22250 (calculate_objectiveziRx_22245)
    #define Tk_22251 (calculate_objectiveziTk_22242)
    #define tk_div_tx_22252 (sdiv_up64(calculate_objectiveziTk_22242, calculate_objectiveziTx_22243))
    #define TxRx_22254 (calculate_objectiveziTx_22243 * calculate_objectiveziRx_22245)
    #define TyRy_22255 (calculate_objectiveziTy_22244 * calculate_objectiveziRy_22246)
    #define a_loc_szz_22260 (calculate_objectiveziTk_22242 * (calculate_objectiveziTy_22244 * calculate_objectiveziRy_22246) + smax64(calculate_objectiveziTk_22242, calculate_objectiveziTy_22244 * calculate_objectiveziRy_22246))
    #define b_loc_szz_22265 (smax64(calculate_objectiveziTk_22242, calculate_objectiveziTy_22244 * calculate_objectiveziRy_22246) + calculate_objectiveziTk_22242 * (calculate_objectiveziTx_22243 * calculate_objectiveziRx_22245))
    #define binop_y_22433 ((int64_t) 1 + calculate_objectiveziTx_22243 * calculate_objectiveziRx_22245)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *color_25335_backing_1 =
                           &shared_mem[color_25335_backing_offset_0];
    volatile unsigned char *color_25334_backing_0 =
                           &shared_mem[color_25334_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25503;
    int32_t local_tid_25504;
    int64_t group_sizze_25507;
    int32_t wave_sizze_25506;
    int32_t group_tid_25505;
    
    global_tid_25503 = get_global_id(0);
    local_tid_25504 = get_local_id(0);
    group_sizze_25507 = get_local_size(0);
    wave_sizze_25506 = LOCKSTEP_WIDTH;
    group_tid_25505 = get_group_id(0);
    
    int32_t gid_flat_22273 = group_tid_25505;
    int64_t slice_25510 = Tx_22249;
    int64_t slice_25511 = Ty_22247 * slice_25510;
    int64_t ltid_pre_25508 = squot64(sext_i32_i64(local_tid_25504),
                                     slice_25510);
    int64_t remnant_25512 = sext_i32_i64(local_tid_25504) - ltid_pre_25508 *
            slice_25510;
    int64_t ltid_pre_25509 = remnant_25512;
    int64_t remnant_25513 = remnant_25512 - ltid_pre_25509;
    int64_t slice_25516 = Tx_22249;
    int64_t slice_25517 = Tx_22249 * slice_25516;
    int64_t ltid_pre_25514 = squot64(sext_i32_i64(local_tid_25504),
                                     slice_25516);
    int64_t remnant_25518 = sext_i32_i64(local_tid_25504) - ltid_pre_25514 *
            slice_25516;
    int64_t ltid_pre_25515 = remnant_25518;
    int64_t remnant_25519 = remnant_25518 - ltid_pre_25515;
    int64_t slice_25520 = gridDim_x_22266;
    int64_t slice_25521 = gridDim_y_22267 * slice_25520;
    int64_t slice_25522 = k_16331 * slice_25521;
    int64_t gtid_17653 = squot64(sext_i32_i64(group_tid_25505), slice_25521);
    int64_t remnant_25523 = sext_i32_i64(group_tid_25505) - gtid_17653 *
            slice_25521;
    int64_t gid_y_22271 = squot64(remnant_25523, slice_25520);
    int64_t remnant_25524 = remnant_25523 - gid_y_22271 * slice_25520;
    int64_t gid_x_22272 = remnant_25524;
    int64_t remnant_25525 = remnant_25524 - gid_x_22272;
    double color_25329[Ry_22248 * Rx_22250];
    double color_25330[Ry_22248 * Rx_22250];
    double color_25331[Ry_22248 * Rx_22250];
    double color_25332[Rx_22250];
    double color_25333[Rx_22250];
    __local unsigned char *color_25334;
    
    color_25334 = (__local unsigned char *) color_25334_backing_0;
    
    __local unsigned char *color_25335;
    
    color_25335 = (__local unsigned char *) color_25335_backing_1;
    
    int64_t iii_22274 = TyRy_22255 * gid_y_22271;
    int64_t jjj_22275 = TxRx_22254 * gid_x_22272;
    int64_t ltid_y_22288 = sext_i32_i64(sext_i64_i32(ltid_pre_25508));
    int64_t ltid_x_22287 = sext_i32_i64(sext_i64_i32(ltid_pre_25509));
    int32_t ltid_flat_22289 = local_tid_25504;
    double color_25322[Ry_22248 * Rx_22250];
    
    for (int64_t i_22292 = 0; i_22292 < Ry_22248; i_22292++) {
        for (int64_t i_22295 = 0; i_22295 < Rx_22250; i_22295++) {
            color_25322[i_22292 * Rx_22250 + i_22295] = 0.0;
        }
    }
    for (int64_t i_25528 = 0; i_25528 < Ry_22248; i_25528++) {
        for (int64_t i_25529 = 0; i_25529 < Rx_22250; i_25529++) {
            double tmp_25530;
            
            tmp_25530 = color_25322[i_25528 * Rx_22250 + i_25529];
            color_25331[i_25528 * Rx_22250 + i_25529] = tmp_25530;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    double ext_mem_24234[Ry_22248 * Rx_22250];
    double mem_param_24145[Ry_22248 * Rx_22250];
    
    for (int32_t i_2 = 0; i_2 < Ry_22248 * Rx_22250; i_2++)
        mem_param_24145[i_2] = color_25331[i_2];
    for (int64_t i_22302 = 0; i_22302 < full_tiles_22301; i_22302++) {
        int64_t kk_22306 = Tk_22251 * i_22302;
        
        for (int64_t i_22307 = 0; i_22307 < tk_div_tx_22252; i_22307++) {
            int64_t binop_y_22332 = Tx_22249 * i_22307;
            
            for (int64_t i_22309 = 0; i_22309 < Rx_22250; i_22309++) {
                int64_t binop_y_22334 = Tx_22249 * i_22309;
                int64_t ltid_y_22330 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_25514));
                int64_t ltid_x_22331 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_25515));
                int32_t ltid_flat_22329 = local_tid_25504;
                int64_t k_22333 = ltid_y_22330 + binop_y_22332;
                int64_t i_22335 = ltid_x_22331 + binop_y_22334;
                int64_t gtid_22336 = iii_22274 + i_22335;
                int64_t x_seqdim_idx_22337 = kk_22306 + k_22333;
                bool cond_22338 = slt64(gtid_22336, n_16334);
                double x_elem_22339;
                
                if (cond_22338) {
                    double A_elem_22341;
                    
                    A_elem_22341 = ((__global double *) mem_24035)[gtid_17653 *
                                                                   (n_16334 *
                                                                    d_16332) +
                                                                   x_seqdim_idx_22337 *
                                                                   n_16334 +
                                                                   gtid_22336];
                    x_elem_22339 = A_elem_22341;
                } else {
                    x_elem_22339 = 0.0;
                }
                
                bool cond_22343 = slt64(k_22333, Tk_22251);
                int64_t x_loc_ind_22344;
                
                if (cond_22343) {
                    int64_t binop_y_22345 = (int64_t) 1 + TxRx_22254;
                    int64_t binop_y_22346 = k_22333 * binop_y_22345;
                    int64_t loc_fi_22347 = i_22335 + binop_y_22346;
                    
                    x_loc_ind_22344 = loc_fi_22347;
                } else {
                    x_loc_ind_22344 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, x_loc_ind_22344) &&
                    slt64(x_loc_ind_22344, a_loc_szz_22260)) {
                    ((__local double *) color_25335)[x_loc_ind_22344] =
                        x_elem_22339;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_22352 = 0; i_22352 < tk_div_tx_22252; i_22352++) {
            int64_t binop_y_22377 = Tx_22249 * i_22352;
            
            for (int64_t i_22354 = 0; i_22354 < Rx_22250; i_22354++) {
                int64_t binop_y_22379 = Tx_22249 * i_22354;
                int64_t ltid_y_22375 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_25514));
                int64_t ltid_x_22376 =
                        sext_i32_i64(sext_i64_i32(ltid_pre_25515));
                int32_t ltid_flat_22374 = local_tid_25504;
                int64_t k_22378 = ltid_y_22375 + binop_y_22377;
                int64_t i_22380 = ltid_x_22376 + binop_y_22379;
                int64_t gtid_22381 = jjj_22275 + i_22380;
                int64_t x_seqdim_idx_22382 = kk_22306 + k_22378;
                bool cond_22383 = slt64(gtid_22381, d_16332);
                double x_elem_22384;
                
                if (cond_22383) {
                    double A_elem_22386;
                    
                    A_elem_22386 = ((__global double *) mem_24026)[gtid_17653 *
                                                                   (d_16332 *
                                                                    d_16332) +
                                                                   x_seqdim_idx_22382 *
                                                                   d_16332 +
                                                                   gtid_22381];
                    x_elem_22384 = A_elem_22386;
                } else {
                    x_elem_22384 = 0.0;
                }
                
                bool cond_22388 = slt64(k_22378, Tk_22251);
                int64_t x_loc_ind_22389;
                
                if (cond_22388) {
                    int64_t binop_y_22390 = (int64_t) 1 + TxRx_22254;
                    int64_t binop_y_22391 = k_22378 * binop_y_22390;
                    int64_t loc_fi_22392 = i_22380 + binop_y_22391;
                    
                    x_loc_ind_22389 = loc_fi_22392;
                } else {
                    x_loc_ind_22389 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, x_loc_ind_22389) &&
                    slt64(x_loc_ind_22389, b_loc_szz_22265)) {
                    ((__local double *) color_25334)[x_loc_ind_22389] =
                        x_elem_22384;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_25539 = 0; i_25539 < Ry_22248; i_25539++) {
            for (int64_t i_25540 = 0; i_25540 < Rx_22250; i_25540++) {
                double tmp_25541;
                
                tmp_25541 = mem_param_24145[i_25539 * Rx_22250 + i_25540];
                color_25329[i_25539 * Rx_22250 + i_25540] = tmp_25541;
            }
        }
        
        double ext_mem_24231[Ry_22248 * Rx_22250];
        double ext_mem_unused_25265[Ry_22248 * Rx_22250];
        double mem_param_24202[Ry_22248 * Rx_22250];
        double mem_param_out_25266[Ry_22248 * Rx_22250];
        
        for (int32_t i_3 = 0; i_3 < Ry_22248 * Rx_22250; i_3++)
            mem_param_24202[i_3] = color_25329[i_3];
        for (int32_t i_4 = 0; i_4 < Ry_22248 * Rx_22250; i_4++)
            mem_param_out_25266[i_4] = color_25330[i_4];
        for (int64_t i_22397 = 0; i_22397 < Tk_22251; i_22397++) {
            int64_t binop_y_22434 = i_22397 * binop_y_22433;
            int64_t ltid_y_22425 = sext_i32_i64(sext_i64_i32(ltid_pre_25508));
            int64_t ltid_x_22424 = sext_i32_i64(sext_i64_i32(ltid_pre_25509));
            int32_t ltid_flat_22426 = local_tid_25504;
            double color_25323[Rx_22250];
            double color_25324[Rx_22250];
            int64_t binop_y_22431 = Rx_22250 * ltid_y_22425;
            
            for (int64_t i_22429 = 0; i_22429 < Rx_22250; i_22429++) {
                int64_t binop_x_22432 = i_22429 + binop_y_22431;
                int64_t x_loc_ind_22435 = binop_x_22432 + binop_y_22434;
                
                for (int64_t i_25546 = 0; i_25546 < (int64_t) 1; i_25546++) {
                    double tmp_25547;
                    
                    tmp_25547 = ((__local
                                  double *) color_25335)[x_loc_ind_22435 +
                                                         i_25546];
                    color_25324[i_22429 + i_25546] = tmp_25547;
                }
            }
            
            int64_t binop_y_22442 = Rx_22250 * ltid_x_22424;
            
            for (int64_t i_22440 = 0; i_22440 < Rx_22250; i_22440++) {
                int64_t binop_x_22443 = i_22440 + binop_y_22442;
                int64_t x_loc_ind_22446 = binop_y_22434 + binop_x_22443;
                
                for (int64_t i_25549 = 0; i_25549 < (int64_t) 1; i_25549++) {
                    double tmp_25550;
                    
                    tmp_25550 = ((__local
                                  double *) color_25334)[x_loc_ind_22446 +
                                                         i_25549];
                    color_25323[i_22440 + i_25549] = tmp_25550;
                }
            }
            for (int64_t i_25551 = 0; i_25551 < Rx_22250; i_25551++) {
                double tmp_25552;
                
                tmp_25552 = color_25324[i_25551];
                color_25333[i_25551] = tmp_25552;
            }
            for (int64_t i_25553 = 0; i_25553 < Rx_22250; i_25553++) {
                double tmp_25554;
                
                tmp_25554 = color_25323[i_25553];
                color_25332[i_25553] = tmp_25554;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_22485 = sext_i32_i64(sext_i64_i32(ltid_pre_25508));
            int64_t ltid_x_22484 = sext_i32_i64(sext_i64_i32(ltid_pre_25509));
            int32_t ltid_flat_22486 = local_tid_25504;
            int64_t binop_y_22497 = Ry_22248 * ltid_y_22485;
            int64_t binop_y_22501 = Rx_22250 * ltid_x_22484;
            
            for (int64_t i_22491 = 0; i_22491 < Ry_22248; i_22491++) {
                int64_t binop_x_22496 = iii_22274 + i_22491;
                int64_t cmpop_x_22498 = binop_x_22496 + binop_y_22497;
                bool binop_x_22499 = slt64(cmpop_x_22498, n_16334);
                
                for (int64_t i_22494 = 0; i_22494 < Rx_22250; i_22494++) {
                    int64_t binop_x_22500 = jjj_22275 + i_22494;
                    int64_t cmpop_x_22502 = binop_x_22500 + binop_y_22501;
                    bool binop_y_22503 = slt64(cmpop_x_22502, d_16332);
                    bool cond_22504 = binop_x_22499 && binop_y_22503;
                    
                    if (cond_22504) {
                        double a_22506;
                        
                        a_22506 = color_25333[i_22491];
                        
                        double b_22507;
                        
                        b_22507 = color_25332[i_22494];
                        
                        double c_22508;
                        
                        c_22508 = mem_param_24202[i_22491 * Rx_22250 + i_22494];
                        
                        double defunc_1_f_res_22511 = a_22506 * b_22507;
                        double defunc_1_op_res_22515 = c_22508 +
                               defunc_1_f_res_22511;
                        
                        mem_param_24202[i_22491 * Rx_22250 + i_22494] =
                            defunc_1_op_res_22515;
                    }
                }
            }
            for (int64_t i_25557 = 0; i_25557 < Ry_22248; i_25557++) {
                for (int64_t i_25558 = 0; i_25558 < Rx_22250; i_25558++) {
                    double tmp_25559;
                    
                    tmp_25559 = mem_param_24202[i_25557 * Rx_22250 + i_25558];
                    mem_param_out_25266[i_25557 * Rx_22250 + i_25558] =
                        tmp_25559;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            double mem_param_tmp_25542[Ry_22248 * Rx_22250];
            
            for (int32_t i_5 = 0; i_5 < Ry_22248 * Rx_22250; i_5++)
                mem_param_tmp_25542[i_5] = mem_param_out_25266[i_5];
            
            double mem_param_out_tmp_25543[Ry_22248 * Rx_22250];
            
            for (int32_t i_6 = 0; i_6 < Ry_22248 * Rx_22250; i_6++)
                mem_param_out_tmp_25543[i_6] = mem_param_24202[i_6];
            for (int32_t i_7 = 0; i_7 < Ry_22248 * Rx_22250; i_7++)
                mem_param_24202[i_7] = mem_param_tmp_25542[i_7];
            for (int32_t i_8 = 0; i_8 < Ry_22248 * Rx_22250; i_8++)
                mem_param_out_25266[i_8] = mem_param_out_tmp_25543[i_8];
        }
        for (int32_t i_9 = 0; i_9 < Ry_22248 * Rx_22250; i_9++)
            ext_mem_24231[i_9] = mem_param_24202[i_9];
        for (int32_t i_10 = 0; i_10 < Ry_22248 * Rx_22250; i_10++)
            ext_mem_unused_25265[i_10] = mem_param_out_25266[i_10];
        
        double mem_param_tmp_25531[Ry_22248 * Rx_22250];
        
        for (int32_t i_11 = 0; i_11 < Ry_22248 * Rx_22250; i_11++)
            mem_param_tmp_25531[i_11] = ext_mem_24231[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_22248 * Rx_22250; i_12++)
            mem_param_24145[i_12] = mem_param_tmp_25531[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_22248 * Rx_22250; i_13++)
        ext_mem_24234[i_13] = mem_param_24145[i_13];
    for (int64_t i_22525 = 0; i_22525 < tk_div_tx_22252; i_22525++) {
        int64_t binop_y_22552 = Tx_22249 * i_22525;
        
        for (int64_t i_22527 = 0; i_22527 < Rx_22250; i_22527++) {
            int64_t binop_y_22554 = Tx_22249 * i_22527;
            int64_t ltid_y_22550 = sext_i32_i64(sext_i64_i32(ltid_pre_25514));
            int64_t ltid_x_22551 = sext_i32_i64(sext_i64_i32(ltid_pre_25515));
            int32_t ltid_flat_22549 = local_tid_25504;
            int64_t k_22553 = ltid_y_22550 + binop_y_22552;
            int64_t i_22555 = ltid_x_22551 + binop_y_22554;
            int64_t gtid_22556 = iii_22274 + i_22555;
            int64_t x_seqdim_idx_22557 = kk_22524 + k_22553;
            bool binop_x_22558 = slt64(gtid_22556, n_16334);
            bool binop_y_22559 = slt64(x_seqdim_idx_22557, d_16332);
            bool cond_22560 = binop_x_22558 && binop_y_22559;
            double x_elem_22561;
            
            if (cond_22560) {
                double A_elem_22563;
                
                A_elem_22563 = ((__global double *) mem_24035)[gtid_17653 *
                                                               (n_16334 *
                                                                d_16332) +
                                                               x_seqdim_idx_22557 *
                                                               n_16334 +
                                                               gtid_22556];
                x_elem_22561 = A_elem_22563;
            } else {
                x_elem_22561 = 0.0;
            }
            
            bool cond_22565 = slt64(k_22553, Tk_22251);
            int64_t x_loc_ind_22566;
            
            if (cond_22565) {
                int64_t binop_y_22567 = (int64_t) 1 + TxRx_22254;
                int64_t binop_y_22568 = k_22553 * binop_y_22567;
                int64_t loc_fi_22569 = i_22555 + binop_y_22568;
                
                x_loc_ind_22566 = loc_fi_22569;
            } else {
                x_loc_ind_22566 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, x_loc_ind_22566) && slt64(x_loc_ind_22566,
                                                             a_loc_szz_22260)) {
                ((__local double *) color_25335)[x_loc_ind_22566] =
                    x_elem_22561;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_22574 = 0; i_22574 < tk_div_tx_22252; i_22574++) {
        int64_t binop_y_22601 = Tx_22249 * i_22574;
        
        for (int64_t i_22576 = 0; i_22576 < Rx_22250; i_22576++) {
            int64_t binop_y_22603 = Tx_22249 * i_22576;
            int64_t ltid_y_22599 = sext_i32_i64(sext_i64_i32(ltid_pre_25514));
            int64_t ltid_x_22600 = sext_i32_i64(sext_i64_i32(ltid_pre_25515));
            int32_t ltid_flat_22598 = local_tid_25504;
            int64_t k_22602 = ltid_y_22599 + binop_y_22601;
            int64_t i_22604 = ltid_x_22600 + binop_y_22603;
            int64_t gtid_22605 = jjj_22275 + i_22604;
            int64_t x_seqdim_idx_22606 = kk_22524 + k_22602;
            bool binop_x_22607 = slt64(gtid_22605, d_16332);
            bool binop_y_22608 = slt64(x_seqdim_idx_22606, d_16332);
            bool cond_22609 = binop_x_22607 && binop_y_22608;
            double x_elem_22610;
            
            if (cond_22609) {
                double A_elem_22612;
                
                A_elem_22612 = ((__global double *) mem_24026)[gtid_17653 *
                                                               (d_16332 *
                                                                d_16332) +
                                                               x_seqdim_idx_22606 *
                                                               d_16332 +
                                                               gtid_22605];
                x_elem_22610 = A_elem_22612;
            } else {
                x_elem_22610 = 0.0;
            }
            
            bool cond_22614 = slt64(k_22602, Tk_22251);
            int64_t x_loc_ind_22615;
            
            if (cond_22614) {
                int64_t binop_y_22616 = (int64_t) 1 + TxRx_22254;
                int64_t binop_y_22617 = k_22602 * binop_y_22616;
                int64_t loc_fi_22618 = i_22604 + binop_y_22617;
                
                x_loc_ind_22615 = loc_fi_22618;
            } else {
                x_loc_ind_22615 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, x_loc_ind_22615) && slt64(x_loc_ind_22615,
                                                             b_loc_szz_22265)) {
                ((__local double *) color_25334)[x_loc_ind_22615] =
                    x_elem_22610;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_25564 = 0; i_25564 < Ry_22248; i_25564++) {
        for (int64_t i_25565 = 0; i_25565 < Rx_22250; i_25565++) {
            double tmp_25566;
            
            tmp_25566 = ext_mem_24234[i_25564 * Rx_22250 + i_25565];
            color_25329[i_25564 * Rx_22250 + i_25565] = tmp_25566;
        }
    }
    
    double ext_mem_24315[Ry_22248 * Rx_22250];
    double ext_mem_unused_25273[Ry_22248 * Rx_22250];
    double mem_param_24285[Ry_22248 * Rx_22250];
    double mem_param_out_25274[Ry_22248 * Rx_22250];
    
    for (int32_t i_14 = 0; i_14 < Ry_22248 * Rx_22250; i_14++)
        mem_param_24285[i_14] = color_25329[i_14];
    for (int32_t i_15 = 0; i_15 < Ry_22248 * Rx_22250; i_15++)
        mem_param_out_25274[i_15] = color_25330[i_15];
    for (int64_t i_22623 = 0; i_22623 < Tk_22251; i_22623++) {
        int64_t cmpop_x_22625 = kk_22524 + i_22623;
        bool cond_22626 = slt64(cmpop_x_22625, d_16332);
        
        if (cond_22626) {
            int64_t binop_y_22661 = (int64_t) 1 + TxRx_22254;
            int64_t binop_y_22662 = i_22623 * binop_y_22661;
            int64_t bytes_24287 = (int64_t) 8 * Rx_22250;
            int64_t ltid_y_22653 = sext_i32_i64(sext_i64_i32(ltid_pre_25508));
            int64_t ltid_x_22652 = sext_i32_i64(sext_i64_i32(ltid_pre_25509));
            int32_t ltid_flat_22654 = local_tid_25504;
            double color_25325[Rx_22250];
            double color_25326[Rx_22250];
            int64_t binop_y_22659 = Rx_22250 * ltid_y_22653;
            
            for (int64_t i_22657 = 0; i_22657 < Rx_22250; i_22657++) {
                int64_t binop_x_22660 = i_22657 + binop_y_22659;
                int64_t x_loc_ind_22663 = binop_x_22660 + binop_y_22662;
                
                for (int64_t i_25571 = 0; i_25571 < (int64_t) 1; i_25571++) {
                    double tmp_25572;
                    
                    tmp_25572 = ((__local
                                  double *) color_25335)[x_loc_ind_22663 +
                                                         i_25571];
                    color_25326[i_22657 + i_25571] = tmp_25572;
                }
            }
            
            int64_t binop_y_22670 = Rx_22250 * ltid_x_22652;
            
            for (int64_t i_22668 = 0; i_22668 < Rx_22250; i_22668++) {
                int64_t binop_x_22671 = i_22668 + binop_y_22670;
                int64_t x_loc_ind_22674 = binop_y_22662 + binop_x_22671;
                
                for (int64_t i_25574 = 0; i_25574 < (int64_t) 1; i_25574++) {
                    double tmp_25575;
                    
                    tmp_25575 = ((__local
                                  double *) color_25334)[x_loc_ind_22674 +
                                                         i_25574];
                    color_25325[i_22668 + i_25574] = tmp_25575;
                }
            }
            for (int64_t i_25576 = 0; i_25576 < Rx_22250; i_25576++) {
                double tmp_25577;
                
                tmp_25577 = color_25326[i_25576];
                color_25333[i_25576] = tmp_25577;
            }
            for (int64_t i_25578 = 0; i_25578 < Rx_22250; i_25578++) {
                double tmp_25579;
                
                tmp_25579 = color_25325[i_25578];
                color_25332[i_25578] = tmp_25579;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_22713 = sext_i32_i64(sext_i64_i32(ltid_pre_25508));
            int64_t ltid_x_22712 = sext_i32_i64(sext_i64_i32(ltid_pre_25509));
            int32_t ltid_flat_22714 = local_tid_25504;
            int64_t binop_y_22725 = Ry_22248 * ltid_y_22713;
            int64_t binop_y_22729 = Rx_22250 * ltid_x_22712;
            
            for (int64_t i_22719 = 0; i_22719 < Ry_22248; i_22719++) {
                int64_t binop_x_22724 = iii_22274 + i_22719;
                int64_t cmpop_x_22726 = binop_x_22724 + binop_y_22725;
                bool binop_x_22727 = slt64(cmpop_x_22726, n_16334);
                
                for (int64_t i_22722 = 0; i_22722 < Rx_22250; i_22722++) {
                    int64_t binop_x_22728 = jjj_22275 + i_22722;
                    int64_t cmpop_x_22730 = binop_x_22728 + binop_y_22729;
                    bool binop_y_22731 = slt64(cmpop_x_22730, d_16332);
                    bool cond_22732 = binop_x_22727 && binop_y_22731;
                    
                    if (cond_22732) {
                        double a_22734;
                        
                        a_22734 = color_25333[i_22719];
                        
                        double b_22735;
                        
                        b_22735 = color_25332[i_22722];
                        
                        double c_22736;
                        
                        c_22736 = mem_param_24285[i_22719 * Rx_22250 + i_22722];
                        
                        double defunc_1_f_res_22739 = a_22734 * b_22735;
                        double defunc_1_op_res_22743 = c_22736 +
                               defunc_1_f_res_22739;
                        
                        mem_param_24285[i_22719 * Rx_22250 + i_22722] =
                            defunc_1_op_res_22743;
                    }
                }
            }
            for (int64_t i_25582 = 0; i_25582 < Ry_22248; i_25582++) {
                for (int64_t i_25583 = 0; i_25583 < Rx_22250; i_25583++) {
                    double tmp_25584;
                    
                    tmp_25584 = mem_param_24285[i_25582 * Rx_22250 + i_25583];
                    color_25331[i_25582 * Rx_22250 + i_25583] = tmp_25584;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_25585 = 0; i_25585 < Ry_22248; i_25585++) {
                for (int64_t i_25586 = 0; i_25586 < Rx_22250; i_25586++) {
                    double tmp_25587;
                    
                    tmp_25587 = color_25331[i_25585 * Rx_22250 + i_25586];
                    mem_param_out_25274[i_25585 * Rx_22250 + i_25586] =
                        tmp_25587;
                }
            }
        } else {
            for (int64_t i_25588 = 0; i_25588 < Ry_22248; i_25588++) {
                for (int64_t i_25589 = 0; i_25589 < Rx_22250; i_25589++) {
                    double tmp_25590;
                    
                    tmp_25590 = mem_param_24285[i_25588 * Rx_22250 + i_25589];
                    mem_param_out_25274[i_25588 * Rx_22250 + i_25589] =
                        tmp_25590;
                }
            }
        }
        
        double mem_param_tmp_25567[Ry_22248 * Rx_22250];
        
        for (int32_t i_16 = 0; i_16 < Ry_22248 * Rx_22250; i_16++)
            mem_param_tmp_25567[i_16] = mem_param_out_25274[i_16];
        
        double mem_param_out_tmp_25568[Ry_22248 * Rx_22250];
        
        for (int32_t i_17 = 0; i_17 < Ry_22248 * Rx_22250; i_17++)
            mem_param_out_tmp_25568[i_17] = mem_param_24285[i_17];
        for (int32_t i_18 = 0; i_18 < Ry_22248 * Rx_22250; i_18++)
            mem_param_24285[i_18] = mem_param_tmp_25567[i_18];
        for (int32_t i_19 = 0; i_19 < Ry_22248 * Rx_22250; i_19++)
            mem_param_out_25274[i_19] = mem_param_out_tmp_25568[i_19];
    }
    for (int32_t i_20 = 0; i_20 < Ry_22248 * Rx_22250; i_20++)
        ext_mem_24315[i_20] = mem_param_24285[i_20];
    for (int32_t i_21 = 0; i_21 < Ry_22248 * Rx_22250; i_21++)
        ext_mem_unused_25273[i_21] = mem_param_out_25274[i_21];
    
    int64_t slice_25594 = Tx_22249;
    int64_t slice_25595 = Ty_22247 * slice_25594;
    int64_t slice_25596 = slice_25595;
    int64_t reg_tile_i_25591 = squot64(sext_i32_i64(local_tid_25504),
                                       slice_25595);
    int64_t remnant_25597 = sext_i32_i64(local_tid_25504) - reg_tile_i_25591 *
            slice_25595;
    int64_t reg_tile_i_25592 = squot64(remnant_25597, slice_25594);
    int64_t remnant_25598 = remnant_25597 - reg_tile_i_25592 * slice_25594;
    int64_t reg_tile_i_25593 = remnant_25598;
    int64_t remnant_25599 = remnant_25598 - reg_tile_i_25593;
    int64_t tile_dim_start_25600 = gtid_17653 + reg_tile_i_25591;
    int64_t tile_dim_start_25601 = Ry_22248 * (Ty_22247 * gid_y_22271 +
                                               reg_tile_i_25592);
    int64_t tile_dim_start_25602 = Rx_22250 * (Tx_22249 * gid_x_22272 +
                                               reg_tile_i_25593);
    
    for (int64_t nest_i_25603 = 0; nest_i_25603 < (int64_t) 1; nest_i_25603++) {
        for (int64_t nest_i_25604 = 0; nest_i_25604 < Ry_22248;
             nest_i_25604++) {
            for (int64_t nest_i_25605 = 0; nest_i_25605 < Rx_22250;
                 nest_i_25605++) {
                if ((slt64(tile_dim_start_25600 + nest_i_25603, k_16331) &&
                     slt64(tile_dim_start_25601 + nest_i_25604, n_16334)) &&
                    slt64(tile_dim_start_25602 + nest_i_25605, d_16332)) {
                    double tmp_25606;
                    
                    tmp_25606 = ext_mem_24315[squot64(reg_tile_i_25591 *
                                                      (Rx_22250 * Ry_22248 *
                                                       Tx_22249 * Ty_22247) +
                                                      reg_tile_i_25592 *
                                                      (Rx_22250 * Ry_22248 *
                                                       Tx_22249) +
                                                      reg_tile_i_25593 *
                                                      (Rx_22250 * Ry_22248) +
                                                      nest_i_25603 * (Rx_22250 *
                                                                      Ry_22248) +
                                                      nest_i_25604 * Rx_22250 +
                                                      nest_i_25605 -
                                                      squot64(reg_tile_i_25591 *
                                                              (Rx_22250 *
                                                               Ry_22248 *
                                                               Tx_22249 *
                                                               Ty_22247) +
                                                              reg_tile_i_25592 *
                                                              (Rx_22250 *
                                                               Ry_22248 *
                                                               Tx_22249) +
                                                              reg_tile_i_25593 *
                                                              (Rx_22250 *
                                                               Ry_22248) +
                                                              nest_i_25603 *
                                                              (Rx_22250 *
                                                               Ry_22248) +
                                                              nest_i_25604 *
                                                              Rx_22250 +
                                                              nest_i_25605,
                                                              Tx_22249 *
                                                              Ry_22248 *
                                                              Rx_22250) *
                                                      (Tx_22249 * Ry_22248 *
                                                       Rx_22250) -
                                                      squot64(reg_tile_i_25591 *
                                                              (Rx_22250 *
                                                               Ry_22248 *
                                                               Tx_22249 *
                                                               Ty_22247) +
                                                              reg_tile_i_25592 *
                                                              (Rx_22250 *
                                                               Ry_22248 *
                                                               Tx_22249) +
                                                              reg_tile_i_25593 *
                                                              (Rx_22250 *
                                                               Ry_22248) +
                                                              nest_i_25603 *
                                                              (Rx_22250 *
                                                               Ry_22248) +
                                                              nest_i_25604 *
                                                              Rx_22250 +
                                                              nest_i_25605 -
                                                              squot64(reg_tile_i_25591 *
                                                                      (Rx_22250 *
                                                                       Ry_22248 *
                                                                       Tx_22249 *
                                                                       Ty_22247) +
                                                                      reg_tile_i_25592 *
                                                                      (Rx_22250 *
                                                                       Ry_22248 *
                                                                       Tx_22249) +
                                                                      reg_tile_i_25593 *
                                                                      (Rx_22250 *
                                                                       Ry_22248) +
                                                                      nest_i_25603 *
                                                                      (Rx_22250 *
                                                                       Ry_22248) +
                                                                      nest_i_25604 *
                                                                      Rx_22250 +
                                                                      nest_i_25605,
                                                                      Tx_22249 *
                                                                      Ry_22248 *
                                                                      Rx_22250) *
                                                              (Tx_22249 *
                                                               Ry_22248 *
                                                               Rx_22250),
                                                              Ry_22248 *
                                                              Rx_22250) *
                                                      (Ry_22248 * Rx_22250),
                                                      Rx_22250) * Rx_22250 +
                                              (reg_tile_i_25591 * (Rx_22250 *
                                                                   Ry_22248 *
                                                                   Tx_22249 *
                                                                   Ty_22247) +
                                               reg_tile_i_25592 * (Rx_22250 *
                                                                   Ry_22248 *
                                                                   Tx_22249) +
                                               reg_tile_i_25593 * (Rx_22250 *
                                                                   Ry_22248) +
                                               nest_i_25603 * (Rx_22250 *
                                                               Ry_22248) +
                                               nest_i_25604 * Rx_22250 +
                                               nest_i_25605 -
                                               squot64(reg_tile_i_25591 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249 * Ty_22247) +
                                                       reg_tile_i_25592 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249) +
                                                       reg_tile_i_25593 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25603 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25604 * Rx_22250 +
                                                       nest_i_25605, Tx_22249 *
                                                       Ry_22248 * Rx_22250) *
                                               (Tx_22249 * Ry_22248 *
                                                Rx_22250) -
                                               squot64(reg_tile_i_25591 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249 * Ty_22247) +
                                                       reg_tile_i_25592 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249) +
                                                       reg_tile_i_25593 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25603 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25604 * Rx_22250 +
                                                       nest_i_25605 -
                                                       squot64(reg_tile_i_25591 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249 *
                                                                Ty_22247) +
                                                               reg_tile_i_25592 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249) +
                                                               reg_tile_i_25593 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25603 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25604 *
                                                               Rx_22250 +
                                                               nest_i_25605,
                                                               Tx_22249 *
                                                               Ry_22248 *
                                                               Rx_22250) *
                                                       (Tx_22249 * Ry_22248 *
                                                        Rx_22250), Ry_22248 *
                                                       Rx_22250) * (Ry_22248 *
                                                                    Rx_22250) -
                                               squot64(reg_tile_i_25591 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249 * Ty_22247) +
                                                       reg_tile_i_25592 *
                                                       (Rx_22250 * Ry_22248 *
                                                        Tx_22249) +
                                                       reg_tile_i_25593 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25603 *
                                                       (Rx_22250 * Ry_22248) +
                                                       nest_i_25604 * Rx_22250 +
                                                       nest_i_25605 -
                                                       squot64(reg_tile_i_25591 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249 *
                                                                Ty_22247) +
                                                               reg_tile_i_25592 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249) +
                                                               reg_tile_i_25593 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25603 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25604 *
                                                               Rx_22250 +
                                                               nest_i_25605,
                                                               Tx_22249 *
                                                               Ry_22248 *
                                                               Rx_22250) *
                                                       (Tx_22249 * Ry_22248 *
                                                        Rx_22250) -
                                                       squot64(reg_tile_i_25591 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249 *
                                                                Ty_22247) +
                                                               reg_tile_i_25592 *
                                                               (Rx_22250 *
                                                                Ry_22248 *
                                                                Tx_22249) +
                                                               reg_tile_i_25593 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25603 *
                                                               (Rx_22250 *
                                                                Ry_22248) +
                                                               nest_i_25604 *
                                                               Rx_22250 +
                                                               nest_i_25605 -
                                                               squot64(reg_tile_i_25591 *
                                                                       (Rx_22250 *
                                                                        Ry_22248 *
                                                                        Tx_22249 *
                                                                        Ty_22247) +
                                                                       reg_tile_i_25592 *
                                                                       (Rx_22250 *
                                                                        Ry_22248 *
                                                                        Tx_22249) +
                                                                       reg_tile_i_25593 *
                                                                       (Rx_22250 *
                                                                        Ry_22248) +
                                                                       nest_i_25603 *
                                                                       (Rx_22250 *
                                                                        Ry_22248) +
                                                                       nest_i_25604 *
                                                                       Rx_22250 +
                                                                       nest_i_25605,
                                                                       Tx_22249 *
                                                                       Ry_22248 *
                                                                       Rx_22250) *
                                                               (Tx_22249 *
                                                                Ry_22248 *
                                                                Rx_22250),
                                                               Ry_22248 *
                                                               Rx_22250) *
                                                       (Ry_22248 * Rx_22250),
                                                       Rx_22250) * Rx_22250)];
                    ((__global double *) mem_24320)[(tile_dim_start_25600 +
                                                     nest_i_25603) * (d_16332 *
                                                                      n_16334) +
                                                    (tile_dim_start_25601 +
                                                     nest_i_25604) * d_16332 +
                                                    (tile_dim_start_25602 +
                                                     nest_i_25605)] = tmp_25606;
                }
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_22247
    #undef Ry_22248
    #undef Tx_22249
    #undef Rx_22250
    #undef Tk_22251
    #undef tk_div_tx_22252
    #undef TxRx_22254
    #undef TyRy_22255
    #undef a_loc_szz_22260
    #undef b_loc_szz_22265
    #undef binop_y_22433
}
__kernel void calculate_objectivezisegred_large_17678(__global
                                                      int *global_failure,
                                                      uint sync_arr_mem_25654_backing_offset_0,
                                                      uint red_arr_mem_25652_backing_offset_1,
                                                      int64_t k_16331,
                                                      int64_t d_16332,
                                                      int64_t n_16334,
                                                      int64_t num_groups_17671,
                                                      int64_t groups_per_segment_25638,
                                                      int64_t elements_per_thread_25639,
                                                      int64_t virt_num_groups_25640,
                                                      int64_t threads_per_segment_25642,
                                                      __global
                                                      unsigned char *mem_24324,
                                                      __global
                                                      unsigned char *mem_24328,
                                                      __global
                                                      unsigned char *mem_24334,
                                                      __global
                                                      unsigned char *segred_tmp_mem_25643,
                                                      __global
                                                      unsigned char *calculate_objectivezicounter_mem_25645)
{
    #define segred_group_sizze_17670 (calculate_objectivezisegred_group_sizze_17523)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_25654_backing_1 =
                           &shared_mem[sync_arr_mem_25654_backing_offset_0];
    volatile unsigned char *red_arr_mem_25652_backing_0 =
                           &shared_mem[red_arr_mem_25652_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25647;
    int32_t local_tid_25648;
    int64_t group_sizze_25651;
    int32_t wave_sizze_25650;
    int32_t group_tid_25649;
    
    global_tid_25647 = get_global_id(0);
    local_tid_25648 = get_local_id(0);
    group_sizze_25651 = get_local_size(0);
    wave_sizze_25650 = LOCKSTEP_WIDTH;
    group_tid_25649 = get_group_id(0);
    
    int32_t phys_tid_17678 = global_tid_25647;
    __local unsigned char *red_arr_mem_25652;
    
    red_arr_mem_25652 = (__local unsigned char *) red_arr_mem_25652_backing_0;
    
    __local unsigned char *sync_arr_mem_25654;
    
    sync_arr_mem_25654 = (__local unsigned char *) sync_arr_mem_25654_backing_1;
    
    int32_t phys_group_id_25656;
    
    phys_group_id_25656 = get_group_id(0);
    for (int32_t i_25657 = 0; i_25657 <
         sdiv_up32(sext_i64_i32(virt_num_groups_25640) - phys_group_id_25656,
                   sext_i64_i32(num_groups_17671)); i_25657++) {
        int32_t virt_group_id_25658 = phys_group_id_25656 + i_25657 *
                sext_i64_i32(num_groups_17671);
        int32_t flat_segment_id_25659 = squot32(virt_group_id_25658,
                                                sext_i64_i32(groups_per_segment_25638));
        int64_t global_tid_25660 = srem64(sext_i32_i64(virt_group_id_25658) *
                                          segred_group_sizze_17670 +
                                          sext_i32_i64(local_tid_25648),
                                          segred_group_sizze_17670 *
                                          groups_per_segment_25638);
        int64_t slice_25661 = d_16332;
        int64_t slice_25662 = n_16334 * slice_25661;
        int64_t slice_25663 = k_16331 * slice_25662;
        int64_t gtid_17674 = squot64(sext_i32_i64(flat_segment_id_25659),
                                     slice_25662);
        int64_t remnant_25664 = sext_i32_i64(flat_segment_id_25659) -
                gtid_17674 * slice_25662;
        int64_t gtid_17675 = squot64(remnant_25664, slice_25661);
        int64_t remnant_25665 = remnant_25664 - gtid_17675 * slice_25661;
        int64_t gtid_17676 = remnant_25665;
        int64_t remnant_25666 = remnant_25665 - gtid_17676;
        int64_t gtid_17677;
        double x_acc_25667;
        int64_t chunk_sizze_25668 = smin64(elements_per_thread_25639,
                                           sdiv_up64(d_16332 - global_tid_25660,
                                                     threads_per_segment_25642));
        double x_17679;
        double x_17680;
        
        // neutral-initialise the accumulators
        {
            x_acc_25667 = 0.0;
        }
        for (int64_t i_25672 = 0; i_25672 < chunk_sizze_25668; i_25672++) {
            gtid_17677 = global_tid_25660 + threads_per_segment_25642 * i_25672;
            // apply map function
            {
                double x_17686;
                
                x_17686 = ((__global double *) mem_24324)[gtid_17675 *
                                                          (d_16332 * k_16331) +
                                                          gtid_17674 * d_16332 +
                                                          gtid_17677];
                
                double x_17687;
                
                x_17687 = ((__global double *) mem_24328)[gtid_17674 *
                                                          (d_16332 * d_16332) +
                                                          gtid_17676 * d_16332 +
                                                          gtid_17677];
                
                double defunc_1_f_res_17688 = x_17686 * x_17687;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_17679 = x_acc_25667;
                }
                // load new values
                {
                    x_17680 = defunc_1_f_res_17688;
                }
                // apply reduction operator
                {
                    double defunc_1_op_res_17681 = x_17679 + x_17680;
                    
                    // store in accumulator
                    {
                        x_acc_25667 = defunc_1_op_res_17681;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_17679 = x_acc_25667;
            ((__local
              double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648)] =
                x_17679;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_25673;
        int32_t skip_waves_25674 = 1;
        double x_25669;
        double x_25670;
        
        offset_25673 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_25648,
                      sext_i64_i32(segred_group_sizze_17670))) {
                x_25669 = ((__local
                            double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648 +
                                                         offset_25673)];
            }
        }
        offset_25673 = 1;
        while (slt32(offset_25673, wave_sizze_25650)) {
            if (slt32(local_tid_25648 + offset_25673,
                      sext_i64_i32(segred_group_sizze_17670)) &&
                ((local_tid_25648 - squot32(local_tid_25648, wave_sizze_25650) *
                  wave_sizze_25650) & (2 * offset_25673 - 1)) == 0) {
                // read array element
                {
                    x_25670 = ((volatile __local
                                double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648 +
                                                             offset_25673)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25671 = x_25669 + x_25670;
                    
                    x_25669 = defunc_1_op_res_25671;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648)] =
                        x_25669;
                }
            }
            offset_25673 *= 2;
        }
        while (slt32(skip_waves_25674,
                     squot32(sext_i64_i32(segred_group_sizze_17670) +
                             wave_sizze_25650 - 1, wave_sizze_25650))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_25673 = skip_waves_25674 * wave_sizze_25650;
            if (slt32(local_tid_25648 + offset_25673,
                      sext_i64_i32(segred_group_sizze_17670)) &&
                ((local_tid_25648 - squot32(local_tid_25648, wave_sizze_25650) *
                  wave_sizze_25650) == 0 && (squot32(local_tid_25648,
                                                     wave_sizze_25650) & (2 *
                                                                          skip_waves_25674 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_25670 = ((__local
                                double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648 +
                                                             offset_25673)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25671 = x_25669 + x_25670;
                    
                    x_25669 = defunc_1_op_res_25671;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648)] =
                        x_25669;
                }
            }
            skip_waves_25674 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_25648) == (int64_t) 0) {
                x_acc_25667 = x_25669;
            }
        }
        if (groups_per_segment_25638 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_25648 == 0) {
                    ((__global double *) mem_24334)[gtid_17674 * (d_16332 *
                                                                  n_16334) +
                                                    gtid_17675 * d_16332 +
                                                    gtid_17676] = x_acc_25667;
                }
            }
        } else {
            int32_t old_counter_25675;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_25648 == 0) {
                    ((__global
                      double *) segred_tmp_mem_25643)[sext_i32_i64(virt_group_id_25658)] =
                        x_acc_25667;
                    mem_fence_global();
                    old_counter_25675 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_25645)[sext_i32_i64(srem32(flat_segment_id_25659,
                                                                                                                    10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_25654)[(int64_t) 0] =
                        old_counter_25675 == groups_per_segment_25638 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_25676;
            
            is_last_group_25676 = ((__local
                                    bool *) sync_arr_mem_25654)[(int64_t) 0];
            if (is_last_group_25676) {
                if (local_tid_25648 == 0) {
                    old_counter_25675 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_25645)[sext_i32_i64(srem32(flat_segment_id_25659,
                                                                                                                    10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_25638));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_25677 =
                            sdiv_up64(groups_per_segment_25638,
                                      segred_group_sizze_17670);
                    
                    x_17679 = 0.0;
                    for (int64_t i_25678 = 0; i_25678 < read_per_thread_25677;
                         i_25678++) {
                        int64_t group_res_id_25679 =
                                sext_i32_i64(local_tid_25648) *
                                read_per_thread_25677 + i_25678;
                        int64_t index_of_group_res_25680 =
                                sext_i32_i64(flat_segment_id_25659) *
                                groups_per_segment_25638 + group_res_id_25679;
                        
                        if (slt64(group_res_id_25679,
                                  groups_per_segment_25638)) {
                            x_17680 = ((__global
                                        double *) segred_tmp_mem_25643)[index_of_group_res_25680];
                            
                            double defunc_1_op_res_17681 = x_17679 + x_17680;
                            
                            x_17679 = defunc_1_op_res_17681;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648)] =
                    x_17679;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_25681;
                    int32_t skip_waves_25682 = 1;
                    double x_25669;
                    double x_25670;
                    
                    offset_25681 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_25648,
                                  sext_i64_i32(segred_group_sizze_17670))) {
                            x_25669 = ((__local
                                        double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648 +
                                                                     offset_25681)];
                        }
                    }
                    offset_25681 = 1;
                    while (slt32(offset_25681, wave_sizze_25650)) {
                        if (slt32(local_tid_25648 + offset_25681,
                                  sext_i64_i32(segred_group_sizze_17670)) &&
                            ((local_tid_25648 - squot32(local_tid_25648,
                                                        wave_sizze_25650) *
                              wave_sizze_25650) & (2 * offset_25681 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_25670 = ((volatile __local
                                            double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648 +
                                                                         offset_25681)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25671 = x_25669 +
                                       x_25670;
                                
                                x_25669 = defunc_1_op_res_25671;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648)] =
                                    x_25669;
                            }
                        }
                        offset_25681 *= 2;
                    }
                    while (slt32(skip_waves_25682,
                                 squot32(sext_i64_i32(segred_group_sizze_17670) +
                                         wave_sizze_25650 - 1,
                                         wave_sizze_25650))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_25681 = skip_waves_25682 * wave_sizze_25650;
                        if (slt32(local_tid_25648 + offset_25681,
                                  sext_i64_i32(segred_group_sizze_17670)) &&
                            ((local_tid_25648 - squot32(local_tid_25648,
                                                        wave_sizze_25650) *
                              wave_sizze_25650) == 0 &&
                             (squot32(local_tid_25648, wave_sizze_25650) & (2 *
                                                                            skip_waves_25682 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_25670 = ((__local
                                            double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648 +
                                                                         offset_25681)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25671 = x_25669 +
                                       x_25670;
                                
                                x_25669 = defunc_1_op_res_25671;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_25652)[sext_i32_i64(local_tid_25648)] =
                                    x_25669;
                            }
                        }
                        skip_waves_25682 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_25648 == 0) {
                            ((__global double *) mem_24334)[gtid_17674 *
                                                            (d_16332 *
                                                             n_16334) +
                                                            gtid_17675 *
                                                            d_16332 +
                                                            gtid_17676] =
                                x_25669;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_17670
}
__kernel void calculate_objectivezisegred_large_17822(__global
                                                      int *global_failure,
                                                      uint sync_arr_mem_25759_backing_offset_0,
                                                      uint red_arr_mem_25757_backing_offset_1,
                                                      int64_t k_16331,
                                                      int64_t d_16332,
                                                      int64_t n_16334,
                                                      int64_t num_groups_17816,
                                                      int64_t groups_per_segment_25743,
                                                      int64_t elements_per_thread_25744,
                                                      int64_t virt_num_groups_25745,
                                                      int64_t threads_per_segment_25747,
                                                      __global
                                                      unsigned char *ext_mem_24349,
                                                      __global
                                                      unsigned char *mem_24386,
                                                      __global
                                                      unsigned char *segred_tmp_mem_25748,
                                                      __global
                                                      unsigned char *calculate_objectivezicounter_mem_25750)
{
    #define segred_group_sizze_17815 (calculate_objectivezisegred_group_sizze_17756)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_25759_backing_1 =
                           &shared_mem[sync_arr_mem_25759_backing_offset_0];
    volatile unsigned char *red_arr_mem_25757_backing_0 =
                           &shared_mem[red_arr_mem_25757_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25752;
    int32_t local_tid_25753;
    int64_t group_sizze_25756;
    int32_t wave_sizze_25755;
    int32_t group_tid_25754;
    
    global_tid_25752 = get_global_id(0);
    local_tid_25753 = get_local_id(0);
    group_sizze_25756 = get_local_size(0);
    wave_sizze_25755 = LOCKSTEP_WIDTH;
    group_tid_25754 = get_group_id(0);
    
    int32_t phys_tid_17822 = global_tid_25752;
    __local unsigned char *red_arr_mem_25757;
    
    red_arr_mem_25757 = (__local unsigned char *) red_arr_mem_25757_backing_0;
    
    __local unsigned char *sync_arr_mem_25759;
    
    sync_arr_mem_25759 = (__local unsigned char *) sync_arr_mem_25759_backing_1;
    
    int32_t phys_group_id_25761;
    
    phys_group_id_25761 = get_group_id(0);
    for (int32_t i_25762 = 0; i_25762 <
         sdiv_up32(sext_i64_i32(virt_num_groups_25745) - phys_group_id_25761,
                   sext_i64_i32(num_groups_17816)); i_25762++) {
        int32_t virt_group_id_25763 = phys_group_id_25761 + i_25762 *
                sext_i64_i32(num_groups_17816);
        int32_t flat_segment_id_25764 = squot32(virt_group_id_25763,
                                                sext_i64_i32(groups_per_segment_25743));
        int64_t global_tid_25765 = srem64(sext_i32_i64(virt_group_id_25763) *
                                          segred_group_sizze_17815 +
                                          sext_i32_i64(local_tid_25753),
                                          segred_group_sizze_17815 *
                                          groups_per_segment_25743);
        int64_t slice_25766 = n_16334;
        int64_t slice_25767 = k_16331 * slice_25766;
        int64_t gtid_17819 = squot64(sext_i32_i64(flat_segment_id_25764),
                                     slice_25766);
        int64_t remnant_25768 = sext_i32_i64(flat_segment_id_25764) -
                gtid_17819 * slice_25766;
        int64_t gtid_17820 = remnant_25768;
        int64_t remnant_25769 = remnant_25768 - gtid_17820;
        int64_t gtid_17821;
        double x_acc_25770;
        int64_t chunk_sizze_25771 = smin64(elements_per_thread_25744,
                                           sdiv_up64(d_16332 - global_tid_25765,
                                                     threads_per_segment_25747));
        double x_17823;
        double x_17824;
        
        // neutral-initialise the accumulators
        {
            x_acc_25770 = 0.0;
        }
        for (int64_t i_25775 = 0; i_25775 < chunk_sizze_25771; i_25775++) {
            gtid_17821 = global_tid_25765 + threads_per_segment_25747 * i_25775;
            // apply map function
            {
                double x_17828;
                
                x_17828 = ((__global double *) ext_mem_24349)[gtid_17819 *
                                                              (d_16332 *
                                                               n_16334) +
                                                              gtid_17820 *
                                                              d_16332 +
                                                              gtid_17821];
                
                double defunc_0_f_res_17829 = x_17828 * x_17828;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_17823 = x_acc_25770;
                }
                // load new values
                {
                    x_17824 = defunc_0_f_res_17829;
                }
                // apply reduction operator
                {
                    double defunc_1_op_res_17825 = x_17823 + x_17824;
                    
                    // store in accumulator
                    {
                        x_acc_25770 = defunc_1_op_res_17825;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_17823 = x_acc_25770;
            ((__local
              double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753)] =
                x_17823;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_25776;
        int32_t skip_waves_25777 = 1;
        double x_25772;
        double x_25773;
        
        offset_25776 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_25753,
                      sext_i64_i32(segred_group_sizze_17815))) {
                x_25772 = ((__local
                            double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753 +
                                                         offset_25776)];
            }
        }
        offset_25776 = 1;
        while (slt32(offset_25776, wave_sizze_25755)) {
            if (slt32(local_tid_25753 + offset_25776,
                      sext_i64_i32(segred_group_sizze_17815)) &&
                ((local_tid_25753 - squot32(local_tid_25753, wave_sizze_25755) *
                  wave_sizze_25755) & (2 * offset_25776 - 1)) == 0) {
                // read array element
                {
                    x_25773 = ((volatile __local
                                double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753 +
                                                             offset_25776)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25774 = x_25772 + x_25773;
                    
                    x_25772 = defunc_1_op_res_25774;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753)] =
                        x_25772;
                }
            }
            offset_25776 *= 2;
        }
        while (slt32(skip_waves_25777,
                     squot32(sext_i64_i32(segred_group_sizze_17815) +
                             wave_sizze_25755 - 1, wave_sizze_25755))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_25776 = skip_waves_25777 * wave_sizze_25755;
            if (slt32(local_tid_25753 + offset_25776,
                      sext_i64_i32(segred_group_sizze_17815)) &&
                ((local_tid_25753 - squot32(local_tid_25753, wave_sizze_25755) *
                  wave_sizze_25755) == 0 && (squot32(local_tid_25753,
                                                     wave_sizze_25755) & (2 *
                                                                          skip_waves_25777 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_25773 = ((__local
                                double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753 +
                                                             offset_25776)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25774 = x_25772 + x_25773;
                    
                    x_25772 = defunc_1_op_res_25774;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753)] =
                        x_25772;
                }
            }
            skip_waves_25777 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_25753) == (int64_t) 0) {
                x_acc_25770 = x_25772;
            }
        }
        if (groups_per_segment_25743 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_25753 == 0) {
                    ((__global double *) mem_24386)[gtid_17819 * n_16334 +
                                                    gtid_17820] = x_acc_25770;
                }
            }
        } else {
            int32_t old_counter_25778;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_25753 == 0) {
                    ((__global
                      double *) segred_tmp_mem_25748)[sext_i32_i64(virt_group_id_25763)] =
                        x_acc_25770;
                    mem_fence_global();
                    old_counter_25778 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_25750)[sext_i32_i64(srem32(flat_segment_id_25764,
                                                                                                                    10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_25759)[(int64_t) 0] =
                        old_counter_25778 == groups_per_segment_25743 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_25779;
            
            is_last_group_25779 = ((__local
                                    bool *) sync_arr_mem_25759)[(int64_t) 0];
            if (is_last_group_25779) {
                if (local_tid_25753 == 0) {
                    old_counter_25778 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_25750)[sext_i32_i64(srem32(flat_segment_id_25764,
                                                                                                                    10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_25743));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_25780 =
                            sdiv_up64(groups_per_segment_25743,
                                      segred_group_sizze_17815);
                    
                    x_17823 = 0.0;
                    for (int64_t i_25781 = 0; i_25781 < read_per_thread_25780;
                         i_25781++) {
                        int64_t group_res_id_25782 =
                                sext_i32_i64(local_tid_25753) *
                                read_per_thread_25780 + i_25781;
                        int64_t index_of_group_res_25783 =
                                sext_i32_i64(flat_segment_id_25764) *
                                groups_per_segment_25743 + group_res_id_25782;
                        
                        if (slt64(group_res_id_25782,
                                  groups_per_segment_25743)) {
                            x_17824 = ((__global
                                        double *) segred_tmp_mem_25748)[index_of_group_res_25783];
                            
                            double defunc_1_op_res_17825 = x_17823 + x_17824;
                            
                            x_17823 = defunc_1_op_res_17825;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753)] =
                    x_17823;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_25784;
                    int32_t skip_waves_25785 = 1;
                    double x_25772;
                    double x_25773;
                    
                    offset_25784 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_25753,
                                  sext_i64_i32(segred_group_sizze_17815))) {
                            x_25772 = ((__local
                                        double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753 +
                                                                     offset_25784)];
                        }
                    }
                    offset_25784 = 1;
                    while (slt32(offset_25784, wave_sizze_25755)) {
                        if (slt32(local_tid_25753 + offset_25784,
                                  sext_i64_i32(segred_group_sizze_17815)) &&
                            ((local_tid_25753 - squot32(local_tid_25753,
                                                        wave_sizze_25755) *
                              wave_sizze_25755) & (2 * offset_25784 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_25773 = ((volatile __local
                                            double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753 +
                                                                         offset_25784)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25774 = x_25772 +
                                       x_25773;
                                
                                x_25772 = defunc_1_op_res_25774;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753)] =
                                    x_25772;
                            }
                        }
                        offset_25784 *= 2;
                    }
                    while (slt32(skip_waves_25785,
                                 squot32(sext_i64_i32(segred_group_sizze_17815) +
                                         wave_sizze_25755 - 1,
                                         wave_sizze_25755))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_25784 = skip_waves_25785 * wave_sizze_25755;
                        if (slt32(local_tid_25753 + offset_25784,
                                  sext_i64_i32(segred_group_sizze_17815)) &&
                            ((local_tid_25753 - squot32(local_tid_25753,
                                                        wave_sizze_25755) *
                              wave_sizze_25755) == 0 &&
                             (squot32(local_tid_25753, wave_sizze_25755) & (2 *
                                                                            skip_waves_25785 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_25773 = ((__local
                                            double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753 +
                                                                         offset_25784)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25774 = x_25772 +
                                       x_25773;
                                
                                x_25772 = defunc_1_op_res_25774;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_25757)[sext_i32_i64(local_tid_25753)] =
                                    x_25772;
                            }
                        }
                        skip_waves_25785 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_25753 == 0) {
                            ((__global double *) mem_24386)[gtid_17819 *
                                                            n_16334 +
                                                            gtid_17820] =
                                x_25772;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_17815
}
__kernel void calculate_objectivezisegred_large_17886(__global
                                                      int *global_failure,
                                                      uint sync_arr_mem_25841_backing_offset_0,
                                                      uint red_arr_mem_25839_backing_offset_1,
                                                      int64_t k_16331,
                                                      int64_t d_16332,
                                                      int64_t dz2080U_16333,
                                                      int64_t num_groups_17881,
                                                      int64_t groups_per_segment_25825,
                                                      int64_t elements_per_thread_25826,
                                                      int64_t virt_num_groups_25827,
                                                      int64_t threads_per_segment_25829,
                                                      __global
                                                      unsigned char *icf_mem_24019,
                                                      __global
                                                      unsigned char *mem_24404,
                                                      __global
                                                      unsigned char *segred_tmp_mem_25830,
                                                      __global
                                                      unsigned char *calculate_objectivezicounter_mem_25832)
{
    #define segred_group_sizze_17880 (calculate_objectivezisegred_group_sizze_17863)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_25841_backing_1 =
                           &shared_mem[sync_arr_mem_25841_backing_offset_0];
    volatile unsigned char *red_arr_mem_25839_backing_0 =
                           &shared_mem[red_arr_mem_25839_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25834;
    int32_t local_tid_25835;
    int64_t group_sizze_25838;
    int32_t wave_sizze_25837;
    int32_t group_tid_25836;
    
    global_tid_25834 = get_global_id(0);
    local_tid_25835 = get_local_id(0);
    group_sizze_25838 = get_local_size(0);
    wave_sizze_25837 = LOCKSTEP_WIDTH;
    group_tid_25836 = get_group_id(0);
    
    int32_t phys_tid_17886 = global_tid_25834;
    __local unsigned char *red_arr_mem_25839;
    
    red_arr_mem_25839 = (__local unsigned char *) red_arr_mem_25839_backing_0;
    
    __local unsigned char *sync_arr_mem_25841;
    
    sync_arr_mem_25841 = (__local unsigned char *) sync_arr_mem_25841_backing_1;
    
    int32_t phys_group_id_25843;
    
    phys_group_id_25843 = get_group_id(0);
    for (int32_t i_25844 = 0; i_25844 <
         sdiv_up32(sext_i64_i32(virt_num_groups_25827) - phys_group_id_25843,
                   sext_i64_i32(num_groups_17881)); i_25844++) {
        int32_t virt_group_id_25845 = phys_group_id_25843 + i_25844 *
                sext_i64_i32(num_groups_17881);
        int32_t flat_segment_id_25846 = squot32(virt_group_id_25845,
                                                sext_i64_i32(groups_per_segment_25825));
        int64_t global_tid_25847 = srem64(sext_i32_i64(virt_group_id_25845) *
                                          segred_group_sizze_17880 +
                                          sext_i32_i64(local_tid_25835),
                                          segred_group_sizze_17880 *
                                          groups_per_segment_25825);
        int64_t slice_25848 = k_16331;
        int64_t gtid_17884 = sext_i32_i64(flat_segment_id_25846);
        int64_t remnant_25849 = sext_i32_i64(flat_segment_id_25846) -
                gtid_17884;
        int64_t gtid_17885;
        double x_acc_25850;
        int64_t chunk_sizze_25851 = smin64(elements_per_thread_25826,
                                           sdiv_up64(d_16332 - global_tid_25847,
                                                     threads_per_segment_25829));
        double x_17887;
        double x_17888;
        
        // neutral-initialise the accumulators
        {
            x_acc_25850 = 0.0;
        }
        for (int64_t i_25855 = 0; i_25855 < chunk_sizze_25851; i_25855++) {
            gtid_17885 = global_tid_25847 + threads_per_segment_25829 * i_25855;
            // apply map function
            {
                double x_17891;
                
                x_17891 = ((__global double *) icf_mem_24019)[gtid_17884 *
                                                              dz2080U_16333 +
                                                              gtid_17885];
                // save map-out results
                { }
                // load accumulator
                {
                    x_17887 = x_acc_25850;
                }
                // load new values
                {
                    x_17888 = x_17891;
                }
                // apply reduction operator
                {
                    double defunc_1_op_res_17889 = x_17887 + x_17888;
                    
                    // store in accumulator
                    {
                        x_acc_25850 = defunc_1_op_res_17889;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_17887 = x_acc_25850;
            ((__local
              double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835)] =
                x_17887;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_25856;
        int32_t skip_waves_25857 = 1;
        double x_25852;
        double x_25853;
        
        offset_25856 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_25835,
                      sext_i64_i32(segred_group_sizze_17880))) {
                x_25852 = ((__local
                            double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835 +
                                                         offset_25856)];
            }
        }
        offset_25856 = 1;
        while (slt32(offset_25856, wave_sizze_25837)) {
            if (slt32(local_tid_25835 + offset_25856,
                      sext_i64_i32(segred_group_sizze_17880)) &&
                ((local_tid_25835 - squot32(local_tid_25835, wave_sizze_25837) *
                  wave_sizze_25837) & (2 * offset_25856 - 1)) == 0) {
                // read array element
                {
                    x_25853 = ((volatile __local
                                double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835 +
                                                             offset_25856)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25854 = x_25852 + x_25853;
                    
                    x_25852 = defunc_1_op_res_25854;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835)] =
                        x_25852;
                }
            }
            offset_25856 *= 2;
        }
        while (slt32(skip_waves_25857,
                     squot32(sext_i64_i32(segred_group_sizze_17880) +
                             wave_sizze_25837 - 1, wave_sizze_25837))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_25856 = skip_waves_25857 * wave_sizze_25837;
            if (slt32(local_tid_25835 + offset_25856,
                      sext_i64_i32(segred_group_sizze_17880)) &&
                ((local_tid_25835 - squot32(local_tid_25835, wave_sizze_25837) *
                  wave_sizze_25837) == 0 && (squot32(local_tid_25835,
                                                     wave_sizze_25837) & (2 *
                                                                          skip_waves_25857 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_25853 = ((__local
                                double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835 +
                                                             offset_25856)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25854 = x_25852 + x_25853;
                    
                    x_25852 = defunc_1_op_res_25854;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835)] =
                        x_25852;
                }
            }
            skip_waves_25857 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_25835) == (int64_t) 0) {
                x_acc_25850 = x_25852;
            }
        }
        if (groups_per_segment_25825 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_25835 == 0) {
                    ((__global double *) mem_24404)[gtid_17884] = x_acc_25850;
                }
            }
        } else {
            int32_t old_counter_25858;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_25835 == 0) {
                    ((__global
                      double *) segred_tmp_mem_25830)[sext_i32_i64(virt_group_id_25845)] =
                        x_acc_25850;
                    mem_fence_global();
                    old_counter_25858 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_25832)[sext_i32_i64(srem32(flat_segment_id_25846,
                                                                                                                    10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_25841)[(int64_t) 0] =
                        old_counter_25858 == groups_per_segment_25825 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_25859;
            
            is_last_group_25859 = ((__local
                                    bool *) sync_arr_mem_25841)[(int64_t) 0];
            if (is_last_group_25859) {
                if (local_tid_25835 == 0) {
                    old_counter_25858 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_25832)[sext_i32_i64(srem32(flat_segment_id_25846,
                                                                                                                    10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_25825));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_25860 =
                            sdiv_up64(groups_per_segment_25825,
                                      segred_group_sizze_17880);
                    
                    x_17887 = 0.0;
                    for (int64_t i_25861 = 0; i_25861 < read_per_thread_25860;
                         i_25861++) {
                        int64_t group_res_id_25862 =
                                sext_i32_i64(local_tid_25835) *
                                read_per_thread_25860 + i_25861;
                        int64_t index_of_group_res_25863 =
                                sext_i32_i64(flat_segment_id_25846) *
                                groups_per_segment_25825 + group_res_id_25862;
                        
                        if (slt64(group_res_id_25862,
                                  groups_per_segment_25825)) {
                            x_17888 = ((__global
                                        double *) segred_tmp_mem_25830)[index_of_group_res_25863];
                            
                            double defunc_1_op_res_17889 = x_17887 + x_17888;
                            
                            x_17887 = defunc_1_op_res_17889;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835)] =
                    x_17887;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_25864;
                    int32_t skip_waves_25865 = 1;
                    double x_25852;
                    double x_25853;
                    
                    offset_25864 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_25835,
                                  sext_i64_i32(segred_group_sizze_17880))) {
                            x_25852 = ((__local
                                        double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835 +
                                                                     offset_25864)];
                        }
                    }
                    offset_25864 = 1;
                    while (slt32(offset_25864, wave_sizze_25837)) {
                        if (slt32(local_tid_25835 + offset_25864,
                                  sext_i64_i32(segred_group_sizze_17880)) &&
                            ((local_tid_25835 - squot32(local_tid_25835,
                                                        wave_sizze_25837) *
                              wave_sizze_25837) & (2 * offset_25864 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_25853 = ((volatile __local
                                            double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835 +
                                                                         offset_25864)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25854 = x_25852 +
                                       x_25853;
                                
                                x_25852 = defunc_1_op_res_25854;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835)] =
                                    x_25852;
                            }
                        }
                        offset_25864 *= 2;
                    }
                    while (slt32(skip_waves_25865,
                                 squot32(sext_i64_i32(segred_group_sizze_17880) +
                                         wave_sizze_25837 - 1,
                                         wave_sizze_25837))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_25864 = skip_waves_25865 * wave_sizze_25837;
                        if (slt32(local_tid_25835 + offset_25864,
                                  sext_i64_i32(segred_group_sizze_17880)) &&
                            ((local_tid_25835 - squot32(local_tid_25835,
                                                        wave_sizze_25837) *
                              wave_sizze_25837) == 0 &&
                             (squot32(local_tid_25835, wave_sizze_25837) & (2 *
                                                                            skip_waves_25865 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_25853 = ((__local
                                            double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835 +
                                                                         offset_25864)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25854 = x_25852 +
                                       x_25853;
                                
                                x_25852 = defunc_1_op_res_25854;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_25839)[sext_i32_i64(local_tid_25835)] =
                                    x_25852;
                            }
                        }
                        skip_waves_25865 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_25835 == 0) {
                            ((__global double *) mem_24404)[gtid_17884] =
                                x_25852;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_17880
}
__kernel void calculate_objectivezisegred_large_18257(__global
                                                      int *global_failure,
                                                      uint sync_arr_mem_25976_backing_offset_0,
                                                      uint red_arr_mem_25974_backing_offset_1,
                                                      int64_t k_16331,
                                                      int64_t n_16334,
                                                      int64_t num_groups_18251,
                                                      int64_t groups_per_segment_25960,
                                                      int64_t elements_per_thread_25961,
                                                      int64_t virt_num_groups_25962,
                                                      int64_t threads_per_segment_25964,
                                                      __global
                                                      unsigned char *alphas_mem_24017,
                                                      __global
                                                      unsigned char *ext_mem_24405,
                                                      __global
                                                      unsigned char *mem_24454,
                                                      __global
                                                      unsigned char *mem_24458,
                                                      __global
                                                      unsigned char *mem_24462,
                                                      __global
                                                      unsigned char *segred_tmp_mem_25965,
                                                      __global
                                                      unsigned char *calculate_objectivezicounter_mem_25967)
{
    #define segred_group_sizze_18250 (calculate_objectivezisegred_group_sizze_18092)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_25976_backing_1 =
                           &shared_mem[sync_arr_mem_25976_backing_offset_0];
    volatile unsigned char *red_arr_mem_25974_backing_0 =
                           &shared_mem[red_arr_mem_25974_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25969;
    int32_t local_tid_25970;
    int64_t group_sizze_25973;
    int32_t wave_sizze_25972;
    int32_t group_tid_25971;
    
    global_tid_25969 = get_global_id(0);
    local_tid_25970 = get_local_id(0);
    group_sizze_25973 = get_local_size(0);
    wave_sizze_25972 = LOCKSTEP_WIDTH;
    group_tid_25971 = get_group_id(0);
    
    int32_t phys_tid_18257 = global_tid_25969;
    __local unsigned char *red_arr_mem_25974;
    
    red_arr_mem_25974 = (__local unsigned char *) red_arr_mem_25974_backing_0;
    
    __local unsigned char *sync_arr_mem_25976;
    
    sync_arr_mem_25976 = (__local unsigned char *) sync_arr_mem_25976_backing_1;
    
    int32_t phys_group_id_25978;
    
    phys_group_id_25978 = get_group_id(0);
    for (int32_t i_25979 = 0; i_25979 <
         sdiv_up32(sext_i64_i32(virt_num_groups_25962) - phys_group_id_25978,
                   sext_i64_i32(num_groups_18251)); i_25979++) {
        int32_t virt_group_id_25980 = phys_group_id_25978 + i_25979 *
                sext_i64_i32(num_groups_18251);
        int32_t flat_segment_id_25981 = squot32(virt_group_id_25980,
                                                sext_i64_i32(groups_per_segment_25960));
        int64_t global_tid_25982 = srem64(sext_i32_i64(virt_group_id_25980) *
                                          segred_group_sizze_18250 +
                                          sext_i32_i64(local_tid_25970),
                                          segred_group_sizze_18250 *
                                          groups_per_segment_25960);
        int64_t slice_25983 = n_16334;
        int64_t gtid_18255 = sext_i32_i64(flat_segment_id_25981);
        int64_t remnant_25984 = sext_i32_i64(flat_segment_id_25981) -
                gtid_18255;
        int64_t gtid_18256;
        double x_acc_25985;
        int64_t chunk_sizze_25986 = smin64(elements_per_thread_25961,
                                           sdiv_up64(k_16331 - global_tid_25982,
                                                     threads_per_segment_25964));
        double x_18258;
        double x_18259;
        
        // neutral-initialise the accumulators
        {
            x_acc_25985 = -INFINITY;
        }
        for (int64_t i_25990 = 0; i_25990 < chunk_sizze_25986; i_25990++) {
            gtid_18256 = global_tid_25982 + threads_per_segment_25964 * i_25990;
            // apply map function
            {
                double x_18264;
                
                x_18264 = ((__global double *) mem_24454)[gtid_18255 * k_16331 +
                                                          gtid_18256];
                
                double x_wasfree_18265;
                
                x_wasfree_18265 = ((__global
                                    double *) alphas_mem_24017)[gtid_18256];
                
                double x_wasfree_18266;
                
                x_wasfree_18266 = ((__global
                                    double *) ext_mem_24405)[gtid_18256];
                
                double x_18267 = -0.5 * x_18264;
                double x_18268 = x_wasfree_18265 + x_18267;
                double defunc_0_f_res_18269 = x_wasfree_18266 + x_18268;
                
                // save map-out results
                {
                    ((__global double *) mem_24462)[gtid_18255 * k_16331 +
                                                    gtid_18256] =
                        defunc_0_f_res_18269;
                }
                // load accumulator
                {
                    x_18258 = x_acc_25985;
                }
                // load new values
                {
                    x_18259 = defunc_0_f_res_18269;
                }
                // apply reduction operator
                {
                    double defunc_1_op_res_18260 = fmax64(x_18258, x_18259);
                    
                    // store in accumulator
                    {
                        x_acc_25985 = defunc_1_op_res_18260;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_18258 = x_acc_25985;
            ((__local
              double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970)] =
                x_18258;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_25991;
        int32_t skip_waves_25992 = 1;
        double x_25987;
        double x_25988;
        
        offset_25991 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_25970,
                      sext_i64_i32(segred_group_sizze_18250))) {
                x_25987 = ((__local
                            double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970 +
                                                         offset_25991)];
            }
        }
        offset_25991 = 1;
        while (slt32(offset_25991, wave_sizze_25972)) {
            if (slt32(local_tid_25970 + offset_25991,
                      sext_i64_i32(segred_group_sizze_18250)) &&
                ((local_tid_25970 - squot32(local_tid_25970, wave_sizze_25972) *
                  wave_sizze_25972) & (2 * offset_25991 - 1)) == 0) {
                // read array element
                {
                    x_25988 = ((volatile __local
                                double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970 +
                                                             offset_25991)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25989 = fmax64(x_25987, x_25988);
                    
                    x_25987 = defunc_1_op_res_25989;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970)] =
                        x_25987;
                }
            }
            offset_25991 *= 2;
        }
        while (slt32(skip_waves_25992,
                     squot32(sext_i64_i32(segred_group_sizze_18250) +
                             wave_sizze_25972 - 1, wave_sizze_25972))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_25991 = skip_waves_25992 * wave_sizze_25972;
            if (slt32(local_tid_25970 + offset_25991,
                      sext_i64_i32(segred_group_sizze_18250)) &&
                ((local_tid_25970 - squot32(local_tid_25970, wave_sizze_25972) *
                  wave_sizze_25972) == 0 && (squot32(local_tid_25970,
                                                     wave_sizze_25972) & (2 *
                                                                          skip_waves_25992 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_25988 = ((__local
                                double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970 +
                                                             offset_25991)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_25989 = fmax64(x_25987, x_25988);
                    
                    x_25987 = defunc_1_op_res_25989;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970)] =
                        x_25987;
                }
            }
            skip_waves_25992 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_25970) == (int64_t) 0) {
                x_acc_25985 = x_25987;
            }
        }
        if (groups_per_segment_25960 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_25970 == 0) {
                    ((__global double *) mem_24458)[gtid_18255] = x_acc_25985;
                }
            }
        } else {
            int32_t old_counter_25993;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_25970 == 0) {
                    ((__global
                      double *) segred_tmp_mem_25965)[sext_i32_i64(virt_group_id_25980)] =
                        x_acc_25985;
                    mem_fence_global();
                    old_counter_25993 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_25967)[sext_i32_i64(srem32(flat_segment_id_25981,
                                                                                                                    10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_25976)[(int64_t) 0] =
                        old_counter_25993 == groups_per_segment_25960 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_25994;
            
            is_last_group_25994 = ((__local
                                    bool *) sync_arr_mem_25976)[(int64_t) 0];
            if (is_last_group_25994) {
                if (local_tid_25970 == 0) {
                    old_counter_25993 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_25967)[sext_i32_i64(srem32(flat_segment_id_25981,
                                                                                                                    10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_25960));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_25995 =
                            sdiv_up64(groups_per_segment_25960,
                                      segred_group_sizze_18250);
                    
                    x_18258 = -INFINITY;
                    for (int64_t i_25996 = 0; i_25996 < read_per_thread_25995;
                         i_25996++) {
                        int64_t group_res_id_25997 =
                                sext_i32_i64(local_tid_25970) *
                                read_per_thread_25995 + i_25996;
                        int64_t index_of_group_res_25998 =
                                sext_i32_i64(flat_segment_id_25981) *
                                groups_per_segment_25960 + group_res_id_25997;
                        
                        if (slt64(group_res_id_25997,
                                  groups_per_segment_25960)) {
                            x_18259 = ((__global
                                        double *) segred_tmp_mem_25965)[index_of_group_res_25998];
                            
                            double defunc_1_op_res_18260 = fmax64(x_18258,
                                                                  x_18259);
                            
                            x_18258 = defunc_1_op_res_18260;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970)] =
                    x_18258;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_25999;
                    int32_t skip_waves_26000 = 1;
                    double x_25987;
                    double x_25988;
                    
                    offset_25999 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_25970,
                                  sext_i64_i32(segred_group_sizze_18250))) {
                            x_25987 = ((__local
                                        double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970 +
                                                                     offset_25999)];
                        }
                    }
                    offset_25999 = 1;
                    while (slt32(offset_25999, wave_sizze_25972)) {
                        if (slt32(local_tid_25970 + offset_25999,
                                  sext_i64_i32(segred_group_sizze_18250)) &&
                            ((local_tid_25970 - squot32(local_tid_25970,
                                                        wave_sizze_25972) *
                              wave_sizze_25972) & (2 * offset_25999 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_25988 = ((volatile __local
                                            double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970 +
                                                                         offset_25999)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25989 = fmax64(x_25987,
                                                                      x_25988);
                                
                                x_25987 = defunc_1_op_res_25989;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970)] =
                                    x_25987;
                            }
                        }
                        offset_25999 *= 2;
                    }
                    while (slt32(skip_waves_26000,
                                 squot32(sext_i64_i32(segred_group_sizze_18250) +
                                         wave_sizze_25972 - 1,
                                         wave_sizze_25972))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_25999 = skip_waves_26000 * wave_sizze_25972;
                        if (slt32(local_tid_25970 + offset_25999,
                                  sext_i64_i32(segred_group_sizze_18250)) &&
                            ((local_tid_25970 - squot32(local_tid_25970,
                                                        wave_sizze_25972) *
                              wave_sizze_25972) == 0 &&
                             (squot32(local_tid_25970, wave_sizze_25972) & (2 *
                                                                            skip_waves_26000 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_25988 = ((__local
                                            double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970 +
                                                                         offset_25999)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_25989 = fmax64(x_25987,
                                                                      x_25988);
                                
                                x_25987 = defunc_1_op_res_25989;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_25974)[sext_i32_i64(local_tid_25970)] =
                                    x_25987;
                            }
                        }
                        skip_waves_26000 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_25970 == 0) {
                            ((__global double *) mem_24458)[gtid_18255] =
                                x_25987;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_18250
}
__kernel void calculate_objectivezisegred_large_18278(__global
                                                      int *global_failure,
                                                      uint sync_arr_mem_26044_backing_offset_0,
                                                      uint red_arr_mem_26042_backing_offset_1,
                                                      int64_t k_16331,
                                                      int64_t n_16334,
                                                      int64_t num_groups_18273,
                                                      int64_t groups_per_segment_26028,
                                                      int64_t elements_per_thread_26029,
                                                      int64_t virt_num_groups_26030,
                                                      int64_t threads_per_segment_26032,
                                                      __global
                                                      unsigned char *mem_24458,
                                                      __global
                                                      unsigned char *mem_24462,
                                                      __global
                                                      unsigned char *mem_24466,
                                                      __global
                                                      unsigned char *segred_tmp_mem_26033,
                                                      __global
                                                      unsigned char *calculate_objectivezicounter_mem_26035)
{
    #define segred_group_sizze_18272 (calculate_objectivezisegred_group_sizze_18071)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_26044_backing_1 =
                           &shared_mem[sync_arr_mem_26044_backing_offset_0];
    volatile unsigned char *red_arr_mem_26042_backing_0 =
                           &shared_mem[red_arr_mem_26042_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26037;
    int32_t local_tid_26038;
    int64_t group_sizze_26041;
    int32_t wave_sizze_26040;
    int32_t group_tid_26039;
    
    global_tid_26037 = get_global_id(0);
    local_tid_26038 = get_local_id(0);
    group_sizze_26041 = get_local_size(0);
    wave_sizze_26040 = LOCKSTEP_WIDTH;
    group_tid_26039 = get_group_id(0);
    
    int32_t phys_tid_18278 = global_tid_26037;
    __local unsigned char *red_arr_mem_26042;
    
    red_arr_mem_26042 = (__local unsigned char *) red_arr_mem_26042_backing_0;
    
    __local unsigned char *sync_arr_mem_26044;
    
    sync_arr_mem_26044 = (__local unsigned char *) sync_arr_mem_26044_backing_1;
    
    int32_t phys_group_id_26046;
    
    phys_group_id_26046 = get_group_id(0);
    for (int32_t i_26047 = 0; i_26047 <
         sdiv_up32(sext_i64_i32(virt_num_groups_26030) - phys_group_id_26046,
                   sext_i64_i32(num_groups_18273)); i_26047++) {
        int32_t virt_group_id_26048 = phys_group_id_26046 + i_26047 *
                sext_i64_i32(num_groups_18273);
        int32_t flat_segment_id_26049 = squot32(virt_group_id_26048,
                                                sext_i64_i32(groups_per_segment_26028));
        int64_t global_tid_26050 = srem64(sext_i32_i64(virt_group_id_26048) *
                                          segred_group_sizze_18272 +
                                          sext_i32_i64(local_tid_26038),
                                          segred_group_sizze_18272 *
                                          groups_per_segment_26028);
        int64_t slice_26051 = n_16334;
        int64_t gtid_18276 = sext_i32_i64(flat_segment_id_26049);
        int64_t remnant_26052 = sext_i32_i64(flat_segment_id_26049) -
                gtid_18276;
        int64_t gtid_18277;
        double x_acc_26053;
        int64_t chunk_sizze_26054 = smin64(elements_per_thread_26029,
                                           sdiv_up64(k_16331 - global_tid_26050,
                                                     threads_per_segment_26032));
        double x_18279;
        double x_18280;
        
        // neutral-initialise the accumulators
        {
            x_acc_26053 = 0.0;
        }
        for (int64_t i_26058 = 0; i_26058 < chunk_sizze_26054; i_26058++) {
            gtid_18277 = global_tid_26050 + threads_per_segment_26032 * i_26058;
            // apply map function
            {
                double defunc_2_reduce_res_18282;
                
                defunc_2_reduce_res_18282 = ((__global
                                              double *) mem_24458)[gtid_18276];
                
                double x_18284;
                
                x_18284 = ((__global double *) mem_24462)[gtid_18276 * k_16331 +
                                                          gtid_18277];
                
                double exp_arg_18285 = x_18284 - defunc_2_reduce_res_18282;
                double exp_res_18286;
                
                exp_res_18286 = futrts_exp64(exp_arg_18285);
                // save map-out results
                { }
                // load accumulator
                {
                    x_18279 = x_acc_26053;
                }
                // load new values
                {
                    x_18280 = exp_res_18286;
                }
                // apply reduction operator
                {
                    double defunc_1_op_res_18281 = x_18279 + x_18280;
                    
                    // store in accumulator
                    {
                        x_acc_26053 = defunc_1_op_res_18281;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_18279 = x_acc_26053;
            ((__local
              double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038)] =
                x_18279;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_26059;
        int32_t skip_waves_26060 = 1;
        double x_26055;
        double x_26056;
        
        offset_26059 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_26038,
                      sext_i64_i32(segred_group_sizze_18272))) {
                x_26055 = ((__local
                            double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038 +
                                                         offset_26059)];
            }
        }
        offset_26059 = 1;
        while (slt32(offset_26059, wave_sizze_26040)) {
            if (slt32(local_tid_26038 + offset_26059,
                      sext_i64_i32(segred_group_sizze_18272)) &&
                ((local_tid_26038 - squot32(local_tid_26038, wave_sizze_26040) *
                  wave_sizze_26040) & (2 * offset_26059 - 1)) == 0) {
                // read array element
                {
                    x_26056 = ((volatile __local
                                double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038 +
                                                             offset_26059)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_26057 = x_26055 + x_26056;
                    
                    x_26055 = defunc_1_op_res_26057;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038)] =
                        x_26055;
                }
            }
            offset_26059 *= 2;
        }
        while (slt32(skip_waves_26060,
                     squot32(sext_i64_i32(segred_group_sizze_18272) +
                             wave_sizze_26040 - 1, wave_sizze_26040))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_26059 = skip_waves_26060 * wave_sizze_26040;
            if (slt32(local_tid_26038 + offset_26059,
                      sext_i64_i32(segred_group_sizze_18272)) &&
                ((local_tid_26038 - squot32(local_tid_26038, wave_sizze_26040) *
                  wave_sizze_26040) == 0 && (squot32(local_tid_26038,
                                                     wave_sizze_26040) & (2 *
                                                                          skip_waves_26060 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_26056 = ((__local
                                double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038 +
                                                             offset_26059)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_26057 = x_26055 + x_26056;
                    
                    x_26055 = defunc_1_op_res_26057;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038)] =
                        x_26055;
                }
            }
            skip_waves_26060 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_26038) == (int64_t) 0) {
                x_acc_26053 = x_26055;
            }
        }
        if (groups_per_segment_26028 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_26038 == 0) {
                    ((__global double *) mem_24466)[gtid_18276] = x_acc_26053;
                }
            }
        } else {
            int32_t old_counter_26061;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_26038 == 0) {
                    ((__global
                      double *) segred_tmp_mem_26033)[sext_i32_i64(virt_group_id_26048)] =
                        x_acc_26053;
                    mem_fence_global();
                    old_counter_26061 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_26035)[sext_i32_i64(srem32(flat_segment_id_26049,
                                                                                                                    10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_26044)[(int64_t) 0] =
                        old_counter_26061 == groups_per_segment_26028 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_26062;
            
            is_last_group_26062 = ((__local
                                    bool *) sync_arr_mem_26044)[(int64_t) 0];
            if (is_last_group_26062) {
                if (local_tid_26038 == 0) {
                    old_counter_26061 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_26035)[sext_i32_i64(srem32(flat_segment_id_26049,
                                                                                                                    10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_26028));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_26063 =
                            sdiv_up64(groups_per_segment_26028,
                                      segred_group_sizze_18272);
                    
                    x_18279 = 0.0;
                    for (int64_t i_26064 = 0; i_26064 < read_per_thread_26063;
                         i_26064++) {
                        int64_t group_res_id_26065 =
                                sext_i32_i64(local_tid_26038) *
                                read_per_thread_26063 + i_26064;
                        int64_t index_of_group_res_26066 =
                                sext_i32_i64(flat_segment_id_26049) *
                                groups_per_segment_26028 + group_res_id_26065;
                        
                        if (slt64(group_res_id_26065,
                                  groups_per_segment_26028)) {
                            x_18280 = ((__global
                                        double *) segred_tmp_mem_26033)[index_of_group_res_26066];
                            
                            double defunc_1_op_res_18281 = x_18279 + x_18280;
                            
                            x_18279 = defunc_1_op_res_18281;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038)] =
                    x_18279;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_26067;
                    int32_t skip_waves_26068 = 1;
                    double x_26055;
                    double x_26056;
                    
                    offset_26067 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_26038,
                                  sext_i64_i32(segred_group_sizze_18272))) {
                            x_26055 = ((__local
                                        double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038 +
                                                                     offset_26067)];
                        }
                    }
                    offset_26067 = 1;
                    while (slt32(offset_26067, wave_sizze_26040)) {
                        if (slt32(local_tid_26038 + offset_26067,
                                  sext_i64_i32(segred_group_sizze_18272)) &&
                            ((local_tid_26038 - squot32(local_tid_26038,
                                                        wave_sizze_26040) *
                              wave_sizze_26040) & (2 * offset_26067 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_26056 = ((volatile __local
                                            double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038 +
                                                                         offset_26067)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_26057 = x_26055 +
                                       x_26056;
                                
                                x_26055 = defunc_1_op_res_26057;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038)] =
                                    x_26055;
                            }
                        }
                        offset_26067 *= 2;
                    }
                    while (slt32(skip_waves_26068,
                                 squot32(sext_i64_i32(segred_group_sizze_18272) +
                                         wave_sizze_26040 - 1,
                                         wave_sizze_26040))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_26067 = skip_waves_26068 * wave_sizze_26040;
                        if (slt32(local_tid_26038 + offset_26067,
                                  sext_i64_i32(segred_group_sizze_18272)) &&
                            ((local_tid_26038 - squot32(local_tid_26038,
                                                        wave_sizze_26040) *
                              wave_sizze_26040) == 0 &&
                             (squot32(local_tid_26038, wave_sizze_26040) & (2 *
                                                                            skip_waves_26068 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_26056 = ((__local
                                            double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038 +
                                                                         offset_26067)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_26057 = x_26055 +
                                       x_26056;
                                
                                x_26055 = defunc_1_op_res_26057;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_26042)[sext_i32_i64(local_tid_26038)] =
                                    x_26055;
                            }
                        }
                        skip_waves_26068 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_26038 == 0) {
                            ((__global double *) mem_24466)[gtid_18276] =
                                x_26055;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_18272
}
__kernel void calculate_objectivezisegred_large_18482(__global
                                                      int *global_failure,
                                                      uint sync_arr_mem_26266_backing_offset_0,
                                                      uint red_arr_mem_26264_backing_offset_1,
                                                      int64_t k_16331,
                                                      int64_t d_16332,
                                                      int64_t y_17168,
                                                      int64_t num_groups_18477,
                                                      int64_t groups_per_segment_26250,
                                                      int64_t elements_per_thread_26251,
                                                      int64_t virt_num_groups_26252,
                                                      int64_t threads_per_segment_26254,
                                                      __global
                                                      unsigned char *mem_24026,
                                                      __global
                                                      unsigned char *mem_24502,
                                                      __global
                                                      unsigned char *segred_tmp_mem_26255,
                                                      __global
                                                      unsigned char *calculate_objectivezicounter_mem_26257)
{
    #define segred_group_sizze_18476 (calculate_objectivezisegred_group_sizze_18411)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *sync_arr_mem_26266_backing_1 =
                           &shared_mem[sync_arr_mem_26266_backing_offset_0];
    volatile unsigned char *red_arr_mem_26264_backing_0 =
                           &shared_mem[red_arr_mem_26264_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26259;
    int32_t local_tid_26260;
    int64_t group_sizze_26263;
    int32_t wave_sizze_26262;
    int32_t group_tid_26261;
    
    global_tid_26259 = get_global_id(0);
    local_tid_26260 = get_local_id(0);
    group_sizze_26263 = get_local_size(0);
    wave_sizze_26262 = LOCKSTEP_WIDTH;
    group_tid_26261 = get_group_id(0);
    
    int32_t phys_tid_18482 = global_tid_26259;
    __local unsigned char *red_arr_mem_26264;
    
    red_arr_mem_26264 = (__local unsigned char *) red_arr_mem_26264_backing_0;
    
    __local unsigned char *sync_arr_mem_26266;
    
    sync_arr_mem_26266 = (__local unsigned char *) sync_arr_mem_26266_backing_1;
    
    int32_t phys_group_id_26268;
    
    phys_group_id_26268 = get_group_id(0);
    for (int32_t i_26269 = 0; i_26269 <
         sdiv_up32(sext_i64_i32(virt_num_groups_26252) - phys_group_id_26268,
                   sext_i64_i32(num_groups_18477)); i_26269++) {
        int32_t virt_group_id_26270 = phys_group_id_26268 + i_26269 *
                sext_i64_i32(num_groups_18477);
        int32_t flat_segment_id_26271 = squot32(virt_group_id_26270,
                                                sext_i64_i32(groups_per_segment_26250));
        int64_t global_tid_26272 = srem64(sext_i32_i64(virt_group_id_26270) *
                                          segred_group_sizze_18476 +
                                          sext_i32_i64(local_tid_26260),
                                          segred_group_sizze_18476 *
                                          groups_per_segment_26250);
        int64_t slice_26273 = k_16331;
        int64_t gtid_18480 = sext_i32_i64(flat_segment_id_26271);
        int64_t remnant_26274 = sext_i32_i64(flat_segment_id_26271) -
                gtid_18480;
        int64_t gtid_18481;
        double x_acc_26275;
        int64_t chunk_sizze_26276 = smin64(elements_per_thread_26251,
                                           sdiv_up64(y_17168 - global_tid_26272,
                                                     threads_per_segment_26254));
        double x_18483;
        double x_18484;
        
        // neutral-initialise the accumulators
        {
            x_acc_26275 = 0.0;
        }
        for (int64_t i_26280 = 0; i_26280 < chunk_sizze_26276; i_26280++) {
            gtid_18481 = global_tid_26272 + threads_per_segment_26254 * i_26280;
            // apply map function
            {
                int64_t binop_x_22077 = y_17168 * gtid_18480;
                int64_t binop_x_22078 = gtid_18481 + binop_x_22077;
                int64_t new_index_22080 = squot64(binop_x_22078, y_17168);
                int64_t binop_y_22088 = y_17168 * new_index_22080;
                int64_t binop_x_22089 = binop_x_22078 - binop_y_22088;
                int64_t new_index_22090 = squot64(binop_x_22089, d_16332);
                int64_t binop_y_22110 = d_16332 * new_index_22090;
                int64_t new_index_22111 = binop_x_22089 - binop_y_22110;
                double x_18487;
                
                x_18487 = ((__global double *) mem_24026)[new_index_22080 *
                                                          (d_16332 * d_16332) +
                                                          new_index_22090 *
                                                          d_16332 +
                                                          new_index_22111];
                
                double defunc_0_f_res_18488 = x_18487 * x_18487;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_18483 = x_acc_26275;
                }
                // load new values
                {
                    x_18484 = defunc_0_f_res_18488;
                }
                // apply reduction operator
                {
                    double defunc_1_op_res_18485 = x_18483 + x_18484;
                    
                    // store in accumulator
                    {
                        x_acc_26275 = defunc_1_op_res_18485;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_18483 = x_acc_26275;
            ((__local
              double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260)] =
                x_18483;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_26281;
        int32_t skip_waves_26282 = 1;
        double x_26277;
        double x_26278;
        
        offset_26281 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_26260,
                      sext_i64_i32(segred_group_sizze_18476))) {
                x_26277 = ((__local
                            double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260 +
                                                         offset_26281)];
            }
        }
        offset_26281 = 1;
        while (slt32(offset_26281, wave_sizze_26262)) {
            if (slt32(local_tid_26260 + offset_26281,
                      sext_i64_i32(segred_group_sizze_18476)) &&
                ((local_tid_26260 - squot32(local_tid_26260, wave_sizze_26262) *
                  wave_sizze_26262) & (2 * offset_26281 - 1)) == 0) {
                // read array element
                {
                    x_26278 = ((volatile __local
                                double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260 +
                                                             offset_26281)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_26279 = x_26277 + x_26278;
                    
                    x_26277 = defunc_1_op_res_26279;
                }
                // write result of operation
                {
                    ((volatile __local
                      double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260)] =
                        x_26277;
                }
            }
            offset_26281 *= 2;
        }
        while (slt32(skip_waves_26282,
                     squot32(sext_i64_i32(segred_group_sizze_18476) +
                             wave_sizze_26262 - 1, wave_sizze_26262))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_26281 = skip_waves_26282 * wave_sizze_26262;
            if (slt32(local_tid_26260 + offset_26281,
                      sext_i64_i32(segred_group_sizze_18476)) &&
                ((local_tid_26260 - squot32(local_tid_26260, wave_sizze_26262) *
                  wave_sizze_26262) == 0 && (squot32(local_tid_26260,
                                                     wave_sizze_26262) & (2 *
                                                                          skip_waves_26282 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_26278 = ((__local
                                double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260 +
                                                             offset_26281)];
                }
                // apply reduction operation
                {
                    double defunc_1_op_res_26279 = x_26277 + x_26278;
                    
                    x_26277 = defunc_1_op_res_26279;
                }
                // write result of operation
                {
                    ((__local
                      double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260)] =
                        x_26277;
                }
            }
            skip_waves_26282 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_26260) == (int64_t) 0) {
                x_acc_26275 = x_26277;
            }
        }
        if (groups_per_segment_26250 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_26260 == 0) {
                    ((__global double *) mem_24502)[gtid_18480] = x_acc_26275;
                }
            }
        } else {
            int32_t old_counter_26283;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_26260 == 0) {
                    ((__global
                      double *) segred_tmp_mem_26255)[sext_i32_i64(virt_group_id_26270)] =
                        x_acc_26275;
                    mem_fence_global();
                    old_counter_26283 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_26257)[sext_i32_i64(srem32(flat_segment_id_26271,
                                                                                                                    10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_26266)[(int64_t) 0] =
                        old_counter_26283 == groups_per_segment_26250 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_26284;
            
            is_last_group_26284 = ((__local
                                    bool *) sync_arr_mem_26266)[(int64_t) 0];
            if (is_last_group_26284) {
                if (local_tid_26260 == 0) {
                    old_counter_26283 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) calculate_objectivezicounter_mem_26257)[sext_i32_i64(srem32(flat_segment_id_26271,
                                                                                                                    10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_26250));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_26285 =
                            sdiv_up64(groups_per_segment_26250,
                                      segred_group_sizze_18476);
                    
                    x_18483 = 0.0;
                    for (int64_t i_26286 = 0; i_26286 < read_per_thread_26285;
                         i_26286++) {
                        int64_t group_res_id_26287 =
                                sext_i32_i64(local_tid_26260) *
                                read_per_thread_26285 + i_26286;
                        int64_t index_of_group_res_26288 =
                                sext_i32_i64(flat_segment_id_26271) *
                                groups_per_segment_26250 + group_res_id_26287;
                        
                        if (slt64(group_res_id_26287,
                                  groups_per_segment_26250)) {
                            x_18484 = ((__global
                                        double *) segred_tmp_mem_26255)[index_of_group_res_26288];
                            
                            double defunc_1_op_res_18485 = x_18483 + x_18484;
                            
                            x_18483 = defunc_1_op_res_18485;
                        }
                    }
                }
                ((__local
                  double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260)] =
                    x_18483;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_26289;
                    int32_t skip_waves_26290 = 1;
                    double x_26277;
                    double x_26278;
                    
                    offset_26289 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_26260,
                                  sext_i64_i32(segred_group_sizze_18476))) {
                            x_26277 = ((__local
                                        double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260 +
                                                                     offset_26289)];
                        }
                    }
                    offset_26289 = 1;
                    while (slt32(offset_26289, wave_sizze_26262)) {
                        if (slt32(local_tid_26260 + offset_26289,
                                  sext_i64_i32(segred_group_sizze_18476)) &&
                            ((local_tid_26260 - squot32(local_tid_26260,
                                                        wave_sizze_26262) *
                              wave_sizze_26262) & (2 * offset_26289 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_26278 = ((volatile __local
                                            double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260 +
                                                                         offset_26289)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_26279 = x_26277 +
                                       x_26278;
                                
                                x_26277 = defunc_1_op_res_26279;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260)] =
                                    x_26277;
                            }
                        }
                        offset_26289 *= 2;
                    }
                    while (slt32(skip_waves_26290,
                                 squot32(sext_i64_i32(segred_group_sizze_18476) +
                                         wave_sizze_26262 - 1,
                                         wave_sizze_26262))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_26289 = skip_waves_26290 * wave_sizze_26262;
                        if (slt32(local_tid_26260 + offset_26289,
                                  sext_i64_i32(segred_group_sizze_18476)) &&
                            ((local_tid_26260 - squot32(local_tid_26260,
                                                        wave_sizze_26262) *
                              wave_sizze_26262) == 0 &&
                             (squot32(local_tid_26260, wave_sizze_26262) & (2 *
                                                                            skip_waves_26290 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_26278 = ((__local
                                            double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260 +
                                                                         offset_26289)];
                            }
                            // apply reduction operation
                            {
                                double defunc_1_op_res_26279 = x_26277 +
                                       x_26278;
                                
                                x_26277 = defunc_1_op_res_26279;
                            }
                            // write result of operation
                            {
                                ((__local
                                  double *) red_arr_mem_26264)[sext_i32_i64(local_tid_26260)] =
                                    x_26277;
                            }
                        }
                        skip_waves_26290 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_26260 == 0) {
                            ((__global double *) mem_24502)[gtid_18480] =
                                x_26277;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_18476
}
__kernel void calculate_objectivezisegred_nonseg_17912(__global
                                                       int *global_failure,
                                                       uint red_arr_mem_25883_backing_offset_0,
                                                       uint sync_arr_mem_25881_backing_offset_1,
                                                       int64_t k_16331,
                                                       int64_t n_16334,
                                                       int64_t num_groups_17907,
                                                       int64_t num_threads_25368,
                                                       int64_t num_threads_25875,
                                                       __global
                                                       unsigned char *alphas_mem_24017,
                                                       __global
                                                       unsigned char *ext_mem_24393,
                                                       __global
                                                       unsigned char *ext_mem_24405,
                                                       __global
                                                       unsigned char *mem_24423,
                                                       __global
                                                       unsigned char *color_25337,
                                                       __global
                                                       unsigned char *calculate_objectivezicounter_mem_25871,
                                                       __global
                                                       unsigned char *segred_tmp_mem_25873)
{
    #define segred_group_sizze_17906 (calculate_objectivezisegred_group_sizze_17896)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_25883_backing_1 =
                           &shared_mem[red_arr_mem_25883_backing_offset_0];
    volatile unsigned char *sync_arr_mem_25881_backing_0 =
                           &shared_mem[sync_arr_mem_25881_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25876;
    int32_t local_tid_25877;
    int64_t group_sizze_25880;
    int32_t wave_sizze_25879;
    int32_t group_tid_25878;
    
    global_tid_25876 = get_global_id(0);
    local_tid_25877 = get_local_id(0);
    group_sizze_25880 = get_local_size(0);
    wave_sizze_25879 = LOCKSTEP_WIDTH;
    group_tid_25878 = get_group_id(0);
    
    int32_t phys_tid_17912 = global_tid_25876;
    __local unsigned char *sync_arr_mem_25881;
    
    sync_arr_mem_25881 = (__local unsigned char *) sync_arr_mem_25881_backing_0;
    
    __local unsigned char *red_arr_mem_25883;
    
    red_arr_mem_25883 = (__local unsigned char *) red_arr_mem_25883_backing_1;
    
    int64_t dummy_17910 = (int64_t) 0;
    int64_t gtid_17911 = (int64_t) 0;
    double x_acc_25885;
    int64_t chunk_sizze_25886 = smin64(sdiv_up64(n_16334,
                                                 sext_i32_i64(sext_i64_i32(segred_group_sizze_17906 *
                                                 num_groups_17907))),
                                       sdiv_up64(n_16334 - phys_tid_17912,
                                                 num_threads_25875));
    double x_17913;
    double x_17914;
    
    // neutral-initialise the accumulators
    {
        x_acc_25885 = 0.0;
    }
    for (int64_t i_25890 = 0; i_25890 < chunk_sizze_25886; i_25890++) {
        gtid_17911 = phys_tid_17912 + num_threads_25875 * i_25890;
        // apply map function
        {
            double defunc_2_reduce_res_17919;
            double redout_23957 = -INFINITY;
            
            for (int64_t i_23959 = 0; i_23959 < k_16331; i_23959++) {
                double x_17924;
                
                x_17924 = ((__global double *) ext_mem_24393)[i_23959 *
                                                              n_16334 +
                                                              gtid_17911];
                
                double x_wasfree_17925;
                
                x_wasfree_17925 = ((__global
                                    double *) alphas_mem_24017)[i_23959];
                
                double x_wasfree_17926;
                
                x_wasfree_17926 = ((__global double *) ext_mem_24405)[i_23959];
                
                double x_17927 = -0.5 * x_17924;
                double x_17928 = x_wasfree_17925 + x_17927;
                double defunc_0_f_res_17929 = x_wasfree_17926 + x_17928;
                double defunc_1_op_res_17923 = fmax64(defunc_0_f_res_17929,
                                                      redout_23957);
                
                ((__global double *) color_25337)[phys_tid_17912 + i_23959 *
                                                  num_threads_25368] =
                    defunc_0_f_res_17929;
                
                double redout_tmp_25891 = defunc_1_op_res_17923;
                
                redout_23957 = redout_tmp_25891;
            }
            defunc_2_reduce_res_17919 = redout_23957;
            
            double defunc_2_reduce_res_17930;
            double redout_23961 = 0.0;
            
            for (int64_t i_23962 = 0; i_23962 < k_16331; i_23962++) {
                double x_17934;
                
                x_17934 = ((__global double *) color_25337)[phys_tid_17912 +
                                                            i_23962 *
                                                            num_threads_25368];
                
                double exp_arg_17935 = x_17934 - defunc_2_reduce_res_17919;
                double exp_res_17936;
                
                exp_res_17936 = futrts_exp64(exp_arg_17935);
                
                double defunc_1_op_res_17933 = exp_res_17936 + redout_23961;
                double redout_tmp_25893 = defunc_1_op_res_17933;
                
                redout_23961 = redout_tmp_25893;
            }
            defunc_2_reduce_res_17930 = redout_23961;
            
            double log_res_17937;
            
            log_res_17937 = futrts_log64(defunc_2_reduce_res_17930);
            
            double defunc_0_f_res_17938 = defunc_2_reduce_res_17919 +
                   log_res_17937;
            
            // save map-out results
            { }
            // load accumulator
            {
                x_17913 = x_acc_25885;
            }
            // load new values
            {
                x_17914 = defunc_0_f_res_17938;
            }
            // apply reduction operator
            {
                double defunc_1_op_res_17915 = x_17913 + x_17914;
                
                // store in accumulator
                {
                    x_acc_25885 = defunc_1_op_res_17915;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_17913 = x_acc_25885;
        ((__local double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877)] =
            x_17913;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_25894;
    int32_t skip_waves_25895 = 1;
    double x_25887;
    double x_25888;
    
    offset_25894 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_25877, sext_i64_i32(segred_group_sizze_17906))) {
            x_25887 = ((__local
                        double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877 +
                                                     offset_25894)];
        }
    }
    offset_25894 = 1;
    while (slt32(offset_25894, wave_sizze_25879)) {
        if (slt32(local_tid_25877 + offset_25894,
                  sext_i64_i32(segred_group_sizze_17906)) && ((local_tid_25877 -
                                                               squot32(local_tid_25877,
                                                                       wave_sizze_25879) *
                                                               wave_sizze_25879) &
                                                              (2 *
                                                               offset_25894 -
                                                               1)) == 0) {
            // read array element
            {
                x_25888 = ((volatile __local
                            double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877 +
                                                         offset_25894)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_25889 = x_25887 + x_25888;
                
                x_25887 = defunc_1_op_res_25889;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877)] =
                    x_25887;
            }
        }
        offset_25894 *= 2;
    }
    while (slt32(skip_waves_25895,
                 squot32(sext_i64_i32(segred_group_sizze_17906) +
                         wave_sizze_25879 - 1, wave_sizze_25879))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_25894 = skip_waves_25895 * wave_sizze_25879;
        if (slt32(local_tid_25877 + offset_25894,
                  sext_i64_i32(segred_group_sizze_17906)) && ((local_tid_25877 -
                                                               squot32(local_tid_25877,
                                                                       wave_sizze_25879) *
                                                               wave_sizze_25879) ==
                                                              0 &&
                                                              (squot32(local_tid_25877,
                                                                       wave_sizze_25879) &
                                                               (2 *
                                                                skip_waves_25895 -
                                                                1)) == 0)) {
            // read array element
            {
                x_25888 = ((__local
                            double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877 +
                                                         offset_25894)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_25889 = x_25887 + x_25888;
                
                x_25887 = defunc_1_op_res_25889;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877)] =
                    x_25887;
            }
        }
        skip_waves_25895 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_25877) == (int64_t) 0) {
            x_acc_25885 = x_25887;
        }
    }
    
    int32_t old_counter_25896;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_25877 == 0) {
            ((__global
              double *) segred_tmp_mem_25873)[sext_i32_i64(group_tid_25878)] =
                x_acc_25885;
            mem_fence_global();
            old_counter_25896 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_25871)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_25881)[(int64_t) 0] =
                old_counter_25896 == num_groups_17907 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_25897;
    
    is_last_group_25897 = ((__local bool *) sync_arr_mem_25881)[(int64_t) 0];
    if (is_last_group_25897) {
        if (local_tid_25877 == 0) {
            old_counter_25896 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_25871)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_17907));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_25898 = sdiv_up64(num_groups_17907,
                                                      segred_group_sizze_17906);
            
            x_17913 = 0.0;
            for (int64_t i_25899 = 0; i_25899 < read_per_thread_25898;
                 i_25899++) {
                int64_t group_res_id_25900 = sext_i32_i64(local_tid_25877) *
                        read_per_thread_25898 + i_25899;
                int64_t index_of_group_res_25901 = group_res_id_25900;
                
                if (slt64(group_res_id_25900, num_groups_17907)) {
                    x_17914 = ((__global
                                double *) segred_tmp_mem_25873)[index_of_group_res_25901];
                    
                    double defunc_1_op_res_17915 = x_17913 + x_17914;
                    
                    x_17913 = defunc_1_op_res_17915;
                }
            }
        }
        ((__local double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877)] =
            x_17913;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_25902;
            int32_t skip_waves_25903 = 1;
            double x_25887;
            double x_25888;
            
            offset_25902 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_25877,
                          sext_i64_i32(segred_group_sizze_17906))) {
                    x_25887 = ((__local
                                double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877 +
                                                             offset_25902)];
                }
            }
            offset_25902 = 1;
            while (slt32(offset_25902, wave_sizze_25879)) {
                if (slt32(local_tid_25877 + offset_25902,
                          sext_i64_i32(segred_group_sizze_17906)) &&
                    ((local_tid_25877 - squot32(local_tid_25877,
                                                wave_sizze_25879) *
                      wave_sizze_25879) & (2 * offset_25902 - 1)) == 0) {
                    // read array element
                    {
                        x_25888 = ((volatile __local
                                    double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877 +
                                                                 offset_25902)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_25889 = x_25887 + x_25888;
                        
                        x_25887 = defunc_1_op_res_25889;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877)] =
                            x_25887;
                    }
                }
                offset_25902 *= 2;
            }
            while (slt32(skip_waves_25903,
                         squot32(sext_i64_i32(segred_group_sizze_17906) +
                                 wave_sizze_25879 - 1, wave_sizze_25879))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_25902 = skip_waves_25903 * wave_sizze_25879;
                if (slt32(local_tid_25877 + offset_25902,
                          sext_i64_i32(segred_group_sizze_17906)) &&
                    ((local_tid_25877 - squot32(local_tid_25877,
                                                wave_sizze_25879) *
                      wave_sizze_25879) == 0 && (squot32(local_tid_25877,
                                                         wave_sizze_25879) &
                                                 (2 * skip_waves_25903 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_25888 = ((__local
                                    double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877 +
                                                                 offset_25902)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_25889 = x_25887 + x_25888;
                        
                        x_25887 = defunc_1_op_res_25889;
                    }
                    // write result of operation
                    {
                        ((__local
                          double *) red_arr_mem_25883)[sext_i32_i64(local_tid_25877)] =
                            x_25887;
                    }
                }
                skip_waves_25903 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_25877 == 0) {
                    ((__global double *) mem_24423)[(int64_t) 0] = x_25887;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_17906
}
__kernel void calculate_objectivezisegred_nonseg_18305(__global
                                                       int *global_failure,
                                                       uint red_arr_mem_26091_backing_offset_0,
                                                       uint sync_arr_mem_26089_backing_offset_1,
                                                       int64_t n_16334,
                                                       int64_t num_groups_18300,
                                                       int64_t num_threads_26083,
                                                       __global
                                                       unsigned char *ext_mem_24472,
                                                       __global
                                                       unsigned char *mem_24475,
                                                       __global
                                                       unsigned char *calculate_objectivezicounter_mem_26079,
                                                       __global
                                                       unsigned char *segred_tmp_mem_26081)
{
    #define segred_group_sizze_18299 (calculate_objectivezisegred_group_sizze_18166)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26091_backing_1 =
                           &shared_mem[red_arr_mem_26091_backing_offset_0];
    volatile unsigned char *sync_arr_mem_26089_backing_0 =
                           &shared_mem[sync_arr_mem_26089_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26084;
    int32_t local_tid_26085;
    int64_t group_sizze_26088;
    int32_t wave_sizze_26087;
    int32_t group_tid_26086;
    
    global_tid_26084 = get_global_id(0);
    local_tid_26085 = get_local_id(0);
    group_sizze_26088 = get_local_size(0);
    wave_sizze_26087 = LOCKSTEP_WIDTH;
    group_tid_26086 = get_group_id(0);
    
    int32_t phys_tid_18305 = global_tid_26084;
    __local unsigned char *sync_arr_mem_26089;
    
    sync_arr_mem_26089 = (__local unsigned char *) sync_arr_mem_26089_backing_0;
    
    __local unsigned char *red_arr_mem_26091;
    
    red_arr_mem_26091 = (__local unsigned char *) red_arr_mem_26091_backing_1;
    
    int64_t dummy_18303 = (int64_t) 0;
    int64_t gtid_18304 = (int64_t) 0;
    double x_acc_26093;
    int64_t chunk_sizze_26094 = smin64(sdiv_up64(n_16334,
                                                 sext_i32_i64(sext_i64_i32(segred_group_sizze_18299 *
                                                 num_groups_18300))),
                                       sdiv_up64(n_16334 - phys_tid_18305,
                                                 num_threads_26083));
    double x_18306;
    double x_18307;
    
    // neutral-initialise the accumulators
    {
        x_acc_26093 = 0.0;
    }
    for (int64_t i_26098 = 0; i_26098 < chunk_sizze_26094; i_26098++) {
        gtid_18304 = phys_tid_18305 + num_threads_26083 * i_26098;
        // apply map function
        {
            double x_18309;
            
            x_18309 = ((__global double *) ext_mem_24472)[gtid_18304];
            // save map-out results
            { }
            // load accumulator
            {
                x_18306 = x_acc_26093;
            }
            // load new values
            {
                x_18307 = x_18309;
            }
            // apply reduction operator
            {
                double defunc_1_op_res_18308 = x_18306 + x_18307;
                
                // store in accumulator
                {
                    x_acc_26093 = defunc_1_op_res_18308;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_18306 = x_acc_26093;
        ((__local double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085)] =
            x_18306;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_26099;
    int32_t skip_waves_26100 = 1;
    double x_26095;
    double x_26096;
    
    offset_26099 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_26085, sext_i64_i32(segred_group_sizze_18299))) {
            x_26095 = ((__local
                        double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085 +
                                                     offset_26099)];
        }
    }
    offset_26099 = 1;
    while (slt32(offset_26099, wave_sizze_26087)) {
        if (slt32(local_tid_26085 + offset_26099,
                  sext_i64_i32(segred_group_sizze_18299)) && ((local_tid_26085 -
                                                               squot32(local_tid_26085,
                                                                       wave_sizze_26087) *
                                                               wave_sizze_26087) &
                                                              (2 *
                                                               offset_26099 -
                                                               1)) == 0) {
            // read array element
            {
                x_26096 = ((volatile __local
                            double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085 +
                                                         offset_26099)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_26097 = x_26095 + x_26096;
                
                x_26095 = defunc_1_op_res_26097;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085)] =
                    x_26095;
            }
        }
        offset_26099 *= 2;
    }
    while (slt32(skip_waves_26100,
                 squot32(sext_i64_i32(segred_group_sizze_18299) +
                         wave_sizze_26087 - 1, wave_sizze_26087))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_26099 = skip_waves_26100 * wave_sizze_26087;
        if (slt32(local_tid_26085 + offset_26099,
                  sext_i64_i32(segred_group_sizze_18299)) && ((local_tid_26085 -
                                                               squot32(local_tid_26085,
                                                                       wave_sizze_26087) *
                                                               wave_sizze_26087) ==
                                                              0 &&
                                                              (squot32(local_tid_26085,
                                                                       wave_sizze_26087) &
                                                               (2 *
                                                                skip_waves_26100 -
                                                                1)) == 0)) {
            // read array element
            {
                x_26096 = ((__local
                            double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085 +
                                                         offset_26099)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_26097 = x_26095 + x_26096;
                
                x_26095 = defunc_1_op_res_26097;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085)] =
                    x_26095;
            }
        }
        skip_waves_26100 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_26085) == (int64_t) 0) {
            x_acc_26093 = x_26095;
        }
    }
    
    int32_t old_counter_26101;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_26085 == 0) {
            ((__global
              double *) segred_tmp_mem_26081)[sext_i32_i64(group_tid_26086)] =
                x_acc_26093;
            mem_fence_global();
            old_counter_26101 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_26079)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_26089)[(int64_t) 0] =
                old_counter_26101 == num_groups_18300 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_26102;
    
    is_last_group_26102 = ((__local bool *) sync_arr_mem_26089)[(int64_t) 0];
    if (is_last_group_26102) {
        if (local_tid_26085 == 0) {
            old_counter_26101 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_26079)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_18300));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_26103 = sdiv_up64(num_groups_18300,
                                                      segred_group_sizze_18299);
            
            x_18306 = 0.0;
            for (int64_t i_26104 = 0; i_26104 < read_per_thread_26103;
                 i_26104++) {
                int64_t group_res_id_26105 = sext_i32_i64(local_tid_26085) *
                        read_per_thread_26103 + i_26104;
                int64_t index_of_group_res_26106 = group_res_id_26105;
                
                if (slt64(group_res_id_26105, num_groups_18300)) {
                    x_18307 = ((__global
                                double *) segred_tmp_mem_26081)[index_of_group_res_26106];
                    
                    double defunc_1_op_res_18308 = x_18306 + x_18307;
                    
                    x_18306 = defunc_1_op_res_18308;
                }
            }
        }
        ((__local double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085)] =
            x_18306;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_26107;
            int32_t skip_waves_26108 = 1;
            double x_26095;
            double x_26096;
            
            offset_26107 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_26085,
                          sext_i64_i32(segred_group_sizze_18299))) {
                    x_26095 = ((__local
                                double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085 +
                                                             offset_26107)];
                }
            }
            offset_26107 = 1;
            while (slt32(offset_26107, wave_sizze_26087)) {
                if (slt32(local_tid_26085 + offset_26107,
                          sext_i64_i32(segred_group_sizze_18299)) &&
                    ((local_tid_26085 - squot32(local_tid_26085,
                                                wave_sizze_26087) *
                      wave_sizze_26087) & (2 * offset_26107 - 1)) == 0) {
                    // read array element
                    {
                        x_26096 = ((volatile __local
                                    double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085 +
                                                                 offset_26107)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_26097 = x_26095 + x_26096;
                        
                        x_26095 = defunc_1_op_res_26097;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085)] =
                            x_26095;
                    }
                }
                offset_26107 *= 2;
            }
            while (slt32(skip_waves_26108,
                         squot32(sext_i64_i32(segred_group_sizze_18299) +
                                 wave_sizze_26087 - 1, wave_sizze_26087))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_26107 = skip_waves_26108 * wave_sizze_26087;
                if (slt32(local_tid_26085 + offset_26107,
                          sext_i64_i32(segred_group_sizze_18299)) &&
                    ((local_tid_26085 - squot32(local_tid_26085,
                                                wave_sizze_26087) *
                      wave_sizze_26087) == 0 && (squot32(local_tid_26085,
                                                         wave_sizze_26087) &
                                                 (2 * skip_waves_26108 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_26096 = ((__local
                                    double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085 +
                                                                 offset_26107)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_26097 = x_26095 + x_26096;
                        
                        x_26095 = defunc_1_op_res_26097;
                    }
                    // write result of operation
                    {
                        ((__local
                          double *) red_arr_mem_26091)[sext_i32_i64(local_tid_26085)] =
                            x_26095;
                    }
                }
                skip_waves_26108 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_26085 == 0) {
                    ((__global double *) mem_24475)[(int64_t) 0] = x_26095;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_18299
}
__kernel void calculate_objectivezisegred_nonseg_18321(__global
                                                       int *global_failure,
                                                       uint red_arr_mem_26123_backing_offset_0,
                                                       uint sync_arr_mem_26121_backing_offset_1,
                                                       int64_t k_16331,
                                                       int64_t num_groups_18316,
                                                       int64_t num_threads_26115,
                                                       __global
                                                       unsigned char *alphas_mem_24017,
                                                       __global
                                                       unsigned char *mem_24478,
                                                       __global
                                                       unsigned char *calculate_objectivezicounter_mem_26111,
                                                       __global
                                                       unsigned char *segred_tmp_mem_26113)
{
    #define segred_group_sizze_18314 (calculate_objectivezisegred_group_sizze_18313)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26123_backing_1 =
                           &shared_mem[red_arr_mem_26123_backing_offset_0];
    volatile unsigned char *sync_arr_mem_26121_backing_0 =
                           &shared_mem[sync_arr_mem_26121_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26116;
    int32_t local_tid_26117;
    int64_t group_sizze_26120;
    int32_t wave_sizze_26119;
    int32_t group_tid_26118;
    
    global_tid_26116 = get_global_id(0);
    local_tid_26117 = get_local_id(0);
    group_sizze_26120 = get_local_size(0);
    wave_sizze_26119 = LOCKSTEP_WIDTH;
    group_tid_26118 = get_group_id(0);
    
    int32_t phys_tid_18321 = global_tid_26116;
    __local unsigned char *sync_arr_mem_26121;
    
    sync_arr_mem_26121 = (__local unsigned char *) sync_arr_mem_26121_backing_0;
    
    __local unsigned char *red_arr_mem_26123;
    
    red_arr_mem_26123 = (__local unsigned char *) red_arr_mem_26123_backing_1;
    
    int64_t dummy_18319 = (int64_t) 0;
    int64_t gtid_18320 = (int64_t) 0;
    double x_acc_26125;
    int64_t chunk_sizze_26126 = smin64(sdiv_up64(k_16331,
                                                 sext_i32_i64(sext_i64_i32(segred_group_sizze_18314 *
                                                 num_groups_18316))),
                                       sdiv_up64(k_16331 - phys_tid_18321,
                                                 num_threads_26115));
    double x_16504;
    double x_16505;
    
    // neutral-initialise the accumulators
    {
        x_acc_26125 = 0.0;
    }
    for (int64_t i_26130 = 0; i_26130 < chunk_sizze_26126; i_26130++) {
        gtid_18320 = phys_tid_18321 + num_threads_26115 * i_26130;
        // apply map function
        {
            double x_16507;
            
            x_16507 = ((__global double *) alphas_mem_24017)[gtid_18320];
            
            double defunc_0_f_res_16508;
            
            defunc_0_f_res_16508 = futrts_exp64(x_16507);
            // save map-out results
            { }
            // load accumulator
            {
                x_16504 = x_acc_26125;
            }
            // load new values
            {
                x_16505 = defunc_0_f_res_16508;
            }
            // apply reduction operator
            {
                double defunc_1_op_res_16506 = x_16504 + x_16505;
                
                // store in accumulator
                {
                    x_acc_26125 = defunc_1_op_res_16506;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_16504 = x_acc_26125;
        ((__local double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117)] =
            x_16504;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_26131;
    int32_t skip_waves_26132 = 1;
    double x_26127;
    double x_26128;
    
    offset_26131 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_26117, sext_i64_i32(segred_group_sizze_18314))) {
            x_26127 = ((__local
                        double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117 +
                                                     offset_26131)];
        }
    }
    offset_26131 = 1;
    while (slt32(offset_26131, wave_sizze_26119)) {
        if (slt32(local_tid_26117 + offset_26131,
                  sext_i64_i32(segred_group_sizze_18314)) && ((local_tid_26117 -
                                                               squot32(local_tid_26117,
                                                                       wave_sizze_26119) *
                                                               wave_sizze_26119) &
                                                              (2 *
                                                               offset_26131 -
                                                               1)) == 0) {
            // read array element
            {
                x_26128 = ((volatile __local
                            double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117 +
                                                         offset_26131)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_26129 = x_26127 + x_26128;
                
                x_26127 = defunc_1_op_res_26129;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117)] =
                    x_26127;
            }
        }
        offset_26131 *= 2;
    }
    while (slt32(skip_waves_26132,
                 squot32(sext_i64_i32(segred_group_sizze_18314) +
                         wave_sizze_26119 - 1, wave_sizze_26119))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_26131 = skip_waves_26132 * wave_sizze_26119;
        if (slt32(local_tid_26117 + offset_26131,
                  sext_i64_i32(segred_group_sizze_18314)) && ((local_tid_26117 -
                                                               squot32(local_tid_26117,
                                                                       wave_sizze_26119) *
                                                               wave_sizze_26119) ==
                                                              0 &&
                                                              (squot32(local_tid_26117,
                                                                       wave_sizze_26119) &
                                                               (2 *
                                                                skip_waves_26132 -
                                                                1)) == 0)) {
            // read array element
            {
                x_26128 = ((__local
                            double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117 +
                                                         offset_26131)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_26129 = x_26127 + x_26128;
                
                x_26127 = defunc_1_op_res_26129;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117)] =
                    x_26127;
            }
        }
        skip_waves_26132 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_26117) == (int64_t) 0) {
            x_acc_26125 = x_26127;
        }
    }
    
    int32_t old_counter_26133;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_26117 == 0) {
            ((__global
              double *) segred_tmp_mem_26113)[sext_i32_i64(group_tid_26118)] =
                x_acc_26125;
            mem_fence_global();
            old_counter_26133 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_26111)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_26121)[(int64_t) 0] =
                old_counter_26133 == num_groups_18316 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_26134;
    
    is_last_group_26134 = ((__local bool *) sync_arr_mem_26121)[(int64_t) 0];
    if (is_last_group_26134) {
        if (local_tid_26117 == 0) {
            old_counter_26133 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_26111)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_18316));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_26135 = sdiv_up64(num_groups_18316,
                                                      segred_group_sizze_18314);
            
            x_16504 = 0.0;
            for (int64_t i_26136 = 0; i_26136 < read_per_thread_26135;
                 i_26136++) {
                int64_t group_res_id_26137 = sext_i32_i64(local_tid_26117) *
                        read_per_thread_26135 + i_26136;
                int64_t index_of_group_res_26138 = group_res_id_26137;
                
                if (slt64(group_res_id_26137, num_groups_18316)) {
                    x_16505 = ((__global
                                double *) segred_tmp_mem_26113)[index_of_group_res_26138];
                    
                    double defunc_1_op_res_16506 = x_16504 + x_16505;
                    
                    x_16504 = defunc_1_op_res_16506;
                }
            }
        }
        ((__local double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117)] =
            x_16504;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_26139;
            int32_t skip_waves_26140 = 1;
            double x_26127;
            double x_26128;
            
            offset_26139 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_26117,
                          sext_i64_i32(segred_group_sizze_18314))) {
                    x_26127 = ((__local
                                double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117 +
                                                             offset_26139)];
                }
            }
            offset_26139 = 1;
            while (slt32(offset_26139, wave_sizze_26119)) {
                if (slt32(local_tid_26117 + offset_26139,
                          sext_i64_i32(segred_group_sizze_18314)) &&
                    ((local_tid_26117 - squot32(local_tid_26117,
                                                wave_sizze_26119) *
                      wave_sizze_26119) & (2 * offset_26139 - 1)) == 0) {
                    // read array element
                    {
                        x_26128 = ((volatile __local
                                    double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117 +
                                                                 offset_26139)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_26129 = x_26127 + x_26128;
                        
                        x_26127 = defunc_1_op_res_26129;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117)] =
                            x_26127;
                    }
                }
                offset_26139 *= 2;
            }
            while (slt32(skip_waves_26140,
                         squot32(sext_i64_i32(segred_group_sizze_18314) +
                                 wave_sizze_26119 - 1, wave_sizze_26119))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_26139 = skip_waves_26140 * wave_sizze_26119;
                if (slt32(local_tid_26117 + offset_26139,
                          sext_i64_i32(segred_group_sizze_18314)) &&
                    ((local_tid_26117 - squot32(local_tid_26117,
                                                wave_sizze_26119) *
                      wave_sizze_26119) == 0 && (squot32(local_tid_26117,
                                                         wave_sizze_26119) &
                                                 (2 * skip_waves_26140 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_26128 = ((__local
                                    double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117 +
                                                                 offset_26139)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_26129 = x_26127 + x_26128;
                        
                        x_26127 = defunc_1_op_res_26129;
                    }
                    // write result of operation
                    {
                        ((__local
                          double *) red_arr_mem_26123)[sext_i32_i64(local_tid_26117)] =
                            x_26127;
                    }
                }
                skip_waves_26140 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_26117 == 0) {
                    ((__global double *) mem_24478)[(int64_t) 0] = x_26127;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_18314
}
__kernel void calculate_objectivezisegred_nonseg_18331(__global
                                                       int *global_failure,
                                                       uint red_arr_mem_26154_backing_offset_0,
                                                       uint sync_arr_mem_26152_backing_offset_1,
                                                       int64_t d_16332,
                                                       double logGammaDistrib_arg_16520,
                                                       int64_t num_groups_18326,
                                                       int64_t num_threads_26146,
                                                       __global
                                                       unsigned char *mem_24481,
                                                       __global
                                                       unsigned char *calculate_objectivezicounter_mem_26142,
                                                       __global
                                                       unsigned char *segred_tmp_mem_26144)
{
    #define segred_group_sizze_18324 (calculate_objectivezisegred_group_sizze_18323)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26154_backing_1 =
                           &shared_mem[red_arr_mem_26154_backing_offset_0];
    volatile unsigned char *sync_arr_mem_26152_backing_0 =
                           &shared_mem[sync_arr_mem_26152_backing_offset_1];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26147;
    int32_t local_tid_26148;
    int64_t group_sizze_26151;
    int32_t wave_sizze_26150;
    int32_t group_tid_26149;
    
    global_tid_26147 = get_global_id(0);
    local_tid_26148 = get_local_id(0);
    group_sizze_26151 = get_local_size(0);
    wave_sizze_26150 = LOCKSTEP_WIDTH;
    group_tid_26149 = get_group_id(0);
    
    int32_t phys_tid_18331 = global_tid_26147;
    __local unsigned char *sync_arr_mem_26152;
    
    sync_arr_mem_26152 = (__local unsigned char *) sync_arr_mem_26152_backing_0;
    
    __local unsigned char *red_arr_mem_26154;
    
    red_arr_mem_26154 = (__local unsigned char *) red_arr_mem_26154_backing_1;
    
    int64_t dummy_18329 = (int64_t) 0;
    int64_t gtid_18330 = (int64_t) 0;
    double x_acc_26156;
    int64_t chunk_sizze_26157 = smin64(sdiv_up64(d_16332,
                                                 sext_i32_i64(sext_i64_i32(segred_group_sizze_18324 *
                                                 num_groups_18326))),
                                       sdiv_up64(d_16332 - phys_tid_18331,
                                                 num_threads_26146));
    double x_16530;
    double x_16531;
    
    // neutral-initialise the accumulators
    {
        x_acc_26156 = 0.0;
    }
    for (int64_t i_26161 = 0; i_26161 < chunk_sizze_26157; i_26161++) {
        gtid_18330 = phys_tid_18331 + num_threads_26146 * i_26161;
        // apply map function
        {
            int64_t i64_arg_16534 = sub64((int64_t) 0, gtid_18330);
            double i64_res_16535 = sitofp_i64_f64(i64_arg_16534);
            double y_16536 = 0.5 * i64_res_16535;
            double lgamma_arg_16537 = logGammaDistrib_arg_16520 + y_16536;
            double lgamma_res_16538;
            
            lgamma_res_16538 = futrts_lgamma64(lgamma_arg_16537);
            // save map-out results
            { }
            // load accumulator
            {
                x_16530 = x_acc_26156;
            }
            // load new values
            {
                x_16531 = lgamma_res_16538;
            }
            // apply reduction operator
            {
                double defunc_1_op_res_16532 = x_16530 + x_16531;
                
                // store in accumulator
                {
                    x_acc_26156 = defunc_1_op_res_16532;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_16530 = x_acc_26156;
        ((__local double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148)] =
            x_16530;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_26162;
    int32_t skip_waves_26163 = 1;
    double x_26158;
    double x_26159;
    
    offset_26162 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_26148, sext_i64_i32(segred_group_sizze_18324))) {
            x_26158 = ((__local
                        double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148 +
                                                     offset_26162)];
        }
    }
    offset_26162 = 1;
    while (slt32(offset_26162, wave_sizze_26150)) {
        if (slt32(local_tid_26148 + offset_26162,
                  sext_i64_i32(segred_group_sizze_18324)) && ((local_tid_26148 -
                                                               squot32(local_tid_26148,
                                                                       wave_sizze_26150) *
                                                               wave_sizze_26150) &
                                                              (2 *
                                                               offset_26162 -
                                                               1)) == 0) {
            // read array element
            {
                x_26159 = ((volatile __local
                            double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148 +
                                                         offset_26162)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_26160 = x_26158 + x_26159;
                
                x_26158 = defunc_1_op_res_26160;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148)] =
                    x_26158;
            }
        }
        offset_26162 *= 2;
    }
    while (slt32(skip_waves_26163,
                 squot32(sext_i64_i32(segred_group_sizze_18324) +
                         wave_sizze_26150 - 1, wave_sizze_26150))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_26162 = skip_waves_26163 * wave_sizze_26150;
        if (slt32(local_tid_26148 + offset_26162,
                  sext_i64_i32(segred_group_sizze_18324)) && ((local_tid_26148 -
                                                               squot32(local_tid_26148,
                                                                       wave_sizze_26150) *
                                                               wave_sizze_26150) ==
                                                              0 &&
                                                              (squot32(local_tid_26148,
                                                                       wave_sizze_26150) &
                                                               (2 *
                                                                skip_waves_26163 -
                                                                1)) == 0)) {
            // read array element
            {
                x_26159 = ((__local
                            double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148 +
                                                         offset_26162)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_26160 = x_26158 + x_26159;
                
                x_26158 = defunc_1_op_res_26160;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148)] =
                    x_26158;
            }
        }
        skip_waves_26163 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_26148) == (int64_t) 0) {
            x_acc_26156 = x_26158;
        }
    }
    
    int32_t old_counter_26164;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_26148 == 0) {
            ((__global
              double *) segred_tmp_mem_26144)[sext_i32_i64(group_tid_26149)] =
                x_acc_26156;
            mem_fence_global();
            old_counter_26164 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_26142)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_26152)[(int64_t) 0] =
                old_counter_26164 == num_groups_18326 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_26165;
    
    is_last_group_26165 = ((__local bool *) sync_arr_mem_26152)[(int64_t) 0];
    if (is_last_group_26165) {
        if (local_tid_26148 == 0) {
            old_counter_26164 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_26142)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_18326));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_26166 = sdiv_up64(num_groups_18326,
                                                      segred_group_sizze_18324);
            
            x_16530 = 0.0;
            for (int64_t i_26167 = 0; i_26167 < read_per_thread_26166;
                 i_26167++) {
                int64_t group_res_id_26168 = sext_i32_i64(local_tid_26148) *
                        read_per_thread_26166 + i_26167;
                int64_t index_of_group_res_26169 = group_res_id_26168;
                
                if (slt64(group_res_id_26168, num_groups_18326)) {
                    x_16531 = ((__global
                                double *) segred_tmp_mem_26144)[index_of_group_res_26169];
                    
                    double defunc_1_op_res_16532 = x_16530 + x_16531;
                    
                    x_16530 = defunc_1_op_res_16532;
                }
            }
        }
        ((__local double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148)] =
            x_16530;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_26170;
            int32_t skip_waves_26171 = 1;
            double x_26158;
            double x_26159;
            
            offset_26170 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_26148,
                          sext_i64_i32(segred_group_sizze_18324))) {
                    x_26158 = ((__local
                                double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148 +
                                                             offset_26170)];
                }
            }
            offset_26170 = 1;
            while (slt32(offset_26170, wave_sizze_26150)) {
                if (slt32(local_tid_26148 + offset_26170,
                          sext_i64_i32(segred_group_sizze_18324)) &&
                    ((local_tid_26148 - squot32(local_tid_26148,
                                                wave_sizze_26150) *
                      wave_sizze_26150) & (2 * offset_26170 - 1)) == 0) {
                    // read array element
                    {
                        x_26159 = ((volatile __local
                                    double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148 +
                                                                 offset_26170)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_26160 = x_26158 + x_26159;
                        
                        x_26158 = defunc_1_op_res_26160;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148)] =
                            x_26158;
                    }
                }
                offset_26170 *= 2;
            }
            while (slt32(skip_waves_26171,
                         squot32(sext_i64_i32(segred_group_sizze_18324) +
                                 wave_sizze_26150 - 1, wave_sizze_26150))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_26170 = skip_waves_26171 * wave_sizze_26150;
                if (slt32(local_tid_26148 + offset_26170,
                          sext_i64_i32(segred_group_sizze_18324)) &&
                    ((local_tid_26148 - squot32(local_tid_26148,
                                                wave_sizze_26150) *
                      wave_sizze_26150) == 0 && (squot32(local_tid_26148,
                                                         wave_sizze_26150) &
                                                 (2 * skip_waves_26171 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_26159 = ((__local
                                    double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148 +
                                                                 offset_26170)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_26160 = x_26158 + x_26159;
                        
                        x_26158 = defunc_1_op_res_26160;
                    }
                    // write result of operation
                    {
                        ((__local
                          double *) red_arr_mem_26154)[sext_i32_i64(local_tid_26148)] =
                            x_26158;
                    }
                }
                skip_waves_26171 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_26148 == 0) {
                    ((__global double *) mem_24481)[(int64_t) 0] = x_26158;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_18324
}
__kernel void calculate_objectivezisegred_nonseg_18353(__global
                                                       int *global_failure,
                                                       uint red_arr_mem_26191_backing_offset_0,
                                                       uint red_arr_mem_26189_backing_offset_1,
                                                       uint sync_arr_mem_26187_backing_offset_2,
                                                       int64_t k_16331,
                                                       int64_t d_16332,
                                                       int64_t y_17168,
                                                       int64_t num_groups_18347,
                                                       int64_t num_threads_26181,
                                                       __global
                                                       unsigned char *ext_mem_24405,
                                                       __global
                                                       unsigned char *mem_24485,
                                                       __global
                                                       unsigned char *mem_24488,
                                                       __global
                                                       unsigned char *mem_24490,
                                                       __global
                                                       unsigned char *calculate_objectivezicounter_mem_26175,
                                                       __global
                                                       unsigned char *segred_tmp_mem_26177,
                                                       __global
                                                       unsigned char *segred_tmp_mem_26179)
{
    #define segred_group_sizze_18346 (calculate_objectivezisegred_group_sizze_18335)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26191_backing_2 =
                           &shared_mem[red_arr_mem_26191_backing_offset_0];
    volatile unsigned char *red_arr_mem_26189_backing_1 =
                           &shared_mem[red_arr_mem_26189_backing_offset_1];
    volatile unsigned char *sync_arr_mem_26187_backing_0 =
                           &shared_mem[sync_arr_mem_26187_backing_offset_2];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26182;
    int32_t local_tid_26183;
    int64_t group_sizze_26186;
    int32_t wave_sizze_26185;
    int32_t group_tid_26184;
    
    global_tid_26182 = get_global_id(0);
    local_tid_26183 = get_local_id(0);
    group_sizze_26186 = get_local_size(0);
    wave_sizze_26185 = LOCKSTEP_WIDTH;
    group_tid_26184 = get_group_id(0);
    
    int32_t phys_tid_18353 = global_tid_26182;
    __local unsigned char *sync_arr_mem_26187;
    
    sync_arr_mem_26187 = (__local unsigned char *) sync_arr_mem_26187_backing_0;
    
    __local unsigned char *red_arr_mem_26189;
    
    red_arr_mem_26189 = (__local unsigned char *) red_arr_mem_26189_backing_1;
    
    __local unsigned char *red_arr_mem_26191;
    
    red_arr_mem_26191 = (__local unsigned char *) red_arr_mem_26191_backing_2;
    
    int64_t dummy_18351 = (int64_t) 0;
    int64_t gtid_18352 = (int64_t) 0;
    double x_acc_26193;
    double x_acc_26194;
    int64_t chunk_sizze_26195 = smin64(sdiv_up64(k_16331,
                                                 sext_i32_i64(sext_i64_i32(segred_group_sizze_18346 *
                                                 num_groups_18347))),
                                       sdiv_up64(k_16331 - phys_tid_18353,
                                                 num_threads_26181));
    double x_18354;
    double x_18355;
    double x_18357;
    double x_18358;
    
    // neutral-initialise the accumulators
    {
        x_acc_26193 = 0.0;
        x_acc_26194 = 0.0;
    }
    for (int64_t i_26202 = 0; i_26202 < chunk_sizze_26195; i_26202++) {
        gtid_18352 = phys_tid_18353 + num_threads_26181 * i_26202;
        // apply map function
        {
            double x_18361;
            
            x_18361 = ((__global double *) ext_mem_24405)[gtid_18352];
            
            double defunc_2_reduce_res_18363;
            double redout_23970 = 0.0;
            
            for (int64_t i_23971 = 0; i_23971 < y_17168; i_23971++) {
                int64_t new_index_24004 = squot64(i_23971, d_16332);
                int64_t binop_y_24006 = d_16332 * new_index_24004;
                int64_t new_index_24007 = i_23971 - binop_y_24006;
                double x_18367;
                
                x_18367 = ((__global double *) mem_24485)[new_index_24004 *
                                                          (k_16331 * d_16332) +
                                                          new_index_24007 *
                                                          k_16331 + gtid_18352];
                
                double defunc_0_f_res_18368 = x_18367 * x_18367;
                double defunc_1_op_res_18366 = defunc_0_f_res_18368 +
                       redout_23970;
                double redout_tmp_26203 = defunc_1_op_res_18366;
                
                redout_23970 = redout_tmp_26203;
            }
            defunc_2_reduce_res_18363 = redout_23970;
            // save map-out results
            { }
            // load accumulator
            {
                x_18354 = x_acc_26193;
                x_18357 = x_acc_26194;
            }
            // load new values
            {
                x_18355 = defunc_2_reduce_res_18363;
                x_18358 = x_18361;
            }
            // apply reduction operator
            {
                double defunc_1_op_res_18356 = x_18354 + x_18355;
                double defunc_1_op_res_18359 = x_18357 + x_18358;
                
                // store in accumulator
                {
                    x_acc_26193 = defunc_1_op_res_18356;
                    x_acc_26194 = defunc_1_op_res_18359;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_18354 = x_acc_26193;
        x_18357 = x_acc_26194;
        ((__local double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183)] =
            x_18354;
        ((__local double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183)] =
            x_18357;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_26204;
    int32_t skip_waves_26205 = 1;
    double x_26196;
    double x_26197;
    double x_26198;
    double x_26199;
    
    offset_26204 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_26183, sext_i64_i32(segred_group_sizze_18346))) {
            x_26196 = ((__local
                        double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183 +
                                                     offset_26204)];
            x_26197 = ((__local
                        double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183 +
                                                     offset_26204)];
        }
    }
    offset_26204 = 1;
    while (slt32(offset_26204, wave_sizze_26185)) {
        if (slt32(local_tid_26183 + offset_26204,
                  sext_i64_i32(segred_group_sizze_18346)) && ((local_tid_26183 -
                                                               squot32(local_tid_26183,
                                                                       wave_sizze_26185) *
                                                               wave_sizze_26185) &
                                                              (2 *
                                                               offset_26204 -
                                                               1)) == 0) {
            // read array element
            {
                x_26198 = ((volatile __local
                            double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183 +
                                                         offset_26204)];
                x_26199 = ((volatile __local
                            double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183 +
                                                         offset_26204)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_26200 = x_26196 + x_26198;
                double defunc_1_op_res_26201 = x_26197 + x_26199;
                
                x_26196 = defunc_1_op_res_26200;
                x_26197 = defunc_1_op_res_26201;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183)] =
                    x_26196;
                ((volatile __local
                  double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183)] =
                    x_26197;
            }
        }
        offset_26204 *= 2;
    }
    while (slt32(skip_waves_26205,
                 squot32(sext_i64_i32(segred_group_sizze_18346) +
                         wave_sizze_26185 - 1, wave_sizze_26185))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_26204 = skip_waves_26205 * wave_sizze_26185;
        if (slt32(local_tid_26183 + offset_26204,
                  sext_i64_i32(segred_group_sizze_18346)) && ((local_tid_26183 -
                                                               squot32(local_tid_26183,
                                                                       wave_sizze_26185) *
                                                               wave_sizze_26185) ==
                                                              0 &&
                                                              (squot32(local_tid_26183,
                                                                       wave_sizze_26185) &
                                                               (2 *
                                                                skip_waves_26205 -
                                                                1)) == 0)) {
            // read array element
            {
                x_26198 = ((__local
                            double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183 +
                                                         offset_26204)];
                x_26199 = ((__local
                            double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183 +
                                                         offset_26204)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_26200 = x_26196 + x_26198;
                double defunc_1_op_res_26201 = x_26197 + x_26199;
                
                x_26196 = defunc_1_op_res_26200;
                x_26197 = defunc_1_op_res_26201;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183)] =
                    x_26196;
                ((__local
                  double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183)] =
                    x_26197;
            }
        }
        skip_waves_26205 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_26183) == (int64_t) 0) {
            x_acc_26193 = x_26196;
            x_acc_26194 = x_26197;
        }
    }
    
    int32_t old_counter_26206;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_26183 == 0) {
            ((__global
              double *) segred_tmp_mem_26177)[sext_i32_i64(group_tid_26184)] =
                x_acc_26193;
            ((__global
              double *) segred_tmp_mem_26179)[sext_i32_i64(group_tid_26184)] =
                x_acc_26194;
            mem_fence_global();
            old_counter_26206 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_26175)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_26187)[(int64_t) 0] =
                old_counter_26206 == num_groups_18347 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_26207;
    
    is_last_group_26207 = ((__local bool *) sync_arr_mem_26187)[(int64_t) 0];
    if (is_last_group_26207) {
        if (local_tid_26183 == 0) {
            old_counter_26206 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_26175)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_18347));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_26208 = sdiv_up64(num_groups_18347,
                                                      segred_group_sizze_18346);
            
            x_18354 = 0.0;
            x_18357 = 0.0;
            for (int64_t i_26209 = 0; i_26209 < read_per_thread_26208;
                 i_26209++) {
                int64_t group_res_id_26210 = sext_i32_i64(local_tid_26183) *
                        read_per_thread_26208 + i_26209;
                int64_t index_of_group_res_26211 = group_res_id_26210;
                
                if (slt64(group_res_id_26210, num_groups_18347)) {
                    x_18355 = ((__global
                                double *) segred_tmp_mem_26177)[index_of_group_res_26211];
                    x_18358 = ((__global
                                double *) segred_tmp_mem_26179)[index_of_group_res_26211];
                    
                    double defunc_1_op_res_18356 = x_18354 + x_18355;
                    double defunc_1_op_res_18359 = x_18357 + x_18358;
                    
                    x_18354 = defunc_1_op_res_18356;
                    x_18357 = defunc_1_op_res_18359;
                }
            }
        }
        ((__local double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183)] =
            x_18354;
        ((__local double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183)] =
            x_18357;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_26212;
            int32_t skip_waves_26213 = 1;
            double x_26196;
            double x_26197;
            double x_26198;
            double x_26199;
            
            offset_26212 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_26183,
                          sext_i64_i32(segred_group_sizze_18346))) {
                    x_26196 = ((__local
                                double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183 +
                                                             offset_26212)];
                    x_26197 = ((__local
                                double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183 +
                                                             offset_26212)];
                }
            }
            offset_26212 = 1;
            while (slt32(offset_26212, wave_sizze_26185)) {
                if (slt32(local_tid_26183 + offset_26212,
                          sext_i64_i32(segred_group_sizze_18346)) &&
                    ((local_tid_26183 - squot32(local_tid_26183,
                                                wave_sizze_26185) *
                      wave_sizze_26185) & (2 * offset_26212 - 1)) == 0) {
                    // read array element
                    {
                        x_26198 = ((volatile __local
                                    double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183 +
                                                                 offset_26212)];
                        x_26199 = ((volatile __local
                                    double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183 +
                                                                 offset_26212)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_26200 = x_26196 + x_26198;
                        double defunc_1_op_res_26201 = x_26197 + x_26199;
                        
                        x_26196 = defunc_1_op_res_26200;
                        x_26197 = defunc_1_op_res_26201;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183)] =
                            x_26196;
                        ((volatile __local
                          double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183)] =
                            x_26197;
                    }
                }
                offset_26212 *= 2;
            }
            while (slt32(skip_waves_26213,
                         squot32(sext_i64_i32(segred_group_sizze_18346) +
                                 wave_sizze_26185 - 1, wave_sizze_26185))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_26212 = skip_waves_26213 * wave_sizze_26185;
                if (slt32(local_tid_26183 + offset_26212,
                          sext_i64_i32(segred_group_sizze_18346)) &&
                    ((local_tid_26183 - squot32(local_tid_26183,
                                                wave_sizze_26185) *
                      wave_sizze_26185) == 0 && (squot32(local_tid_26183,
                                                         wave_sizze_26185) &
                                                 (2 * skip_waves_26213 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_26198 = ((__local
                                    double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183 +
                                                                 offset_26212)];
                        x_26199 = ((__local
                                    double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183 +
                                                                 offset_26212)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_26200 = x_26196 + x_26198;
                        double defunc_1_op_res_26201 = x_26197 + x_26199;
                        
                        x_26196 = defunc_1_op_res_26200;
                        x_26197 = defunc_1_op_res_26201;
                    }
                    // write result of operation
                    {
                        ((__local
                          double *) red_arr_mem_26189)[sext_i32_i64(local_tid_26183)] =
                            x_26196;
                        ((__local
                          double *) red_arr_mem_26191)[sext_i32_i64(local_tid_26183)] =
                            x_26197;
                    }
                }
                skip_waves_26213 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_26183 == 0) {
                    ((__global double *) mem_24488)[(int64_t) 0] = x_26196;
                    ((__global double *) mem_24490)[(int64_t) 0] = x_26197;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_18346
}
__kernel void calculate_objectivezisegred_nonseg_18498(__global
                                                       int *global_failure,
                                                       uint red_arr_mem_26308_backing_offset_0,
                                                       uint red_arr_mem_26306_backing_offset_1,
                                                       uint sync_arr_mem_26304_backing_offset_2,
                                                       int64_t k_16331,
                                                       int64_t num_groups_18492,
                                                       int64_t num_threads_26298,
                                                       __global
                                                       unsigned char *ext_mem_24405,
                                                       __global
                                                       unsigned char *ext_mem_24503,
                                                       __global
                                                       unsigned char *mem_24506,
                                                       __global
                                                       unsigned char *mem_24508,
                                                       __global
                                                       unsigned char *calculate_objectivezicounter_mem_26292,
                                                       __global
                                                       unsigned char *segred_tmp_mem_26294,
                                                       __global
                                                       unsigned char *segred_tmp_mem_26296)
{
    #define segred_group_sizze_18491 (calculate_objectivezisegred_group_sizze_18445)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26308_backing_2 =
                           &shared_mem[red_arr_mem_26308_backing_offset_0];
    volatile unsigned char *red_arr_mem_26306_backing_1 =
                           &shared_mem[red_arr_mem_26306_backing_offset_1];
    volatile unsigned char *sync_arr_mem_26304_backing_0 =
                           &shared_mem[sync_arr_mem_26304_backing_offset_2];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26299;
    int32_t local_tid_26300;
    int64_t group_sizze_26303;
    int32_t wave_sizze_26302;
    int32_t group_tid_26301;
    
    global_tid_26299 = get_global_id(0);
    local_tid_26300 = get_local_id(0);
    group_sizze_26303 = get_local_size(0);
    wave_sizze_26302 = LOCKSTEP_WIDTH;
    group_tid_26301 = get_group_id(0);
    
    int32_t phys_tid_18498 = global_tid_26299;
    __local unsigned char *sync_arr_mem_26304;
    
    sync_arr_mem_26304 = (__local unsigned char *) sync_arr_mem_26304_backing_0;
    
    __local unsigned char *red_arr_mem_26306;
    
    red_arr_mem_26306 = (__local unsigned char *) red_arr_mem_26306_backing_1;
    
    __local unsigned char *red_arr_mem_26308;
    
    red_arr_mem_26308 = (__local unsigned char *) red_arr_mem_26308_backing_2;
    
    int64_t dummy_18496 = (int64_t) 0;
    int64_t gtid_18497 = (int64_t) 0;
    double x_acc_26310;
    double x_acc_26311;
    int64_t chunk_sizze_26312 = smin64(sdiv_up64(k_16331,
                                                 sext_i32_i64(sext_i64_i32(segred_group_sizze_18491 *
                                                 num_groups_18492))),
                                       sdiv_up64(k_16331 - phys_tid_18498,
                                                 num_threads_26298));
    double x_18499;
    double x_18500;
    double x_18502;
    double x_18503;
    
    // neutral-initialise the accumulators
    {
        x_acc_26310 = 0.0;
        x_acc_26311 = 0.0;
    }
    for (int64_t i_26319 = 0; i_26319 < chunk_sizze_26312; i_26319++) {
        gtid_18497 = phys_tid_18498 + num_threads_26298 * i_26319;
        // apply map function
        {
            double x_18505;
            
            x_18505 = ((__global double *) ext_mem_24503)[gtid_18497];
            
            double x_18506;
            
            x_18506 = ((__global double *) ext_mem_24405)[gtid_18497];
            // save map-out results
            { }
            // load accumulator
            {
                x_18499 = x_acc_26310;
                x_18502 = x_acc_26311;
            }
            // load new values
            {
                x_18500 = x_18505;
                x_18503 = x_18506;
            }
            // apply reduction operator
            {
                double defunc_1_op_res_18501 = x_18499 + x_18500;
                double defunc_1_op_res_18504 = x_18502 + x_18503;
                
                // store in accumulator
                {
                    x_acc_26310 = defunc_1_op_res_18501;
                    x_acc_26311 = defunc_1_op_res_18504;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_18499 = x_acc_26310;
        x_18502 = x_acc_26311;
        ((__local double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300)] =
            x_18499;
        ((__local double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300)] =
            x_18502;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_26320;
    int32_t skip_waves_26321 = 1;
    double x_26313;
    double x_26314;
    double x_26315;
    double x_26316;
    
    offset_26320 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_26300, sext_i64_i32(segred_group_sizze_18491))) {
            x_26313 = ((__local
                        double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300 +
                                                     offset_26320)];
            x_26314 = ((__local
                        double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300 +
                                                     offset_26320)];
        }
    }
    offset_26320 = 1;
    while (slt32(offset_26320, wave_sizze_26302)) {
        if (slt32(local_tid_26300 + offset_26320,
                  sext_i64_i32(segred_group_sizze_18491)) && ((local_tid_26300 -
                                                               squot32(local_tid_26300,
                                                                       wave_sizze_26302) *
                                                               wave_sizze_26302) &
                                                              (2 *
                                                               offset_26320 -
                                                               1)) == 0) {
            // read array element
            {
                x_26315 = ((volatile __local
                            double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300 +
                                                         offset_26320)];
                x_26316 = ((volatile __local
                            double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300 +
                                                         offset_26320)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_26317 = x_26313 + x_26315;
                double defunc_1_op_res_26318 = x_26314 + x_26316;
                
                x_26313 = defunc_1_op_res_26317;
                x_26314 = defunc_1_op_res_26318;
            }
            // write result of operation
            {
                ((volatile __local
                  double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300)] =
                    x_26313;
                ((volatile __local
                  double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300)] =
                    x_26314;
            }
        }
        offset_26320 *= 2;
    }
    while (slt32(skip_waves_26321,
                 squot32(sext_i64_i32(segred_group_sizze_18491) +
                         wave_sizze_26302 - 1, wave_sizze_26302))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_26320 = skip_waves_26321 * wave_sizze_26302;
        if (slt32(local_tid_26300 + offset_26320,
                  sext_i64_i32(segred_group_sizze_18491)) && ((local_tid_26300 -
                                                               squot32(local_tid_26300,
                                                                       wave_sizze_26302) *
                                                               wave_sizze_26302) ==
                                                              0 &&
                                                              (squot32(local_tid_26300,
                                                                       wave_sizze_26302) &
                                                               (2 *
                                                                skip_waves_26321 -
                                                                1)) == 0)) {
            // read array element
            {
                x_26315 = ((__local
                            double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300 +
                                                         offset_26320)];
                x_26316 = ((__local
                            double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300 +
                                                         offset_26320)];
            }
            // apply reduction operation
            {
                double defunc_1_op_res_26317 = x_26313 + x_26315;
                double defunc_1_op_res_26318 = x_26314 + x_26316;
                
                x_26313 = defunc_1_op_res_26317;
                x_26314 = defunc_1_op_res_26318;
            }
            // write result of operation
            {
                ((__local
                  double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300)] =
                    x_26313;
                ((__local
                  double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300)] =
                    x_26314;
            }
        }
        skip_waves_26321 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_26300) == (int64_t) 0) {
            x_acc_26310 = x_26313;
            x_acc_26311 = x_26314;
        }
    }
    
    int32_t old_counter_26322;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_26300 == 0) {
            ((__global
              double *) segred_tmp_mem_26294)[sext_i32_i64(group_tid_26301)] =
                x_acc_26310;
            ((__global
              double *) segred_tmp_mem_26296)[sext_i32_i64(group_tid_26301)] =
                x_acc_26311;
            mem_fence_global();
            old_counter_26322 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_26292)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_26304)[(int64_t) 0] =
                old_counter_26322 == num_groups_18492 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_26323;
    
    is_last_group_26323 = ((__local bool *) sync_arr_mem_26304)[(int64_t) 0];
    if (is_last_group_26323) {
        if (local_tid_26300 == 0) {
            old_counter_26322 = atomic_add_i32_global(&((volatile __global
                                                         int *) calculate_objectivezicounter_mem_26292)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_18492));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_26324 = sdiv_up64(num_groups_18492,
                                                      segred_group_sizze_18491);
            
            x_18499 = 0.0;
            x_18502 = 0.0;
            for (int64_t i_26325 = 0; i_26325 < read_per_thread_26324;
                 i_26325++) {
                int64_t group_res_id_26326 = sext_i32_i64(local_tid_26300) *
                        read_per_thread_26324 + i_26325;
                int64_t index_of_group_res_26327 = group_res_id_26326;
                
                if (slt64(group_res_id_26326, num_groups_18492)) {
                    x_18500 = ((__global
                                double *) segred_tmp_mem_26294)[index_of_group_res_26327];
                    x_18503 = ((__global
                                double *) segred_tmp_mem_26296)[index_of_group_res_26327];
                    
                    double defunc_1_op_res_18501 = x_18499 + x_18500;
                    double defunc_1_op_res_18504 = x_18502 + x_18503;
                    
                    x_18499 = defunc_1_op_res_18501;
                    x_18502 = defunc_1_op_res_18504;
                }
            }
        }
        ((__local double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300)] =
            x_18499;
        ((__local double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300)] =
            x_18502;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_26328;
            int32_t skip_waves_26329 = 1;
            double x_26313;
            double x_26314;
            double x_26315;
            double x_26316;
            
            offset_26328 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_26300,
                          sext_i64_i32(segred_group_sizze_18491))) {
                    x_26313 = ((__local
                                double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300 +
                                                             offset_26328)];
                    x_26314 = ((__local
                                double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300 +
                                                             offset_26328)];
                }
            }
            offset_26328 = 1;
            while (slt32(offset_26328, wave_sizze_26302)) {
                if (slt32(local_tid_26300 + offset_26328,
                          sext_i64_i32(segred_group_sizze_18491)) &&
                    ((local_tid_26300 - squot32(local_tid_26300,
                                                wave_sizze_26302) *
                      wave_sizze_26302) & (2 * offset_26328 - 1)) == 0) {
                    // read array element
                    {
                        x_26315 = ((volatile __local
                                    double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300 +
                                                                 offset_26328)];
                        x_26316 = ((volatile __local
                                    double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300 +
                                                                 offset_26328)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_26317 = x_26313 + x_26315;
                        double defunc_1_op_res_26318 = x_26314 + x_26316;
                        
                        x_26313 = defunc_1_op_res_26317;
                        x_26314 = defunc_1_op_res_26318;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300)] =
                            x_26313;
                        ((volatile __local
                          double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300)] =
                            x_26314;
                    }
                }
                offset_26328 *= 2;
            }
            while (slt32(skip_waves_26329,
                         squot32(sext_i64_i32(segred_group_sizze_18491) +
                                 wave_sizze_26302 - 1, wave_sizze_26302))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_26328 = skip_waves_26329 * wave_sizze_26302;
                if (slt32(local_tid_26300 + offset_26328,
                          sext_i64_i32(segred_group_sizze_18491)) &&
                    ((local_tid_26300 - squot32(local_tid_26300,
                                                wave_sizze_26302) *
                      wave_sizze_26302) == 0 && (squot32(local_tid_26300,
                                                         wave_sizze_26302) &
                                                 (2 * skip_waves_26329 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_26315 = ((__local
                                    double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300 +
                                                                 offset_26328)];
                        x_26316 = ((__local
                                    double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300 +
                                                                 offset_26328)];
                    }
                    // apply reduction operation
                    {
                        double defunc_1_op_res_26317 = x_26313 + x_26315;
                        double defunc_1_op_res_26318 = x_26314 + x_26316;
                        
                        x_26313 = defunc_1_op_res_26317;
                        x_26314 = defunc_1_op_res_26318;
                    }
                    // write result of operation
                    {
                        ((__local
                          double *) red_arr_mem_26306)[sext_i32_i64(local_tid_26300)] =
                            x_26313;
                        ((__local
                          double *) red_arr_mem_26308)[sext_i32_i64(local_tid_26300)] =
                            x_26314;
                    }
                }
                skip_waves_26329 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_26300 == 0) {
                    ((__global double *) mem_24506)[(int64_t) 0] = x_26313;
                    ((__global double *) mem_24508)[(int64_t) 0] = x_26314;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_18491
}
__kernel void calculate_objectivezisegred_small_17678(__global
                                                      int *global_failure,
                                                      uint red_arr_mem_25614_backing_offset_0,
                                                      int64_t k_16331,
                                                      int64_t d_16332,
                                                      int64_t n_16334,
                                                      int64_t num_groups_17671,
                                                      int64_t segment_sizze_nonzzero_25607,
                                                      __global
                                                      unsigned char *mem_24324,
                                                      __global
                                                      unsigned char *mem_24328,
                                                      __global
                                                      unsigned char *mem_24334)
{
    #define segred_group_sizze_17670 (calculate_objectivezisegred_group_sizze_17523)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_25614_backing_0 =
                           &shared_mem[red_arr_mem_25614_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25609;
    int32_t local_tid_25610;
    int64_t group_sizze_25613;
    int32_t wave_sizze_25612;
    int32_t group_tid_25611;
    
    global_tid_25609 = get_global_id(0);
    local_tid_25610 = get_local_id(0);
    group_sizze_25613 = get_local_size(0);
    wave_sizze_25612 = LOCKSTEP_WIDTH;
    group_tid_25611 = get_group_id(0);
    
    int32_t phys_tid_17678 = global_tid_25609;
    __local unsigned char *red_arr_mem_25614;
    
    red_arr_mem_25614 = (__local unsigned char *) red_arr_mem_25614_backing_0;
    
    int32_t phys_group_id_25616;
    
    phys_group_id_25616 = get_group_id(0);
    for (int32_t i_25617 = 0; i_25617 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16331 * n_16334 * d_16332,
                                          squot64(segred_group_sizze_17670,
                                                  segment_sizze_nonzzero_25607))) -
                   phys_group_id_25616, sext_i64_i32(num_groups_17671));
         i_25617++) {
        int32_t virt_group_id_25618 = phys_group_id_25616 + i_25617 *
                sext_i64_i32(num_groups_17671);
        int64_t slice_25619 = d_16332;
        int64_t slice_25620 = n_16334 * slice_25619;
        int64_t slice_25621 = k_16331 * slice_25620;
        int64_t gtid_17674 = squot64(squot64(sext_i32_i64(local_tid_25610),
                                             segment_sizze_nonzzero_25607) +
                                     sext_i32_i64(virt_group_id_25618) *
                                     squot64(segred_group_sizze_17670,
                                             segment_sizze_nonzzero_25607),
                                     slice_25620);
        int64_t remnant_25622 = squot64(sext_i32_i64(local_tid_25610),
                                        segment_sizze_nonzzero_25607) +
                sext_i32_i64(virt_group_id_25618) *
                squot64(segred_group_sizze_17670,
                        segment_sizze_nonzzero_25607) - gtid_17674 *
                slice_25620;
        int64_t gtid_17675 = squot64(remnant_25622, slice_25619);
        int64_t remnant_25623 = remnant_25622 - gtid_17675 * slice_25619;
        int64_t gtid_17676 = remnant_25623;
        int64_t remnant_25624 = remnant_25623 - gtid_17676;
        int64_t gtid_17677 = srem64(sext_i32_i64(local_tid_25610), d_16332);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, d_16332) && (((slt64(gtid_17674, k_16331) &&
                                                  slt64(gtid_17675, n_16334)) &&
                                                 slt64(gtid_17676, d_16332)) &&
                                                slt64(sext_i32_i64(local_tid_25610),
                                                      d_16332 *
                                                      squot64(segred_group_sizze_17670,
                                                              segment_sizze_nonzzero_25607)))) {
                double x_17686;
                
                x_17686 = ((__global double *) mem_24324)[gtid_17675 *
                                                          (d_16332 * k_16331) +
                                                          gtid_17674 * d_16332 +
                                                          gtid_17677];
                
                double x_17687;
                
                x_17687 = ((__global double *) mem_24328)[gtid_17674 *
                                                          (d_16332 * d_16332) +
                                                          gtid_17676 * d_16332 +
                                                          gtid_17677];
                
                double defunc_1_f_res_17688 = x_17686 * x_17687;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_25614)[sext_i32_i64(local_tid_25610)] =
                        defunc_1_f_res_17688;
                }
            } else {
                ((__local
                  double *) red_arr_mem_25614)[sext_i32_i64(local_tid_25610)] =
                    0.0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, d_16332)) {
            // perform segmented scan to imitate reduction
            {
                double x_17679;
                double x_17680;
                double x_25625;
                double x_25626;
                bool ltid_in_bounds_25628 = slt64(sext_i32_i64(local_tid_25610),
                                                  d_16332 *
                                                  squot64(segred_group_sizze_17670,
                                                          segment_sizze_nonzzero_25607));
                int32_t skip_threads_25629;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_25628) {
                        x_17680 = ((volatile __local
                                    double *) red_arr_mem_25614)[sext_i32_i64(local_tid_25610)];
                        if ((local_tid_25610 - squot32(local_tid_25610, 32) *
                             32) == 0) {
                            x_17679 = x_17680;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_25629 = 1;
                    while (slt32(skip_threads_25629, 32)) {
                        bool thread_active_25630 = sle32(skip_threads_25629,
                                                         local_tid_25610 -
                                                         squot32(local_tid_25610,
                                                                 32) * 32) &&
                             ltid_in_bounds_25628;
                        
                        if (thread_active_25630) {
                            // read operands
                            {
                                x_17679 = ((volatile __local
                                            double *) red_arr_mem_25614)[sext_i32_i64(local_tid_25610) -
                                                                         sext_i32_i64(skip_threads_25629)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_25631 =
                                 slt64(srem64(sext_i32_i64(local_tid_25610),
                                              d_16332),
                                       sext_i32_i64(local_tid_25610) -
                                       sext_i32_i64(local_tid_25610 -
                                       skip_threads_25629));
                            
                            if (thread_active_25630 && inactive_25631) {
                                x_17679 = x_17680;
                            }
                            if (thread_active_25630) {
                                if (!inactive_25631) {
                                    double defunc_1_op_res_17681 = x_17679 +
                                           x_17680;
                                    
                                    x_17679 = defunc_1_op_res_17681;
                                }
                            }
                        }
                        if (sle32(wave_sizze_25612, skip_threads_25629)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_25630) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25614)[sext_i32_i64(local_tid_25610)] =
                                    x_17679;
                                x_17680 = x_17679;
                            }
                        }
                        if (sle32(wave_sizze_25612, skip_threads_25629)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_25629 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_25610 - squot32(local_tid_25610, 32) * 32) ==
                        31 && ltid_in_bounds_25628) {
                        ((volatile __local
                          double *) red_arr_mem_25614)[sext_i32_i64(squot32(local_tid_25610,
                                                                            32))] =
                            x_17679;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_25632;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_25610, 32) == 0 &&
                            ltid_in_bounds_25628) {
                            x_25626 = ((volatile __local
                                        double *) red_arr_mem_25614)[sext_i32_i64(local_tid_25610)];
                            if ((local_tid_25610 - squot32(local_tid_25610,
                                                           32) * 32) == 0) {
                                x_25625 = x_25626;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_25632 = 1;
                        while (slt32(skip_threads_25632, 32)) {
                            bool thread_active_25633 = sle32(skip_threads_25632,
                                                             local_tid_25610 -
                                                             squot32(local_tid_25610,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_25610, 32) == 0 &&
                                  ltid_in_bounds_25628);
                            
                            if (thread_active_25633) {
                                // read operands
                                {
                                    x_25625 = ((volatile __local
                                                double *) red_arr_mem_25614)[sext_i32_i64(local_tid_25610) -
                                                                             sext_i32_i64(skip_threads_25632)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_25634 =
                                     slt64(srem64(sext_i32_i64(local_tid_25610 *
                                                  32 + 32 - 1), d_16332),
                                           sext_i32_i64(local_tid_25610 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_25610 -
                                                         skip_threads_25632) *
                                           32 + 32 - 1));
                                
                                if (thread_active_25633 && inactive_25634) {
                                    x_25625 = x_25626;
                                }
                                if (thread_active_25633) {
                                    if (!inactive_25634) {
                                        double defunc_1_op_res_25627 = x_25625 +
                                               x_25626;
                                        
                                        x_25625 = defunc_1_op_res_25627;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_25612, skip_threads_25632)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_25633) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_25614)[sext_i32_i64(local_tid_25610)] =
                                        x_25625;
                                    x_25626 = x_25625;
                                }
                            }
                            if (sle32(wave_sizze_25612, skip_threads_25632)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_25632 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_25635 = squot32(local_tid_25610, 32) == 0 ||
                     !ltid_in_bounds_25628;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_25635) {
                            x_17680 = x_17679;
                            x_17679 = ((__local
                                        double *) red_arr_mem_25614)[sext_i32_i64(squot32(local_tid_25610,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_25636 =
                             slt64(srem64(sext_i32_i64(local_tid_25610),
                                          d_16332),
                                   sext_i32_i64(local_tid_25610) -
                                   sext_i32_i64(squot32(local_tid_25610, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_25635) {
                            if (inactive_25636) {
                                x_17679 = x_17680;
                            }
                        }
                        if (!no_carry_in_25635) {
                            if (!inactive_25636) {
                                double defunc_1_op_res_17681 = x_17679 +
                                       x_17680;
                                
                                x_17679 = defunc_1_op_res_17681;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_25635) {
                            ((__local
                              double *) red_arr_mem_25614)[sext_i32_i64(local_tid_25610)] =
                                x_17679;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_25610, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_25614)[sext_i32_i64(local_tid_25610)] =
                            x_17680;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_25618) *
                      squot64(segred_group_sizze_17670,
                              segment_sizze_nonzzero_25607) +
                      sext_i32_i64(local_tid_25610), k_16331 * n_16334 *
                      d_16332) && slt64(sext_i32_i64(local_tid_25610),
                                        squot64(segred_group_sizze_17670,
                                                segment_sizze_nonzzero_25607))) {
                double tmp_25637;
                
                tmp_25637 = ((__local
                              double *) red_arr_mem_25614)[(sext_i32_i64(local_tid_25610) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_25607 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24334)[squot64(sext_i32_i64(virt_group_id_25618) *
                                               squot64(segred_group_sizze_17670,
                                                       segment_sizze_nonzzero_25607) +
                                               sext_i32_i64(local_tid_25610),
                                               n_16334 * d_16332) * (d_16332 *
                                                                     n_16334) +
                                       squot64(sext_i32_i64(virt_group_id_25618) *
                                               squot64(segred_group_sizze_17670,
                                                       segment_sizze_nonzzero_25607) +
                                               sext_i32_i64(local_tid_25610) -
                                               squot64(sext_i32_i64(virt_group_id_25618) *
                                                       squot64(segred_group_sizze_17670,
                                                               segment_sizze_nonzzero_25607) +
                                                       sext_i32_i64(local_tid_25610),
                                                       n_16334 * d_16332) *
                                               (n_16334 * d_16332), d_16332) *
                                       d_16332 +
                                       (sext_i32_i64(virt_group_id_25618) *
                                        squot64(segred_group_sizze_17670,
                                                segment_sizze_nonzzero_25607) +
                                        sext_i32_i64(local_tid_25610) -
                                        squot64(sext_i32_i64(virt_group_id_25618) *
                                                squot64(segred_group_sizze_17670,
                                                        segment_sizze_nonzzero_25607) +
                                                sext_i32_i64(local_tid_25610),
                                                n_16334 * d_16332) * (n_16334 *
                                                                      d_16332) -
                                        squot64(sext_i32_i64(virt_group_id_25618) *
                                                squot64(segred_group_sizze_17670,
                                                        segment_sizze_nonzzero_25607) +
                                                sext_i32_i64(local_tid_25610) -
                                                squot64(sext_i32_i64(virt_group_id_25618) *
                                                        squot64(segred_group_sizze_17670,
                                                                segment_sizze_nonzzero_25607) +
                                                        sext_i32_i64(local_tid_25610),
                                                        n_16334 * d_16332) *
                                                (n_16334 * d_16332), d_16332) *
                                        d_16332)] = tmp_25637;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_17670
}
__kernel void calculate_objectivezisegred_small_17822(__global
                                                      int *global_failure,
                                                      uint red_arr_mem_25721_backing_offset_0,
                                                      int64_t k_16331,
                                                      int64_t d_16332,
                                                      int64_t n_16334,
                                                      int64_t num_groups_17816,
                                                      int64_t segment_sizze_nonzzero_25714,
                                                      __global
                                                      unsigned char *ext_mem_24349,
                                                      __global
                                                      unsigned char *mem_24386)
{
    #define segred_group_sizze_17815 (calculate_objectivezisegred_group_sizze_17756)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_25721_backing_0 =
                           &shared_mem[red_arr_mem_25721_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25716;
    int32_t local_tid_25717;
    int64_t group_sizze_25720;
    int32_t wave_sizze_25719;
    int32_t group_tid_25718;
    
    global_tid_25716 = get_global_id(0);
    local_tid_25717 = get_local_id(0);
    group_sizze_25720 = get_local_size(0);
    wave_sizze_25719 = LOCKSTEP_WIDTH;
    group_tid_25718 = get_group_id(0);
    
    int32_t phys_tid_17822 = global_tid_25716;
    __local unsigned char *red_arr_mem_25721;
    
    red_arr_mem_25721 = (__local unsigned char *) red_arr_mem_25721_backing_0;
    
    int32_t phys_group_id_25723;
    
    phys_group_id_25723 = get_group_id(0);
    for (int32_t i_25724 = 0; i_25724 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16331 * n_16334,
                                          squot64(segred_group_sizze_17815,
                                                  segment_sizze_nonzzero_25714))) -
                   phys_group_id_25723, sext_i64_i32(num_groups_17816));
         i_25724++) {
        int32_t virt_group_id_25725 = phys_group_id_25723 + i_25724 *
                sext_i64_i32(num_groups_17816);
        int64_t slice_25726 = n_16334;
        int64_t slice_25727 = k_16331 * slice_25726;
        int64_t gtid_17819 = squot64(squot64(sext_i32_i64(local_tid_25717),
                                             segment_sizze_nonzzero_25714) +
                                     sext_i32_i64(virt_group_id_25725) *
                                     squot64(segred_group_sizze_17815,
                                             segment_sizze_nonzzero_25714),
                                     slice_25726);
        int64_t remnant_25728 = squot64(sext_i32_i64(local_tid_25717),
                                        segment_sizze_nonzzero_25714) +
                sext_i32_i64(virt_group_id_25725) *
                squot64(segred_group_sizze_17815,
                        segment_sizze_nonzzero_25714) - gtid_17819 *
                slice_25726;
        int64_t gtid_17820 = remnant_25728;
        int64_t remnant_25729 = remnant_25728 - gtid_17820;
        int64_t gtid_17821 = srem64(sext_i32_i64(local_tid_25717), d_16332);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, d_16332) && ((slt64(gtid_17819, k_16331) &&
                                                 slt64(gtid_17820, n_16334)) &&
                                                slt64(sext_i32_i64(local_tid_25717),
                                                      d_16332 *
                                                      squot64(segred_group_sizze_17815,
                                                              segment_sizze_nonzzero_25714)))) {
                double x_17828;
                
                x_17828 = ((__global double *) ext_mem_24349)[gtid_17819 *
                                                              (d_16332 *
                                                               n_16334) +
                                                              gtid_17820 *
                                                              d_16332 +
                                                              gtid_17821];
                
                double defunc_0_f_res_17829 = x_17828 * x_17828;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_25721)[sext_i32_i64(local_tid_25717)] =
                        defunc_0_f_res_17829;
                }
            } else {
                ((__local
                  double *) red_arr_mem_25721)[sext_i32_i64(local_tid_25717)] =
                    0.0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, d_16332)) {
            // perform segmented scan to imitate reduction
            {
                double x_17823;
                double x_17824;
                double x_25730;
                double x_25731;
                bool ltid_in_bounds_25733 = slt64(sext_i32_i64(local_tid_25717),
                                                  d_16332 *
                                                  squot64(segred_group_sizze_17815,
                                                          segment_sizze_nonzzero_25714));
                int32_t skip_threads_25734;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_25733) {
                        x_17824 = ((volatile __local
                                    double *) red_arr_mem_25721)[sext_i32_i64(local_tid_25717)];
                        if ((local_tid_25717 - squot32(local_tid_25717, 32) *
                             32) == 0) {
                            x_17823 = x_17824;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_25734 = 1;
                    while (slt32(skip_threads_25734, 32)) {
                        bool thread_active_25735 = sle32(skip_threads_25734,
                                                         local_tid_25717 -
                                                         squot32(local_tid_25717,
                                                                 32) * 32) &&
                             ltid_in_bounds_25733;
                        
                        if (thread_active_25735) {
                            // read operands
                            {
                                x_17823 = ((volatile __local
                                            double *) red_arr_mem_25721)[sext_i32_i64(local_tid_25717) -
                                                                         sext_i32_i64(skip_threads_25734)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_25736 =
                                 slt64(srem64(sext_i32_i64(local_tid_25717),
                                              d_16332),
                                       sext_i32_i64(local_tid_25717) -
                                       sext_i32_i64(local_tid_25717 -
                                       skip_threads_25734));
                            
                            if (thread_active_25735 && inactive_25736) {
                                x_17823 = x_17824;
                            }
                            if (thread_active_25735) {
                                if (!inactive_25736) {
                                    double defunc_1_op_res_17825 = x_17823 +
                                           x_17824;
                                    
                                    x_17823 = defunc_1_op_res_17825;
                                }
                            }
                        }
                        if (sle32(wave_sizze_25719, skip_threads_25734)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_25735) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25721)[sext_i32_i64(local_tid_25717)] =
                                    x_17823;
                                x_17824 = x_17823;
                            }
                        }
                        if (sle32(wave_sizze_25719, skip_threads_25734)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_25734 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_25717 - squot32(local_tid_25717, 32) * 32) ==
                        31 && ltid_in_bounds_25733) {
                        ((volatile __local
                          double *) red_arr_mem_25721)[sext_i32_i64(squot32(local_tid_25717,
                                                                            32))] =
                            x_17823;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_25737;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_25717, 32) == 0 &&
                            ltid_in_bounds_25733) {
                            x_25731 = ((volatile __local
                                        double *) red_arr_mem_25721)[sext_i32_i64(local_tid_25717)];
                            if ((local_tid_25717 - squot32(local_tid_25717,
                                                           32) * 32) == 0) {
                                x_25730 = x_25731;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_25737 = 1;
                        while (slt32(skip_threads_25737, 32)) {
                            bool thread_active_25738 = sle32(skip_threads_25737,
                                                             local_tid_25717 -
                                                             squot32(local_tid_25717,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_25717, 32) == 0 &&
                                  ltid_in_bounds_25733);
                            
                            if (thread_active_25738) {
                                // read operands
                                {
                                    x_25730 = ((volatile __local
                                                double *) red_arr_mem_25721)[sext_i32_i64(local_tid_25717) -
                                                                             sext_i32_i64(skip_threads_25737)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_25739 =
                                     slt64(srem64(sext_i32_i64(local_tid_25717 *
                                                  32 + 32 - 1), d_16332),
                                           sext_i32_i64(local_tid_25717 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_25717 -
                                                         skip_threads_25737) *
                                           32 + 32 - 1));
                                
                                if (thread_active_25738 && inactive_25739) {
                                    x_25730 = x_25731;
                                }
                                if (thread_active_25738) {
                                    if (!inactive_25739) {
                                        double defunc_1_op_res_25732 = x_25730 +
                                               x_25731;
                                        
                                        x_25730 = defunc_1_op_res_25732;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_25719, skip_threads_25737)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_25738) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_25721)[sext_i32_i64(local_tid_25717)] =
                                        x_25730;
                                    x_25731 = x_25730;
                                }
                            }
                            if (sle32(wave_sizze_25719, skip_threads_25737)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_25737 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_25740 = squot32(local_tid_25717, 32) == 0 ||
                     !ltid_in_bounds_25733;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_25740) {
                            x_17824 = x_17823;
                            x_17823 = ((__local
                                        double *) red_arr_mem_25721)[sext_i32_i64(squot32(local_tid_25717,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_25741 =
                             slt64(srem64(sext_i32_i64(local_tid_25717),
                                          d_16332),
                                   sext_i32_i64(local_tid_25717) -
                                   sext_i32_i64(squot32(local_tid_25717, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_25740) {
                            if (inactive_25741) {
                                x_17823 = x_17824;
                            }
                        }
                        if (!no_carry_in_25740) {
                            if (!inactive_25741) {
                                double defunc_1_op_res_17825 = x_17823 +
                                       x_17824;
                                
                                x_17823 = defunc_1_op_res_17825;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_25740) {
                            ((__local
                              double *) red_arr_mem_25721)[sext_i32_i64(local_tid_25717)] =
                                x_17823;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_25717, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_25721)[sext_i32_i64(local_tid_25717)] =
                            x_17824;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_25725) *
                      squot64(segred_group_sizze_17815,
                              segment_sizze_nonzzero_25714) +
                      sext_i32_i64(local_tid_25717), k_16331 * n_16334) &&
                slt64(sext_i32_i64(local_tid_25717),
                      squot64(segred_group_sizze_17815,
                              segment_sizze_nonzzero_25714))) {
                double tmp_25742;
                
                tmp_25742 = ((__local
                              double *) red_arr_mem_25721)[(sext_i32_i64(local_tid_25717) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_25714 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24386)[squot64(sext_i32_i64(virt_group_id_25725) *
                                               squot64(segred_group_sizze_17815,
                                                       segment_sizze_nonzzero_25714) +
                                               sext_i32_i64(local_tid_25717),
                                               n_16334) * n_16334 +
                                       (sext_i32_i64(virt_group_id_25725) *
                                        squot64(segred_group_sizze_17815,
                                                segment_sizze_nonzzero_25714) +
                                        sext_i32_i64(local_tid_25717) -
                                        squot64(sext_i32_i64(virt_group_id_25725) *
                                                squot64(segred_group_sizze_17815,
                                                        segment_sizze_nonzzero_25714) +
                                                sext_i32_i64(local_tid_25717),
                                                n_16334) * n_16334)] =
                    tmp_25742;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_17815
}
__kernel void calculate_objectivezisegred_small_17886(__global
                                                      int *global_failure,
                                                      uint red_arr_mem_25805_backing_offset_0,
                                                      int64_t k_16331,
                                                      int64_t d_16332,
                                                      int64_t dz2080U_16333,
                                                      int64_t num_groups_17881,
                                                      int64_t segment_sizze_nonzzero_25798,
                                                      __global
                                                      unsigned char *icf_mem_24019,
                                                      __global
                                                      unsigned char *mem_24404)
{
    #define segred_group_sizze_17880 (calculate_objectivezisegred_group_sizze_17863)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_25805_backing_0 =
                           &shared_mem[red_arr_mem_25805_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25800;
    int32_t local_tid_25801;
    int64_t group_sizze_25804;
    int32_t wave_sizze_25803;
    int32_t group_tid_25802;
    
    global_tid_25800 = get_global_id(0);
    local_tid_25801 = get_local_id(0);
    group_sizze_25804 = get_local_size(0);
    wave_sizze_25803 = LOCKSTEP_WIDTH;
    group_tid_25802 = get_group_id(0);
    
    int32_t phys_tid_17886 = global_tid_25800;
    __local unsigned char *red_arr_mem_25805;
    
    red_arr_mem_25805 = (__local unsigned char *) red_arr_mem_25805_backing_0;
    
    int32_t phys_group_id_25807;
    
    phys_group_id_25807 = get_group_id(0);
    for (int32_t i_25808 = 0; i_25808 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16331,
                                          squot64(segred_group_sizze_17880,
                                                  segment_sizze_nonzzero_25798))) -
                   phys_group_id_25807, sext_i64_i32(num_groups_17881));
         i_25808++) {
        int32_t virt_group_id_25809 = phys_group_id_25807 + i_25808 *
                sext_i64_i32(num_groups_17881);
        int64_t slice_25810 = k_16331;
        int64_t gtid_17884 = squot64(sext_i32_i64(local_tid_25801),
                                     segment_sizze_nonzzero_25798) +
                sext_i32_i64(virt_group_id_25809) *
                squot64(segred_group_sizze_17880, segment_sizze_nonzzero_25798);
        int64_t remnant_25811 = squot64(sext_i32_i64(local_tid_25801),
                                        segment_sizze_nonzzero_25798) +
                sext_i32_i64(virt_group_id_25809) *
                squot64(segred_group_sizze_17880,
                        segment_sizze_nonzzero_25798) - gtid_17884;
        int64_t gtid_17885 = srem64(sext_i32_i64(local_tid_25801), d_16332);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, d_16332) && (slt64(gtid_17884, k_16331) &&
                                                slt64(sext_i32_i64(local_tid_25801),
                                                      d_16332 *
                                                      squot64(segred_group_sizze_17880,
                                                              segment_sizze_nonzzero_25798)))) {
                double x_17891;
                
                x_17891 = ((__global double *) icf_mem_24019)[gtid_17884 *
                                                              dz2080U_16333 +
                                                              gtid_17885];
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_25805)[sext_i32_i64(local_tid_25801)] =
                        x_17891;
                }
            } else {
                ((__local
                  double *) red_arr_mem_25805)[sext_i32_i64(local_tid_25801)] =
                    0.0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, d_16332)) {
            // perform segmented scan to imitate reduction
            {
                double x_17887;
                double x_17888;
                double x_25812;
                double x_25813;
                bool ltid_in_bounds_25815 = slt64(sext_i32_i64(local_tid_25801),
                                                  d_16332 *
                                                  squot64(segred_group_sizze_17880,
                                                          segment_sizze_nonzzero_25798));
                int32_t skip_threads_25816;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_25815) {
                        x_17888 = ((volatile __local
                                    double *) red_arr_mem_25805)[sext_i32_i64(local_tid_25801)];
                        if ((local_tid_25801 - squot32(local_tid_25801, 32) *
                             32) == 0) {
                            x_17887 = x_17888;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_25816 = 1;
                    while (slt32(skip_threads_25816, 32)) {
                        bool thread_active_25817 = sle32(skip_threads_25816,
                                                         local_tid_25801 -
                                                         squot32(local_tid_25801,
                                                                 32) * 32) &&
                             ltid_in_bounds_25815;
                        
                        if (thread_active_25817) {
                            // read operands
                            {
                                x_17887 = ((volatile __local
                                            double *) red_arr_mem_25805)[sext_i32_i64(local_tid_25801) -
                                                                         sext_i32_i64(skip_threads_25816)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_25818 =
                                 slt64(srem64(sext_i32_i64(local_tid_25801),
                                              d_16332),
                                       sext_i32_i64(local_tid_25801) -
                                       sext_i32_i64(local_tid_25801 -
                                       skip_threads_25816));
                            
                            if (thread_active_25817 && inactive_25818) {
                                x_17887 = x_17888;
                            }
                            if (thread_active_25817) {
                                if (!inactive_25818) {
                                    double defunc_1_op_res_17889 = x_17887 +
                                           x_17888;
                                    
                                    x_17887 = defunc_1_op_res_17889;
                                }
                            }
                        }
                        if (sle32(wave_sizze_25803, skip_threads_25816)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_25817) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25805)[sext_i32_i64(local_tid_25801)] =
                                    x_17887;
                                x_17888 = x_17887;
                            }
                        }
                        if (sle32(wave_sizze_25803, skip_threads_25816)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_25816 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_25801 - squot32(local_tid_25801, 32) * 32) ==
                        31 && ltid_in_bounds_25815) {
                        ((volatile __local
                          double *) red_arr_mem_25805)[sext_i32_i64(squot32(local_tid_25801,
                                                                            32))] =
                            x_17887;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_25819;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_25801, 32) == 0 &&
                            ltid_in_bounds_25815) {
                            x_25813 = ((volatile __local
                                        double *) red_arr_mem_25805)[sext_i32_i64(local_tid_25801)];
                            if ((local_tid_25801 - squot32(local_tid_25801,
                                                           32) * 32) == 0) {
                                x_25812 = x_25813;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_25819 = 1;
                        while (slt32(skip_threads_25819, 32)) {
                            bool thread_active_25820 = sle32(skip_threads_25819,
                                                             local_tid_25801 -
                                                             squot32(local_tid_25801,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_25801, 32) == 0 &&
                                  ltid_in_bounds_25815);
                            
                            if (thread_active_25820) {
                                // read operands
                                {
                                    x_25812 = ((volatile __local
                                                double *) red_arr_mem_25805)[sext_i32_i64(local_tid_25801) -
                                                                             sext_i32_i64(skip_threads_25819)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_25821 =
                                     slt64(srem64(sext_i32_i64(local_tid_25801 *
                                                  32 + 32 - 1), d_16332),
                                           sext_i32_i64(local_tid_25801 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_25801 -
                                                         skip_threads_25819) *
                                           32 + 32 - 1));
                                
                                if (thread_active_25820 && inactive_25821) {
                                    x_25812 = x_25813;
                                }
                                if (thread_active_25820) {
                                    if (!inactive_25821) {
                                        double defunc_1_op_res_25814 = x_25812 +
                                               x_25813;
                                        
                                        x_25812 = defunc_1_op_res_25814;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_25803, skip_threads_25819)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_25820) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_25805)[sext_i32_i64(local_tid_25801)] =
                                        x_25812;
                                    x_25813 = x_25812;
                                }
                            }
                            if (sle32(wave_sizze_25803, skip_threads_25819)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_25819 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_25822 = squot32(local_tid_25801, 32) == 0 ||
                     !ltid_in_bounds_25815;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_25822) {
                            x_17888 = x_17887;
                            x_17887 = ((__local
                                        double *) red_arr_mem_25805)[sext_i32_i64(squot32(local_tid_25801,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_25823 =
                             slt64(srem64(sext_i32_i64(local_tid_25801),
                                          d_16332),
                                   sext_i32_i64(local_tid_25801) -
                                   sext_i32_i64(squot32(local_tid_25801, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_25822) {
                            if (inactive_25823) {
                                x_17887 = x_17888;
                            }
                        }
                        if (!no_carry_in_25822) {
                            if (!inactive_25823) {
                                double defunc_1_op_res_17889 = x_17887 +
                                       x_17888;
                                
                                x_17887 = defunc_1_op_res_17889;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_25822) {
                            ((__local
                              double *) red_arr_mem_25805)[sext_i32_i64(local_tid_25801)] =
                                x_17887;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_25801, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_25805)[sext_i32_i64(local_tid_25801)] =
                            x_17888;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_25809) *
                      squot64(segred_group_sizze_17880,
                              segment_sizze_nonzzero_25798) +
                      sext_i32_i64(local_tid_25801), k_16331) &&
                slt64(sext_i32_i64(local_tid_25801),
                      squot64(segred_group_sizze_17880,
                              segment_sizze_nonzzero_25798))) {
                double tmp_25824;
                
                tmp_25824 = ((__local
                              double *) red_arr_mem_25805)[(sext_i32_i64(local_tid_25801) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_25798 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24404)[sext_i32_i64(virt_group_id_25809) *
                                       squot64(segred_group_sizze_17880,
                                               segment_sizze_nonzzero_25798) +
                                       sext_i32_i64(local_tid_25801)] =
                    tmp_25824;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_17880
}
__kernel void calculate_objectivezisegred_small_18257(__global
                                                      int *global_failure,
                                                      uint red_arr_mem_25940_backing_offset_0,
                                                      int64_t k_16331,
                                                      int64_t n_16334,
                                                      int64_t num_groups_18251,
                                                      int64_t segment_sizze_nonzzero_25933,
                                                      __global
                                                      unsigned char *alphas_mem_24017,
                                                      __global
                                                      unsigned char *ext_mem_24405,
                                                      __global
                                                      unsigned char *mem_24454,
                                                      __global
                                                      unsigned char *mem_24458,
                                                      __global
                                                      unsigned char *mem_24462)
{
    #define segred_group_sizze_18250 (calculate_objectivezisegred_group_sizze_18092)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_25940_backing_0 =
                           &shared_mem[red_arr_mem_25940_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_25935;
    int32_t local_tid_25936;
    int64_t group_sizze_25939;
    int32_t wave_sizze_25938;
    int32_t group_tid_25937;
    
    global_tid_25935 = get_global_id(0);
    local_tid_25936 = get_local_id(0);
    group_sizze_25939 = get_local_size(0);
    wave_sizze_25938 = LOCKSTEP_WIDTH;
    group_tid_25937 = get_group_id(0);
    
    int32_t phys_tid_18257 = global_tid_25935;
    __local unsigned char *red_arr_mem_25940;
    
    red_arr_mem_25940 = (__local unsigned char *) red_arr_mem_25940_backing_0;
    
    int32_t phys_group_id_25942;
    
    phys_group_id_25942 = get_group_id(0);
    for (int32_t i_25943 = 0; i_25943 <
         sdiv_up32(sext_i64_i32(sdiv_up64(n_16334,
                                          squot64(segred_group_sizze_18250,
                                                  segment_sizze_nonzzero_25933))) -
                   phys_group_id_25942, sext_i64_i32(num_groups_18251));
         i_25943++) {
        int32_t virt_group_id_25944 = phys_group_id_25942 + i_25943 *
                sext_i64_i32(num_groups_18251);
        int64_t slice_25945 = n_16334;
        int64_t gtid_18255 = squot64(sext_i32_i64(local_tid_25936),
                                     segment_sizze_nonzzero_25933) +
                sext_i32_i64(virt_group_id_25944) *
                squot64(segred_group_sizze_18250, segment_sizze_nonzzero_25933);
        int64_t remnant_25946 = squot64(sext_i32_i64(local_tid_25936),
                                        segment_sizze_nonzzero_25933) +
                sext_i32_i64(virt_group_id_25944) *
                squot64(segred_group_sizze_18250,
                        segment_sizze_nonzzero_25933) - gtid_18255;
        int64_t gtid_18256 = srem64(sext_i32_i64(local_tid_25936), k_16331);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, k_16331) && (slt64(gtid_18255, n_16334) &&
                                                slt64(sext_i32_i64(local_tid_25936),
                                                      k_16331 *
                                                      squot64(segred_group_sizze_18250,
                                                              segment_sizze_nonzzero_25933)))) {
                double x_18264;
                
                x_18264 = ((__global double *) mem_24454)[gtid_18255 * k_16331 +
                                                          gtid_18256];
                
                double x_wasfree_18265;
                
                x_wasfree_18265 = ((__global
                                    double *) alphas_mem_24017)[gtid_18256];
                
                double x_wasfree_18266;
                
                x_wasfree_18266 = ((__global
                                    double *) ext_mem_24405)[gtid_18256];
                
                double x_18267 = -0.5 * x_18264;
                double x_18268 = x_wasfree_18265 + x_18267;
                double defunc_0_f_res_18269 = x_wasfree_18266 + x_18268;
                
                // save map-out results
                {
                    ((__global double *) mem_24462)[gtid_18255 * k_16331 +
                                                    gtid_18256] =
                        defunc_0_f_res_18269;
                }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_25940)[sext_i32_i64(local_tid_25936)] =
                        defunc_0_f_res_18269;
                }
            } else {
                ((__local
                  double *) red_arr_mem_25940)[sext_i32_i64(local_tid_25936)] =
                    -INFINITY;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, k_16331)) {
            // perform segmented scan to imitate reduction
            {
                double x_18258;
                double x_18259;
                double x_25947;
                double x_25948;
                bool ltid_in_bounds_25950 = slt64(sext_i32_i64(local_tid_25936),
                                                  k_16331 *
                                                  squot64(segred_group_sizze_18250,
                                                          segment_sizze_nonzzero_25933));
                int32_t skip_threads_25951;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_25950) {
                        x_18259 = ((volatile __local
                                    double *) red_arr_mem_25940)[sext_i32_i64(local_tid_25936)];
                        if ((local_tid_25936 - squot32(local_tid_25936, 32) *
                             32) == 0) {
                            x_18258 = x_18259;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_25951 = 1;
                    while (slt32(skip_threads_25951, 32)) {
                        bool thread_active_25952 = sle32(skip_threads_25951,
                                                         local_tid_25936 -
                                                         squot32(local_tid_25936,
                                                                 32) * 32) &&
                             ltid_in_bounds_25950;
                        
                        if (thread_active_25952) {
                            // read operands
                            {
                                x_18258 = ((volatile __local
                                            double *) red_arr_mem_25940)[sext_i32_i64(local_tid_25936) -
                                                                         sext_i32_i64(skip_threads_25951)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_25953 =
                                 slt64(srem64(sext_i32_i64(local_tid_25936),
                                              k_16331),
                                       sext_i32_i64(local_tid_25936) -
                                       sext_i32_i64(local_tid_25936 -
                                       skip_threads_25951));
                            
                            if (thread_active_25952 && inactive_25953) {
                                x_18258 = x_18259;
                            }
                            if (thread_active_25952) {
                                if (!inactive_25953) {
                                    double defunc_1_op_res_18260 =
                                           fmax64(x_18258, x_18259);
                                    
                                    x_18258 = defunc_1_op_res_18260;
                                }
                            }
                        }
                        if (sle32(wave_sizze_25938, skip_threads_25951)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_25952) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_25940)[sext_i32_i64(local_tid_25936)] =
                                    x_18258;
                                x_18259 = x_18258;
                            }
                        }
                        if (sle32(wave_sizze_25938, skip_threads_25951)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_25951 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_25936 - squot32(local_tid_25936, 32) * 32) ==
                        31 && ltid_in_bounds_25950) {
                        ((volatile __local
                          double *) red_arr_mem_25940)[sext_i32_i64(squot32(local_tid_25936,
                                                                            32))] =
                            x_18258;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_25954;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_25936, 32) == 0 &&
                            ltid_in_bounds_25950) {
                            x_25948 = ((volatile __local
                                        double *) red_arr_mem_25940)[sext_i32_i64(local_tid_25936)];
                            if ((local_tid_25936 - squot32(local_tid_25936,
                                                           32) * 32) == 0) {
                                x_25947 = x_25948;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_25954 = 1;
                        while (slt32(skip_threads_25954, 32)) {
                            bool thread_active_25955 = sle32(skip_threads_25954,
                                                             local_tid_25936 -
                                                             squot32(local_tid_25936,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_25936, 32) == 0 &&
                                  ltid_in_bounds_25950);
                            
                            if (thread_active_25955) {
                                // read operands
                                {
                                    x_25947 = ((volatile __local
                                                double *) red_arr_mem_25940)[sext_i32_i64(local_tid_25936) -
                                                                             sext_i32_i64(skip_threads_25954)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_25956 =
                                     slt64(srem64(sext_i32_i64(local_tid_25936 *
                                                  32 + 32 - 1), k_16331),
                                           sext_i32_i64(local_tid_25936 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_25936 -
                                                         skip_threads_25954) *
                                           32 + 32 - 1));
                                
                                if (thread_active_25955 && inactive_25956) {
                                    x_25947 = x_25948;
                                }
                                if (thread_active_25955) {
                                    if (!inactive_25956) {
                                        double defunc_1_op_res_25949 =
                                               fmax64(x_25947, x_25948);
                                        
                                        x_25947 = defunc_1_op_res_25949;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_25938, skip_threads_25954)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_25955) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_25940)[sext_i32_i64(local_tid_25936)] =
                                        x_25947;
                                    x_25948 = x_25947;
                                }
                            }
                            if (sle32(wave_sizze_25938, skip_threads_25954)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_25954 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_25957 = squot32(local_tid_25936, 32) == 0 ||
                     !ltid_in_bounds_25950;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_25957) {
                            x_18259 = x_18258;
                            x_18258 = ((__local
                                        double *) red_arr_mem_25940)[sext_i32_i64(squot32(local_tid_25936,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_25958 =
                             slt64(srem64(sext_i32_i64(local_tid_25936),
                                          k_16331),
                                   sext_i32_i64(local_tid_25936) -
                                   sext_i32_i64(squot32(local_tid_25936, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_25957) {
                            if (inactive_25958) {
                                x_18258 = x_18259;
                            }
                        }
                        if (!no_carry_in_25957) {
                            if (!inactive_25958) {
                                double defunc_1_op_res_18260 = fmax64(x_18258,
                                                                      x_18259);
                                
                                x_18258 = defunc_1_op_res_18260;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_25957) {
                            ((__local
                              double *) red_arr_mem_25940)[sext_i32_i64(local_tid_25936)] =
                                x_18258;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_25936, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_25940)[sext_i32_i64(local_tid_25936)] =
                            x_18259;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_25944) *
                      squot64(segred_group_sizze_18250,
                              segment_sizze_nonzzero_25933) +
                      sext_i32_i64(local_tid_25936), n_16334) &&
                slt64(sext_i32_i64(local_tid_25936),
                      squot64(segred_group_sizze_18250,
                              segment_sizze_nonzzero_25933))) {
                double tmp_25959;
                
                tmp_25959 = ((__local
                              double *) red_arr_mem_25940)[(sext_i32_i64(local_tid_25936) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_25933 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24458)[sext_i32_i64(virt_group_id_25944) *
                                       squot64(segred_group_sizze_18250,
                                               segment_sizze_nonzzero_25933) +
                                       sext_i32_i64(local_tid_25936)] =
                    tmp_25959;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_18250
}
__kernel void calculate_objectivezisegred_small_18278(__global
                                                      int *global_failure,
                                                      uint red_arr_mem_26008_backing_offset_0,
                                                      int64_t k_16331,
                                                      int64_t n_16334,
                                                      int64_t num_groups_18273,
                                                      int64_t segment_sizze_nonzzero_26001,
                                                      __global
                                                      unsigned char *mem_24458,
                                                      __global
                                                      unsigned char *mem_24462,
                                                      __global
                                                      unsigned char *mem_24466)
{
    #define segred_group_sizze_18272 (calculate_objectivezisegred_group_sizze_18071)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26008_backing_0 =
                           &shared_mem[red_arr_mem_26008_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26003;
    int32_t local_tid_26004;
    int64_t group_sizze_26007;
    int32_t wave_sizze_26006;
    int32_t group_tid_26005;
    
    global_tid_26003 = get_global_id(0);
    local_tid_26004 = get_local_id(0);
    group_sizze_26007 = get_local_size(0);
    wave_sizze_26006 = LOCKSTEP_WIDTH;
    group_tid_26005 = get_group_id(0);
    
    int32_t phys_tid_18278 = global_tid_26003;
    __local unsigned char *red_arr_mem_26008;
    
    red_arr_mem_26008 = (__local unsigned char *) red_arr_mem_26008_backing_0;
    
    int32_t phys_group_id_26010;
    
    phys_group_id_26010 = get_group_id(0);
    for (int32_t i_26011 = 0; i_26011 <
         sdiv_up32(sext_i64_i32(sdiv_up64(n_16334,
                                          squot64(segred_group_sizze_18272,
                                                  segment_sizze_nonzzero_26001))) -
                   phys_group_id_26010, sext_i64_i32(num_groups_18273));
         i_26011++) {
        int32_t virt_group_id_26012 = phys_group_id_26010 + i_26011 *
                sext_i64_i32(num_groups_18273);
        int64_t slice_26013 = n_16334;
        int64_t gtid_18276 = squot64(sext_i32_i64(local_tid_26004),
                                     segment_sizze_nonzzero_26001) +
                sext_i32_i64(virt_group_id_26012) *
                squot64(segred_group_sizze_18272, segment_sizze_nonzzero_26001);
        int64_t remnant_26014 = squot64(sext_i32_i64(local_tid_26004),
                                        segment_sizze_nonzzero_26001) +
                sext_i32_i64(virt_group_id_26012) *
                squot64(segred_group_sizze_18272,
                        segment_sizze_nonzzero_26001) - gtid_18276;
        int64_t gtid_18277 = srem64(sext_i32_i64(local_tid_26004), k_16331);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, k_16331) && (slt64(gtid_18276, n_16334) &&
                                                slt64(sext_i32_i64(local_tid_26004),
                                                      k_16331 *
                                                      squot64(segred_group_sizze_18272,
                                                              segment_sizze_nonzzero_26001)))) {
                double defunc_2_reduce_res_18282;
                
                defunc_2_reduce_res_18282 = ((__global
                                              double *) mem_24458)[gtid_18276];
                
                double x_18284;
                
                x_18284 = ((__global double *) mem_24462)[gtid_18276 * k_16331 +
                                                          gtid_18277];
                
                double exp_arg_18285 = x_18284 - defunc_2_reduce_res_18282;
                double exp_res_18286;
                
                exp_res_18286 = futrts_exp64(exp_arg_18285);
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26004)] =
                        exp_res_18286;
                }
            } else {
                ((__local
                  double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26004)] =
                    0.0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, k_16331)) {
            // perform segmented scan to imitate reduction
            {
                double x_18279;
                double x_18280;
                double x_26015;
                double x_26016;
                bool ltid_in_bounds_26018 = slt64(sext_i32_i64(local_tid_26004),
                                                  k_16331 *
                                                  squot64(segred_group_sizze_18272,
                                                          segment_sizze_nonzzero_26001));
                int32_t skip_threads_26019;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_26018) {
                        x_18280 = ((volatile __local
                                    double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26004)];
                        if ((local_tid_26004 - squot32(local_tid_26004, 32) *
                             32) == 0) {
                            x_18279 = x_18280;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_26019 = 1;
                    while (slt32(skip_threads_26019, 32)) {
                        bool thread_active_26020 = sle32(skip_threads_26019,
                                                         local_tid_26004 -
                                                         squot32(local_tid_26004,
                                                                 32) * 32) &&
                             ltid_in_bounds_26018;
                        
                        if (thread_active_26020) {
                            // read operands
                            {
                                x_18279 = ((volatile __local
                                            double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26004) -
                                                                         sext_i32_i64(skip_threads_26019)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_26021 =
                                 slt64(srem64(sext_i32_i64(local_tid_26004),
                                              k_16331),
                                       sext_i32_i64(local_tid_26004) -
                                       sext_i32_i64(local_tid_26004 -
                                       skip_threads_26019));
                            
                            if (thread_active_26020 && inactive_26021) {
                                x_18279 = x_18280;
                            }
                            if (thread_active_26020) {
                                if (!inactive_26021) {
                                    double defunc_1_op_res_18281 = x_18279 +
                                           x_18280;
                                    
                                    x_18279 = defunc_1_op_res_18281;
                                }
                            }
                        }
                        if (sle32(wave_sizze_26006, skip_threads_26019)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_26020) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26004)] =
                                    x_18279;
                                x_18280 = x_18279;
                            }
                        }
                        if (sle32(wave_sizze_26006, skip_threads_26019)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_26019 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_26004 - squot32(local_tid_26004, 32) * 32) ==
                        31 && ltid_in_bounds_26018) {
                        ((volatile __local
                          double *) red_arr_mem_26008)[sext_i32_i64(squot32(local_tid_26004,
                                                                            32))] =
                            x_18279;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_26022;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_26004, 32) == 0 &&
                            ltid_in_bounds_26018) {
                            x_26016 = ((volatile __local
                                        double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26004)];
                            if ((local_tid_26004 - squot32(local_tid_26004,
                                                           32) * 32) == 0) {
                                x_26015 = x_26016;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_26022 = 1;
                        while (slt32(skip_threads_26022, 32)) {
                            bool thread_active_26023 = sle32(skip_threads_26022,
                                                             local_tid_26004 -
                                                             squot32(local_tid_26004,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_26004, 32) == 0 &&
                                  ltid_in_bounds_26018);
                            
                            if (thread_active_26023) {
                                // read operands
                                {
                                    x_26015 = ((volatile __local
                                                double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26004) -
                                                                             sext_i32_i64(skip_threads_26022)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_26024 =
                                     slt64(srem64(sext_i32_i64(local_tid_26004 *
                                                  32 + 32 - 1), k_16331),
                                           sext_i32_i64(local_tid_26004 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_26004 -
                                                         skip_threads_26022) *
                                           32 + 32 - 1));
                                
                                if (thread_active_26023 && inactive_26024) {
                                    x_26015 = x_26016;
                                }
                                if (thread_active_26023) {
                                    if (!inactive_26024) {
                                        double defunc_1_op_res_26017 = x_26015 +
                                               x_26016;
                                        
                                        x_26015 = defunc_1_op_res_26017;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_26006, skip_threads_26022)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_26023) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26004)] =
                                        x_26015;
                                    x_26016 = x_26015;
                                }
                            }
                            if (sle32(wave_sizze_26006, skip_threads_26022)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_26022 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_26025 = squot32(local_tid_26004, 32) == 0 ||
                     !ltid_in_bounds_26018;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_26025) {
                            x_18280 = x_18279;
                            x_18279 = ((__local
                                        double *) red_arr_mem_26008)[sext_i32_i64(squot32(local_tid_26004,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_26026 =
                             slt64(srem64(sext_i32_i64(local_tid_26004),
                                          k_16331),
                                   sext_i32_i64(local_tid_26004) -
                                   sext_i32_i64(squot32(local_tid_26004, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_26025) {
                            if (inactive_26026) {
                                x_18279 = x_18280;
                            }
                        }
                        if (!no_carry_in_26025) {
                            if (!inactive_26026) {
                                double defunc_1_op_res_18281 = x_18279 +
                                       x_18280;
                                
                                x_18279 = defunc_1_op_res_18281;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_26025) {
                            ((__local
                              double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26004)] =
                                x_18279;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_26004, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_26008)[sext_i32_i64(local_tid_26004)] =
                            x_18280;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_26012) *
                      squot64(segred_group_sizze_18272,
                              segment_sizze_nonzzero_26001) +
                      sext_i32_i64(local_tid_26004), n_16334) &&
                slt64(sext_i32_i64(local_tid_26004),
                      squot64(segred_group_sizze_18272,
                              segment_sizze_nonzzero_26001))) {
                double tmp_26027;
                
                tmp_26027 = ((__local
                              double *) red_arr_mem_26008)[(sext_i32_i64(local_tid_26004) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_26001 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24466)[sext_i32_i64(virt_group_id_26012) *
                                       squot64(segred_group_sizze_18272,
                                               segment_sizze_nonzzero_26001) +
                                       sext_i32_i64(local_tid_26004)] =
                    tmp_26027;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_18272
}
__kernel void calculate_objectivezisegred_small_18482(__global
                                                      int *global_failure,
                                                      uint red_arr_mem_26230_backing_offset_0,
                                                      int64_t k_16331,
                                                      int64_t d_16332,
                                                      int64_t y_17168,
                                                      int64_t num_groups_18477,
                                                      int64_t segment_sizze_nonzzero_26223,
                                                      __global
                                                      unsigned char *mem_24026,
                                                      __global
                                                      unsigned char *mem_24502)
{
    #define segred_group_sizze_18476 (calculate_objectivezisegred_group_sizze_18411)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *red_arr_mem_26230_backing_0 =
                           &shared_mem[red_arr_mem_26230_backing_offset_0];
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_26225;
    int32_t local_tid_26226;
    int64_t group_sizze_26229;
    int32_t wave_sizze_26228;
    int32_t group_tid_26227;
    
    global_tid_26225 = get_global_id(0);
    local_tid_26226 = get_local_id(0);
    group_sizze_26229 = get_local_size(0);
    wave_sizze_26228 = LOCKSTEP_WIDTH;
    group_tid_26227 = get_group_id(0);
    
    int32_t phys_tid_18482 = global_tid_26225;
    __local unsigned char *red_arr_mem_26230;
    
    red_arr_mem_26230 = (__local unsigned char *) red_arr_mem_26230_backing_0;
    
    int32_t phys_group_id_26232;
    
    phys_group_id_26232 = get_group_id(0);
    for (int32_t i_26233 = 0; i_26233 <
         sdiv_up32(sext_i64_i32(sdiv_up64(k_16331,
                                          squot64(segred_group_sizze_18476,
                                                  segment_sizze_nonzzero_26223))) -
                   phys_group_id_26232, sext_i64_i32(num_groups_18477));
         i_26233++) {
        int32_t virt_group_id_26234 = phys_group_id_26232 + i_26233 *
                sext_i64_i32(num_groups_18477);
        int64_t slice_26235 = k_16331;
        int64_t gtid_18480 = squot64(sext_i32_i64(local_tid_26226),
                                     segment_sizze_nonzzero_26223) +
                sext_i32_i64(virt_group_id_26234) *
                squot64(segred_group_sizze_18476, segment_sizze_nonzzero_26223);
        int64_t remnant_26236 = squot64(sext_i32_i64(local_tid_26226),
                                        segment_sizze_nonzzero_26223) +
                sext_i32_i64(virt_group_id_26234) *
                squot64(segred_group_sizze_18476,
                        segment_sizze_nonzzero_26223) - gtid_18480;
        int64_t gtid_18481 = srem64(sext_i32_i64(local_tid_26226), y_17168);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, y_17168) && (slt64(gtid_18480, k_16331) &&
                                                slt64(sext_i32_i64(local_tid_26226),
                                                      y_17168 *
                                                      squot64(segred_group_sizze_18476,
                                                              segment_sizze_nonzzero_26223)))) {
                int64_t binop_x_22077 = y_17168 * gtid_18480;
                int64_t binop_x_22078 = gtid_18481 + binop_x_22077;
                int64_t new_index_22080 = squot64(binop_x_22078, y_17168);
                int64_t binop_y_22088 = y_17168 * new_index_22080;
                int64_t binop_x_22089 = binop_x_22078 - binop_y_22088;
                int64_t new_index_22090 = squot64(binop_x_22089, d_16332);
                int64_t binop_y_22110 = d_16332 * new_index_22090;
                int64_t new_index_22111 = binop_x_22089 - binop_y_22110;
                double x_18487;
                
                x_18487 = ((__global double *) mem_24026)[new_index_22080 *
                                                          (d_16332 * d_16332) +
                                                          new_index_22090 *
                                                          d_16332 +
                                                          new_index_22111];
                
                double defunc_0_f_res_18488 = x_18487 * x_18487;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      double *) red_arr_mem_26230)[sext_i32_i64(local_tid_26226)] =
                        defunc_0_f_res_18488;
                }
            } else {
                ((__local
                  double *) red_arr_mem_26230)[sext_i32_i64(local_tid_26226)] =
                    0.0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, y_17168)) {
            // perform segmented scan to imitate reduction
            {
                double x_18483;
                double x_18484;
                double x_26237;
                double x_26238;
                bool ltid_in_bounds_26240 = slt64(sext_i32_i64(local_tid_26226),
                                                  y_17168 *
                                                  squot64(segred_group_sizze_18476,
                                                          segment_sizze_nonzzero_26223));
                int32_t skip_threads_26241;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_26240) {
                        x_18484 = ((volatile __local
                                    double *) red_arr_mem_26230)[sext_i32_i64(local_tid_26226)];
                        if ((local_tid_26226 - squot32(local_tid_26226, 32) *
                             32) == 0) {
                            x_18483 = x_18484;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_26241 = 1;
                    while (slt32(skip_threads_26241, 32)) {
                        bool thread_active_26242 = sle32(skip_threads_26241,
                                                         local_tid_26226 -
                                                         squot32(local_tid_26226,
                                                                 32) * 32) &&
                             ltid_in_bounds_26240;
                        
                        if (thread_active_26242) {
                            // read operands
                            {
                                x_18483 = ((volatile __local
                                            double *) red_arr_mem_26230)[sext_i32_i64(local_tid_26226) -
                                                                         sext_i32_i64(skip_threads_26241)];
                            }
                        }
                        // perform operation
                        {
                            bool inactive_26243 =
                                 slt64(srem64(sext_i32_i64(local_tid_26226),
                                              y_17168),
                                       sext_i32_i64(local_tid_26226) -
                                       sext_i32_i64(local_tid_26226 -
                                       skip_threads_26241));
                            
                            if (thread_active_26242 && inactive_26243) {
                                x_18483 = x_18484;
                            }
                            if (thread_active_26242) {
                                if (!inactive_26243) {
                                    double defunc_1_op_res_18485 = x_18483 +
                                           x_18484;
                                    
                                    x_18483 = defunc_1_op_res_18485;
                                }
                            }
                        }
                        if (sle32(wave_sizze_26228, skip_threads_26241)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (thread_active_26242) {
                            // write result
                            {
                                ((volatile __local
                                  double *) red_arr_mem_26230)[sext_i32_i64(local_tid_26226)] =
                                    x_18483;
                                x_18484 = x_18483;
                            }
                        }
                        if (sle32(wave_sizze_26228, skip_threads_26241)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_26241 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_26226 - squot32(local_tid_26226, 32) * 32) ==
                        31 && ltid_in_bounds_26240) {
                        ((volatile __local
                          double *) red_arr_mem_26230)[sext_i32_i64(squot32(local_tid_26226,
                                                                            32))] =
                            x_18483;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_26244;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_26226, 32) == 0 &&
                            ltid_in_bounds_26240) {
                            x_26238 = ((volatile __local
                                        double *) red_arr_mem_26230)[sext_i32_i64(local_tid_26226)];
                            if ((local_tid_26226 - squot32(local_tid_26226,
                                                           32) * 32) == 0) {
                                x_26237 = x_26238;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_26244 = 1;
                        while (slt32(skip_threads_26244, 32)) {
                            bool thread_active_26245 = sle32(skip_threads_26244,
                                                             local_tid_26226 -
                                                             squot32(local_tid_26226,
                                                                     32) *
                                                             32) &&
                                 (squot32(local_tid_26226, 32) == 0 &&
                                  ltid_in_bounds_26240);
                            
                            if (thread_active_26245) {
                                // read operands
                                {
                                    x_26237 = ((volatile __local
                                                double *) red_arr_mem_26230)[sext_i32_i64(local_tid_26226) -
                                                                             sext_i32_i64(skip_threads_26244)];
                                }
                            }
                            // perform operation
                            {
                                bool inactive_26246 =
                                     slt64(srem64(sext_i32_i64(local_tid_26226 *
                                                  32 + 32 - 1), y_17168),
                                           sext_i32_i64(local_tid_26226 * 32 +
                                           32 - 1) -
                                           sext_i32_i64((local_tid_26226 -
                                                         skip_threads_26244) *
                                           32 + 32 - 1));
                                
                                if (thread_active_26245 && inactive_26246) {
                                    x_26237 = x_26238;
                                }
                                if (thread_active_26245) {
                                    if (!inactive_26246) {
                                        double defunc_1_op_res_26239 = x_26237 +
                                               x_26238;
                                        
                                        x_26237 = defunc_1_op_res_26239;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_26228, skip_threads_26244)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (thread_active_26245) {
                                // write result
                                {
                                    ((volatile __local
                                      double *) red_arr_mem_26230)[sext_i32_i64(local_tid_26226)] =
                                        x_26237;
                                    x_26238 = x_26237;
                                }
                            }
                            if (sle32(wave_sizze_26228, skip_threads_26244)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_26244 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                
                bool no_carry_in_26247 = squot32(local_tid_26226, 32) == 0 ||
                     !ltid_in_bounds_26240;
                
                // carry-in for every block except the first
                {
                    // read operands
                    {
                        if (!no_carry_in_26247) {
                            x_18484 = x_18483;
                            x_18483 = ((__local
                                        double *) red_arr_mem_26230)[sext_i32_i64(squot32(local_tid_26226,
                                                                                          32)) -
                                                                     (int64_t) 1];
                        }
                    }
                    // perform operation
                    {
                        bool inactive_26248 =
                             slt64(srem64(sext_i32_i64(local_tid_26226),
                                          y_17168),
                                   sext_i32_i64(local_tid_26226) -
                                   sext_i32_i64(squot32(local_tid_26226, 32) *
                                   32 - 1));
                        
                        if (!no_carry_in_26247) {
                            if (inactive_26248) {
                                x_18483 = x_18484;
                            }
                        }
                        if (!no_carry_in_26247) {
                            if (!inactive_26248) {
                                double defunc_1_op_res_18485 = x_18483 +
                                       x_18484;
                                
                                x_18483 = defunc_1_op_res_18485;
                            }
                        }
                    }
                    // write final result
                    {
                        if (!no_carry_in_26247) {
                            ((__local
                              double *) red_arr_mem_26230)[sext_i32_i64(local_tid_26226)] =
                                x_18483;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_26226, 32) == 0) {
                        ((__local
                          double *) red_arr_mem_26230)[sext_i32_i64(local_tid_26226)] =
                            x_18484;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_26234) *
                      squot64(segred_group_sizze_18476,
                              segment_sizze_nonzzero_26223) +
                      sext_i32_i64(local_tid_26226), k_16331) &&
                slt64(sext_i32_i64(local_tid_26226),
                      squot64(segred_group_sizze_18476,
                              segment_sizze_nonzzero_26223))) {
                double tmp_26249;
                
                tmp_26249 = ((__local
                              double *) red_arr_mem_26230)[(sext_i32_i64(local_tid_26226) +
                                                            (int64_t) 1) *
                                                           segment_sizze_nonzzero_26223 -
                                                           (int64_t) 1];
                ((__global
                  double *) mem_24502)[sext_i32_i64(virt_group_id_26234) *
                                       squot64(segred_group_sizze_18476,
                                               segment_sizze_nonzzero_26223) +
                                       sext_i32_i64(local_tid_26226)] =
                    tmp_26249;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_18476
}
__kernel void gpu_map_transpose_f64(const int block_dim0, const int block_dim1,
                                    const int block_dim2,
                                    uint block_9_backing_offset_0,
                                    int32_t destoffset_1, int32_t srcoffset_3,
                                    int32_t num_arrays_4, int32_t x_elems_5,
                                    int32_t y_elems_6, int32_t mulx_7,
                                    int32_t muly_8, __global
                                    unsigned char *destmem_0, __global
                                    unsigned char *srcmem_2)
{
    volatile unsigned char *block_9_backing_0 =
                           &shared_mem[block_9_backing_offset_0];
    __local unsigned char *block_9;
    
    block_9 = (__local unsigned char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 8) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 8) + our_array_offset_30;
    int32_t x_index_31 = get_global_id_0_37;
    int32_t y_index_32 = get_group_id_1_41 * 32 + get_local_id_1_39;
    double val_44;
    
    if (slt32(x_index_31, x_elems_5)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_in_35 = (y_index_32 + j_43 * 8) * x_elems_5 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, y_elems_6)) {
                val_44 = ((__global
                           double *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                               index_in_35)];
                ((__local double *) block_9)[sext_i32_i64((get_local_id_1_39 +
                                                           j_43 * 8) * 33 +
                                             get_local_id_0_38)] = val_44;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 32 + get_local_id_0_38;
    y_index_32 = get_group_id_0_40 * 32 + get_local_id_1_39;
    if (slt32(x_index_31, y_elems_6)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_out_36 = (y_index_32 + j_43 * 8) * y_elems_6 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, x_elems_5)) {
                val_44 = ((__local
                           double *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                              33 + get_local_id_1_39 + j_43 *
                                              8)];
                ((__global double *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                                index_out_36)] = val_44;
            }
        }
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f64_low_height(const int block_dim0, const
                                               int block_dim1, const
                                               int block_dim2,
                                               uint block_9_backing_offset_0,
                                               int32_t destoffset_1,
                                               int32_t srcoffset_3,
                                               int32_t num_arrays_4,
                                               int32_t x_elems_5,
                                               int32_t y_elems_6,
                                               int32_t mulx_7, int32_t muly_8,
                                               __global
                                               unsigned char *destmem_0,
                                               __global unsigned char *srcmem_2)
{
    volatile unsigned char *block_9_backing_0 =
                           &shared_mem[block_9_backing_offset_0];
    __local unsigned char *block_9;
    
    block_9 = (__local unsigned char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 8) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 8) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_0_38 +
            srem32(get_local_id_1_39, mulx_7) * 16;
    int32_t y_index_32 = get_group_id_1_41 * 16 + squot32(get_local_id_1_39,
                                                          mulx_7);
    double val_44;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        val_44 = ((__global double *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                index_in_35)];
        ((__local double *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                     get_local_id_0_38)] = val_44;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 + squot32(get_local_id_0_38, mulx_7);
    y_index_32 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_1_39 +
        srem32(get_local_id_0_38, mulx_7) * 16;
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        val_44 = ((__local double *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                              17 + get_local_id_1_39)];
        ((__global double *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                        index_out_36)] = val_44;
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f64_low_width(const int block_dim0, const
                                              int block_dim1, const
                                              int block_dim2,
                                              uint block_9_backing_offset_0,
                                              int32_t destoffset_1,
                                              int32_t srcoffset_3,
                                              int32_t num_arrays_4,
                                              int32_t x_elems_5,
                                              int32_t y_elems_6, int32_t mulx_7,
                                              int32_t muly_8, __global
                                              unsigned char *destmem_0, __global
                                              unsigned char *srcmem_2)
{
    volatile unsigned char *block_9_backing_0 =
                           &shared_mem[block_9_backing_offset_0];
    __local unsigned char *block_9;
    
    block_9 = (__local unsigned char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 8) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 8) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 + squot32(get_local_id_0_38,
                                                          muly_8);
    int32_t y_index_32 = get_group_id_1_41 * 16 * muly_8 + get_local_id_1_39 +
            srem32(get_local_id_0_38, muly_8) * 16;
    double val_44;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        val_44 = ((__global double *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                index_in_35)];
        ((__local double *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                     get_local_id_0_38)] = val_44;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 * muly_8 + get_local_id_0_38 +
        srem32(get_local_id_1_39, muly_8) * 16;
    y_index_32 = get_group_id_0_40 * 16 + squot32(get_local_id_1_39, muly_8);
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        val_44 = ((__local double *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                              17 + get_local_id_1_39)];
        ((__global double *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                        index_out_36)] = val_44;
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f64_small(uint block_9_backing_offset_0,
                                          int32_t destoffset_1,
                                          int32_t srcoffset_3,
                                          int32_t num_arrays_4,
                                          int32_t x_elems_5, int32_t y_elems_6,
                                          int32_t mulx_7, int32_t muly_8,
                                          __global unsigned char *destmem_0,
                                          __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile unsigned char *block_9_backing_0 =
                           &shared_mem[block_9_backing_offset_0];
    __local unsigned char *block_9;
    
    block_9 = (__local unsigned char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = squot32(get_global_id_0_37, y_elems_6 *
                                          x_elems_5) * (y_elems_6 * x_elems_5);
    int32_t x_index_31 = squot32(srem32(get_global_id_0_37, y_elems_6 *
                                        x_elems_5), y_elems_6);
    int32_t y_index_32 = srem32(get_global_id_0_37, y_elems_6);
    double val_44;
    int32_t odata_offset_33 = squot32(destoffset_1, 8) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 8) + our_array_offset_30;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    int32_t index_out_36 = x_index_31 * y_elems_6 + y_index_32;
    
    if (slt32(get_global_id_0_37, x_elems_5 * y_elems_6 * num_arrays_4)) {
        val_44 = ((__global double *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                index_in_35)];
        ((__global double *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                        index_out_36)] = val_44;
    }
    
  error_0:
    return;
}
